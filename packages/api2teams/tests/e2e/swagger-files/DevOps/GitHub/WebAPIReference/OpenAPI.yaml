openapi: 3.0.0
info:
  title: GitHub Web API Reference
  description: >-
    This is generated documentation using [the GitHubs
    OpenAPI](https://github.blog/2020-07-27-introducing-githubs-openapi-description/),
    providing portable documentation that can be used as part of the API
    integration process. 
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
  - url: http://{{origin}}
tags:
  - name: app
  - name: app > installations
  - name: app > installations > {installation id}
  - name: app > installations > {installation id} > suspended
  - name: applications
  - name: applications > grants
  - name: applications > grants > {grant id}
  - name: applications > {client id}
  - name: applications > {client id} > token
  - name: applications > {client id} > tokens/{access token}
  - name: authorizations
  - name: authorizations > clients/{client id}
  - name: authorizations > {authorization id}
  - name: codes of conduct
  - name: enterprises/{enterprise id}/settings/billing
  - name: gists
  - name: gists > {gist id}
  - name: gists > {gist id} > comments
  - name: gists > {gist id} > comments > {comment id}
  - name: gists > {gist id} > forks
  - name: gists > {gist id} > star
  - name: gitignore/templates
  - name: installation
  - name: licenses
  - name: markdown
  - name: marketplace listing
  - name: marketplace listing > plans
  - name: marketplace listing > stubbed
  - name: marketplace listing > stubbed > plans
  - name: notifications
  - name: notifications > threads/{thread id}
  - name: notifications > threads/{thread id} > subscription
  - name: orgs/{org}
  - name: orgs/{org} > actions
  - name: orgs/{org} > actions > runners
  - name: orgs/{org} > actions > runners > {runner id}
  - name: orgs/{org} > actions > secrets
  - name: orgs/{org} > actions > secrets > {secret name}
  - name: orgs/{org} > actions > secrets > {secret name} > repositories
  - name: >-
      orgs/{org} > actions > secrets > {secret name} > repositories >
      {repository id}
  - name: orgs/{org} > blocks
  - name: orgs/{org} > blocks > {username}
  - name: orgs/{org} > credential-authorizations
  - name: orgs/{org} > hooks
  - name: orgs/{org} > hooks > {hook id}
  - name: orgs/{org} > interaction-limits
  - name: orgs/{org} > invitations
  - name: orgs/{org} > members
  - name: orgs/{org} > members > {username}
  - name: orgs/{org} > memberships/{username}
  - name: orgs/{org} > migrations
  - name: orgs/{org} > migrations > {migration id}
  - name: orgs/{org} > migrations > {migration id} > archive
  - name: orgs/{org} > outside collaborators
  - name: orgs/{org} > outside collaborators > {username}
  - name: orgs/{org} > projects
  - name: orgs/{org} > public members
  - name: orgs/{org} > public members > {username}
  - name: orgs/{org} > repos
  - name: orgs/{org} > settings/billing
  - name: orgs/{org} > teams
  - name: orgs/{org} > teams > {team slug}
  - name: orgs/{org} > teams > {team slug} > discussions
  - name: orgs/{org} > teams > {team slug} > discussions > {discussion number}
  - name: >-
      orgs/{org} > teams > {team slug} > discussions > {discussion number} >
      comments
  - name: >-
      orgs/{org} > teams > {team slug} > discussions > {discussion number} >
      comments > {comment number}
  - name: >-
      orgs/{org} > teams > {team slug} > discussions > {discussion number} >
      comments > {comment number} > reactions
  - name: >-
      orgs/{org} > teams > {team slug} > discussions > {discussion number} >
      reactions
  - name: orgs/{org} > teams > {team slug} > memberships/{username}
  - name: orgs/{org} > teams > {team slug} > projects
  - name: orgs/{org} > teams > {team slug} > projects > {project id}
  - name: orgs/{org} > teams > {team slug} > repos
  - name: orgs/{org} > teams > {team slug} > repos > {owner}/{repo}
  - name: orgs/{org} > teams > {team slug} > team-sync/group-mappings
  - name: projects
  - name: projects > columns
  - name: projects > columns > cards/{card id}
  - name: projects > columns > {column id}
  - name: projects > columns > {column id} > cards
  - name: projects > {project id}
  - name: projects > {project id} > collaborators
  - name: projects > {project id} > collaborators > {username}
  - name: projects > {project id} > columns
  - name: repos
  - name: repos > {owner}/{repo}
  - name: repos > {owner}/{repo} > actions
  - name: repos > {owner}/{repo} > actions > artifacts
  - name: repos > {owner}/{repo} > actions > artifacts > {artifact id}
  - name: repos > {owner}/{repo} > actions > jobs/{job id}
  - name: repos > {owner}/{repo} > actions > runners
  - name: repos > {owner}/{repo} > actions > runners > {runner id}
  - name: repos > {owner}/{repo} > actions > runs
  - name: repos > {owner}/{repo} > actions > runs > {run id}
  - name: repos > {owner}/{repo} > actions > runs > {run id} > logs
  - name: repos > {owner}/{repo} > actions > secrets
  - name: repos > {owner}/{repo} > actions > secrets > {secret name}
  - name: repos > {owner}/{repo} > actions > workflows
  - name: repos > {owner}/{repo} > actions > workflows > {workflow id}
  - name: repos > {owner}/{repo} > assignees
  - name: repos > {owner}/{repo} > automated-security-fixes
  - name: repos > {owner}/{repo} > branches
  - name: repos > {owner}/{repo} > branches > {branch}
  - name: repos > {owner}/{repo} > branches > {branch} > protection
  - name: repos > {owner}/{repo} > branches > {branch} > protection > enforce admins
  - name: >-
      repos > {owner}/{repo} > branches > {branch} > protection > required pull
      request reviews
  - name: >-
      repos > {owner}/{repo} > branches > {branch} > protection > required
      signatures
  - name: >-
      repos > {owner}/{repo} > branches > {branch} > protection > required
      status checks
  - name: >-
      repos > {owner}/{repo} > branches > {branch} > protection > required
      status checks > contexts
  - name: repos > {owner}/{repo} > branches > {branch} > protection > restrictions
  - name: >-
      repos > {owner}/{repo} > branches > {branch} > protection > restrictions >
      apps
  - name: >-
      repos > {owner}/{repo} > branches > {branch} > protection > restrictions >
      teams
  - name: >-
      repos > {owner}/{repo} > branches > {branch} > protection > restrictions >
      users
  - name: repos > {owner}/{repo} > check-runs
  - name: repos > {owner}/{repo} > check-runs > {check run id}
  - name: repos > {owner}/{repo} > check-suites
  - name: repos > {owner}/{repo} > check-suites > {check suite id}
  - name: repos > {owner}/{repo} > code-scanning/alerts
  - name: repos > {owner}/{repo} > collaborators
  - name: repos > {owner}/{repo} > collaborators > {username}
  - name: repos > {owner}/{repo} > comments
  - name: repos > {owner}/{repo} > comments > {comment id}
  - name: repos > {owner}/{repo} > comments > {comment id} > reactions
  - name: repos > {owner}/{repo} > commits
  - name: repos > {owner}/{repo} > commits > {commit sha}
  - name: repos > {owner}/{repo} > commits > {commit sha} > comments
  - name: repos > {owner}/{repo} > commits > {ref}
  - name: repos > {owner}/{repo} > community
  - name: repos > {owner}/{repo} > contents/{path}
  - name: repos > {owner}/{repo} > deployments
  - name: repos > {owner}/{repo} > deployments > {deployment id}
  - name: repos > {owner}/{repo} > deployments > {deployment id} > statuses
  - name: repos > {owner}/{repo} > forks
  - name: repos > {owner}/{repo} > git
  - name: repos > {owner}/{repo} > git > blobs
  - name: repos > {owner}/{repo} > git > commits
  - name: repos > {owner}/{repo} > git > refs
  - name: repos > {owner}/{repo} > git > refs > {ref}
  - name: repos > {owner}/{repo} > git > tags
  - name: repos > {owner}/{repo} > git > trees
  - name: repos > {owner}/{repo} > hooks
  - name: repos > {owner}/{repo} > hooks > {hook id}
  - name: repos > {owner}/{repo} > import
  - name: repos > {owner}/{repo} > import > authors
  - name: repos > {owner}/{repo} > interaction-limits
  - name: repos > {owner}/{repo} > invitations
  - name: repos > {owner}/{repo} > invitations > {invitation id}
  - name: repos > {owner}/{repo} > issues
  - name: repos > {owner}/{repo} > issues > comments
  - name: repos > {owner}/{repo} > issues > comments > {comment id}
  - name: repos > {owner}/{repo} > issues > comments > {comment id} > reactions
  - name: repos > {owner}/{repo} > issues > events
  - name: repos > {owner}/{repo} > issues > {issue number}
  - name: repos > {owner}/{repo} > issues > {issue number} > assignees
  - name: repos > {owner}/{repo} > issues > {issue number} > comments
  - name: repos > {owner}/{repo} > issues > {issue number} > labels
  - name: repos > {owner}/{repo} > issues > {issue number} > lock
  - name: repos > {owner}/{repo} > issues > {issue number} > reactions
  - name: repos > {owner}/{repo} > keys
  - name: repos > {owner}/{repo} > keys > {key id}
  - name: repos > {owner}/{repo} > labels
  - name: repos > {owner}/{repo} > labels > {name}
  - name: repos > {owner}/{repo} > milestones
  - name: repos > {owner}/{repo} > milestones > {milestone number}
  - name: repos > {owner}/{repo} > notifications
  - name: repos > {owner}/{repo} > pages
  - name: repos > {owner}/{repo} > pages > builds
  - name: repos > {owner}/{repo} > projects
  - name: repos > {owner}/{repo} > pulls
  - name: repos > {owner}/{repo} > pulls > comments
  - name: repos > {owner}/{repo} > pulls > comments > {comment id}
  - name: repos > {owner}/{repo} > pulls > comments > {comment id} > reactions
  - name: repos > {owner}/{repo} > pulls > {pull number}
  - name: repos > {owner}/{repo} > pulls > {pull number} > comments
  - name: repos > {owner}/{repo} > pulls > {pull number} > merge
  - name: repos > {owner}/{repo} > pulls > {pull number} > requested reviewers
  - name: repos > {owner}/{repo} > pulls > {pull number} > reviews
  - name: repos > {owner}/{repo} > pulls > {pull number} > reviews > {review id}
  - name: repos > {owner}/{repo} > releases
  - name: repos > {owner}/{repo} > releases > assets/{asset id}
  - name: repos > {owner}/{repo} > releases > {release id}
  - name: repos > {owner}/{repo} > releases > {release id} > assets
  - name: repos > {owner}/{repo} > stats
  - name: repos > {owner}/{repo} > subscription
  - name: repos > {owner}/{repo} > topics
  - name: repos > {owner}/{repo} > traffic
  - name: repos > {owner}/{repo} > traffic > popular
  - name: repos > {owner}/{repo} > vulnerability-alerts
  - name: scim/v2/organizations/{org}/Users
  - name: scim/v2/organizations/{org}/Users > {scim user id}
  - name: search
  - name: teams/{team id}
  - name: teams/{team id} > discussions
  - name: teams/{team id} > discussions > {discussion number}
  - name: teams/{team id} > discussions > {discussion number} > comments
  - name: >-
      teams/{team id} > discussions > {discussion number} > comments > {comment
      number}
  - name: >-
      teams/{team id} > discussions > {discussion number} > comments > {comment
      number} > reactions
  - name: teams/{team id} > discussions > {discussion number} > reactions
  - name: teams/{team id} > members
  - name: teams/{team id} > members > {username}
  - name: teams/{team id} > memberships/{username}
  - name: teams/{team id} > projects
  - name: teams/{team id} > projects > {project id}
  - name: teams/{team id} > repos
  - name: teams/{team id} > repos > {owner}/{repo}
  - name: teams/{team id} > team-sync/group-mappings
  - name: user
  - name: user > blocks
  - name: user > blocks > {username}
  - name: user > emails
  - name: user > following
  - name: user > following > {username}
  - name: user > gpg keys
  - name: user > gpg keys > {gpg key id}
  - name: user > installations
  - name: user > installations > {installation id}/repositories
  - name: user > installations > {installation id}/repositories > {repository id}
  - name: user > keys
  - name: user > keys > {key id}
  - name: user > marketplace purchases
  - name: user > memberships/orgs
  - name: user > memberships/orgs > {org}
  - name: user > migrations
  - name: user > migrations > {migration id}
  - name: user > migrations > {migration id} > archive
  - name: user > repos
  - name: user > repository invitations
  - name: user > repository invitations > {invitation id}
  - name: user > starred
  - name: user > starred > {owner}/{repo}
  - name: users
  - name: users > {username}
  - name: users > {username} > events
  - name: users > {username} > following
  - name: users > {username} > received events
  - name: users > {username} > settings/billing
paths:
  /app/installations/{installation_id}/suspended:
    put:
      tags:
        - app > installations > {installation id} > suspended
      summary: Suspend an app installation
      description: >-
        **Note:** Suspending a GitHub App installation is currently in beta and
        subject to change. Before you can suspend a GitHub App, the app owner
        must enable suspending installations for the app by opting-in to the
        beta. For more information, see "[Suspending a GitHub App
        installation](https://developer.github.com/apps/managing-github-apps/suspending-a-github-app-installation/)."


        Suspends a GitHub App on a user, organization, or business account,
        which blocks the app from accessing the account's resources. When a
        GitHub App is suspended, the app's access to the GitHub API or webhook
        events is blocked for that account.


        To suspend a GitHub App, you must be an account owner or have admin
        permissions in the repository or organization where the app is
        installed.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      requestBody:
        content: {}
      parameters:
        - name: installation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) installation_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - app > installations > {installation id} > suspended
      summary: Unsuspend an app installation
      description: >-
        **Note:** Suspending a GitHub App installation is currently in beta and
        subject to change. Before you can suspend a GitHub App, the app owner
        must enable suspending installations for the app by opting-in to the
        beta. For more information, see "[Suspending a GitHub App
        installation](https://developer.github.com/apps/managing-github-apps/suspending-a-github-app-installation/)."


        Removes a GitHub App installation suspension.


        To unsuspend a GitHub App, you must be an account owner or have admin
        permissions in the repository or organization where the app is installed
        and suspended.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      parameters:
        - name: installation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) installation_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /app/installations/{installation_id}:
    get:
      tags:
        - app > installations > {installation id}
      summary: Get an installation for the authenticated app
      description: >-
        Enables an authenticated GitHub App to find an installation's
        information using the installation id. The installation's account type
        (`target_type`) will be either an organization or a user account,
        depending which account the repository belongs to.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      parameters:
        - name: installation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) installation_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                account:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                access_tokens_url: https://api.github.com/installations/1/access_tokens
                repositories_url: https://api.github.com/installation/repositories
                html_url: >-
                  https://github.com/organizations/github/settings/installations/1
                app_id: 1
                target_id: 1
                target_type: Organization
                permissions:
                  checks: write
                  metadata: read
                  contents: read
                events:
                  - push
                  - pull_request
                single_file_name: config.yml
                repository_selection: selected
                created_at: '2017-07-08T16:18:44-04:00'
                updated_at: '2017-07-08T16:18:44-04:00'
                app_slug: github-actions
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
    delete:
      tags:
        - app > installations > {installation id}
      summary: Delete an installation for the authenticated app
      description: >-
        Uninstalls a GitHub App on a user, organization, or business account. If
        you prefer to temporarily suspend an app's access to your account's
        resources, then we recommend the "[Suspend an app
        installation](https://developer.github.com/v3/apps/#suspend-an-app-installation)"
        endpoint.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      parameters:
        - name: installation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) installation_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /app/installations/{installation_id}/access_tokens:
    post:
      tags:
        - app > installations > {installation id}
      summary: Create an installation access token for an app
      description: >-
        Creates an installation access token that enables a GitHub App to make
        authenticated API requests for the app's installation on an organization
        or individual account. Installation tokens expire one hour from the time
        you create them. Using an expired token produces a status code of `401 -
        Unauthorized`, and requires creating a new installation token. By
        default the installation token has access to all repositories that the
        installation can access. To restrict the access to specific
        repositories, you can provide the `repository_ids` when creating the
        token. When you omit `repository_ids`, the response does not contain the
        `repositories` key.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"repositories\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"repository_ids\": [\n       
                \"<integer>\",\n        \"<integer>\"\n    ],\n   
                \"permissions\": {\n        \"contents\": \"<string>\",\n       
                \"issues\": \"<string>\",\n        \"deployments\":
                \"<string>\",\n        \"single_file\": \"<string>\",\n       
                \"def_not_a_repo\": \"<string>\"\n    }\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: installation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) installation_id parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: v1.1f699f1069f60xxx
                expires_at: '2016-07-11T22:14:10Z'
                permissions:
                  issues: write
                  contents: read
                repository_selection: selected
                repositories:
                  - id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: cillum in anim ut
                documentation_url: ut consectetur in do
                errors:
                  - code: laborum reprehenderit minim qui exercitation
                    resource: laborum nulla laboris
                    field: 'Ut '
                    message: sunt
                    index: 88585021
                    value: Duis sed et
                  - code: voluptate dolor
                    resource: Duis nisi laborum commodo Ut
                    field: pariatur veniam sed
                    message: co
                    index: -75912291
                    value: qui tempor
  /app/installations:
    get:
      tags:
        - app > installations
      summary: List installations for the authenticated app
      description: >-
        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.


        The permissions the installation has are included under the
        `permissions` key.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: outdated
          in: query
          schema:
            type: string
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  account:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  access_tokens_url: https://api.github.com/installations/1/access_tokens
                  repositories_url: https://api.github.com/installation/repositories
                  html_url: >-
                    https://github.com/organizations/github/settings/installations/1
                  app_id: 1
                  target_id: 1
                  target_type: Organization
                  permissions:
                    checks: write
                    metadata: read
                    contents: read
                  events:
                    - push
                    - pull_request
                  single_file_name: config.yml
                  repository_selection: selected
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  app_slug: github-actions
  /app:
    get:
      tags:
        - app
      summary: Get the authenticated app
      description: >-
        Returns the GitHub App associated with the authentication credentials
        used. To see how many app installations are associated with this GitHub
        App, see the `installations_count` in the response. For more details
        about your app's installations, see the "[List installations for the
        authenticated
        app](https://developer.github.com/v3/apps/#list-installations-for-the-authenticated-app)"
        endpoint.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                slug: octoapp
                node_id: MDExOkludGVncmF0aW9uMQ==
                owner:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: true
                name: Octocat App
                description: ''
                external_url: https://example.com
                html_url: https://github.com/apps/octoapp
                created_at: '2017-07-08T16:18:44-04:00'
                updated_at: '2017-07-08T16:18:44-04:00'
                permissions:
                  metadata: read
                  contents: read
                  issues: write
                  single_file: write
                events:
                  - push
                  - pull_request
  /applications/grants/{grant_id}:
    get:
      tags:
        - applications > grants > {grant id}
      summary: Get a single grant
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      parameters:
        - name: grant_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) grant_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/applications/grants/1
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                created_at: '2011-09-06T17:26:27Z'
                updated_at: '2011-09-06T20:39:23Z'
                scopes:
                  - public_repo
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - applications > grants > {grant id}
      summary: Delete a grant
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        Deleting an OAuth application's grant will also delete all OAuth tokens
        associated with the application for your user. Once deleted, the
        application has no access to your account and is no longer listed on
        [the application authorizations settings screen within
        GitHub](https://github.com/settings/applications#authorized).
      parameters:
        - name: grant_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) grant_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /applications/grants:
    get:
      tags:
        - applications > grants
      summary: List your grants
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        You can use this API to list the set of OAuth applications that have
        been granted access to your account. Unlike the [list your
        authorizations](https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations)
        API, this API does not manage individual tokens. This API will return
        one entry for each OAuth application that has been granted access to
        your account, regardless of the number of tokens an application has
        generated for your user. The list of OAuth applications returned matches
        what is shown on [the application authorizations settings screen within
        GitHub](https://github.com/settings/applications#authorized). The
        `scopes` returned are the union of scopes authorized for the
        application. For example, if an application has one token with `repo`
        scope and another token with `user` scope, the grant will return
        `["repo", "user"]`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  url: https://api.github.com/applications/grants/1
                  app:
                    url: http://my-github-app.com
                    name: my github app
                    client_id: abcde12345fghij67890
                  created_at: '2011-09-06T17:26:27Z'
                  updated_at: '2011-09-06T20:39:23Z'
                  scopes:
                    - public_repo
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /applications/{client_id}/token:
    post:
      tags:
        - applications > {client id} > token
      summary: Check a token
      description: >-
        OAuth applications can use a special API method for checking OAuth token
        validity without exceeding the normal rate limits for failed login
        attempts. Authentication works differently with this particular
        endpoint. You must use [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication)
        to use this endpoint, where the username is the OAuth application
        `client_id` and the password is its `client_secret`. Invalid tokens will
        return `404 NOT FOUND`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"access_token\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: abcdefgh12345678
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: jklmnop12345678
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    patch:
      tags:
        - applications > {client id} > token
      summary: Reset a token
      description: >-
        OAuth applications can use this API method to reset a valid OAuth token
        without end-user involvement. Applications must save the "token"
        property in the response because changes take effect immediately. You
        must use [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password. Invalid tokens will
        return `404 NOT FOUND`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"access_token\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: abcdefgh12345678
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: jklmnop12345678
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - applications > {client id} > token
      summary: Delete an app token
      description: >-
        OAuth application owners can revoke a single token for an OAuth
        application. You must use [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /applications/{client_id}/tokens/{access_token}:
    get:
      tags:
        - applications > {client id} > tokens/{access token}
      summary: Check an authorization
      description: >-
        **Deprecation Notice:** GitHub will replace and discontinue OAuth
        endpoints containing `access_token` in the path parameter. We are
        introducing new endpoints that allow you to securely manage tokens for
        OAuth Apps by using `access_token` as an input parameter. The OAuth
        Application API will be removed on May 5, 2021. For more information,
        including scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).


        OAuth applications can use a special API method for checking OAuth token
        validity without exceeding the normal rate limits for failed login
        attempts. Authentication works differently with this particular
        endpoint. You must use [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password. Invalid tokens will
        return `404 NOT FOUND`.
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: access_token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: abcdefgh12345678
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: jklmnop12345678
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - applications > {client id} > tokens/{access token}
      summary: Reset an authorization
      description: >-
        **Deprecation Notice:** GitHub will replace and discontinue OAuth
        endpoints containing `access_token` in the path parameter. We are
        introducing new endpoints that allow you to securely manage tokens for
        OAuth Apps by using `access_token` as an input parameter. The OAuth
        Application API will be removed on May 5, 2021. For more information,
        including scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).


        OAuth applications can use this API method to reset a valid OAuth token
        without end-user involvement. Applications must save the "token"
        property in the response because changes take effect immediately. You
        must use [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password. Invalid tokens will
        return `404 NOT FOUND`.
      requestBody:
        content: {}
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: access_token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: abcdefgh12345678
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: jklmnop12345678
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
    delete:
      tags:
        - applications > {client id} > tokens/{access token}
      summary: Revoke an authorization for an application
      description: >-
        **Deprecation Notice:** GitHub will replace and discontinue OAuth
        endpoints containing `access_token` in the path parameter. We are
        introducing new endpoints that allow you to securely manage tokens for
        OAuth Apps by using `access_token` as an input parameter. The OAuth
        Application API will be removed on May 5, 2021. For more information,
        including scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).


        OAuth application owners can revoke a single token for an OAuth
        application. You must use [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password.
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: access_token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /applications/{client_id}/grant:
    delete:
      tags:
        - applications > {client id}
      summary: Delete an app authorization
      description: >-
        OAuth application owners can revoke a grant for their OAuth application
        and a specific user. You must use [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password. You must also provide
        a valid OAuth `access_token` as an input parameter and the grant for the
        token's owner will be deleted.

        Deleting an OAuth application's grant will also delete all OAuth tokens
        associated with the application for the user. Once deleted, the
        application will have no access to the user's account and will no longer
        be listed on [the application authorizations settings screen within
        GitHub](https://github.com/settings/applications#authorized).
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /applications/{client_id}/grants/{access_token}:
    delete:
      tags:
        - applications > {client id}
      summary: Revoke a grant for an application
      description: >-
        **Deprecation Notice:** GitHub will replace and discontinue OAuth
        endpoints containing `access_token` in the path parameter. We are
        introducing new endpoints that allow you to securely manage tokens for
        OAuth Apps by using `access_token` as an input parameter. The OAuth
        Application API will be removed on May 5, 2021. For more information,
        including scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).


        OAuth application owners can revoke a grant for their OAuth application
        and a specific user. You must use [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password. You must also provide
        a valid token as `:access_token` and the grant for the token's owner
        will be deleted.


        Deleting an OAuth application's grant will also delete all OAuth tokens
        associated with the application for the user. Once deleted, the
        application will have no access to the user's account and will no longer
        be listed on [the Applications settings page under "Authorized OAuth
        Apps" on GitHub](https://github.com/settings/applications#authorized).
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: access_token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /authorizations/clients/{client_id}:
    put:
      tags:
        - authorizations > clients/{client id}
      summary: Get-or-create an authorization for a specific app
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        **Warning:** Apps must use the [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow)
        to obtain OAuth tokens that work with GitHub SAML organizations. OAuth
        tokens created using the Authorizations API will be unable to access
        GitHub SAML organizations. For more information, see the [blog
        post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).


        Creates a new authorization for the specified OAuth application, only if
        an authorization for that application doesn't already exist for the
        user. The URL includes the 20 character client ID for the OAuth app that
        is requesting the token. It returns the user's existing authorization
        for the application if one is present. Otherwise, it creates and returns
        a new one.


        If you have two-factor authentication setup, Basic Authentication for
        this endpoint requires that you use a one-time password (OTP) and your
        username and password instead of tokens. For more information, see
        "[Working with two-factor
        authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication)."


        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"client_secret\": \"<string>\",\n    \"scopes\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"note\": \"<string>\",\n    \"note_url\": \"<string>\",\n   
                \"fingerprint\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: ''
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: ''
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: abcdefgh12345678
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /authorizations/clients/{client_id}/{fingerprint}:
    put:
      tags:
        - authorizations > clients/{client id}
      summary: Get-or-create an authorization for a specific app and fingerprint
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        **Warning:** Apps must use the [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow)
        to obtain OAuth tokens that work with GitHub SAML organizations. OAuth
        tokens created using the Authorizations API will be unable to access
        GitHub SAML organizations. For more information, see the [blog
        post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).


        This method will create a new authorization for the specified OAuth
        application, only if an authorization for that application and
        fingerprint do not already exist for the user. The URL includes the 20
        character client ID for the OAuth app that is requesting the token.
        `fingerprint` is a unique string to distinguish an authorization from
        others created for the same client ID and user. It returns the user's
        existing authorization for the application if one is present. Otherwise,
        it creates and returns a new one.


        If you have two-factor authentication setup, Basic Authentication for
        this endpoint requires that you use a one-time password (OTP) and your
        username and password instead of tokens. For more information, see
        "[Working with two-factor
        authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication)."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"client_secret\": \"<string>\",\n    \"scopes\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"note\": \"<string>\",\n    \"note_url\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: fingerprint
          in: path
          schema:
            type: string
          required: true
          description: (Required) fingerprint parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: ''
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: jklmnop12345678
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: abcdefgh12345678
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: jklmnop12345678
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /authorizations/{authorization_id}:
    get:
      tags:
        - authorizations > {authorization id}
      summary: Get a single authorization
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      parameters:
        - name: authorization_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) authorization_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: ''
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: jklmnop12345678
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - authorizations > {authorization id}
      summary: Update an existing authorization
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        If you have two-factor authentication setup, Basic Authentication for
        this endpoint requires that you use a one-time password (OTP) and your
        username and password instead of tokens. For more information, see
        "[Working with two-factor
        authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication)."


        You can only send one of these scope keys at a time.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"scopes\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"add_scopes\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n   
                \"remove_scopes\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"note\": \"<string>\",\n   
                \"note_url\": \"<string>\",\n    \"fingerprint\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: authorization_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) authorization_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: ''
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: jklmnop12345678
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - authorizations > {authorization id}
      summary: Delete an authorization
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      parameters:
        - name: authorization_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) authorization_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /authorizations:
    get:
      tags:
        - authorizations
      summary: List your authorizations
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  url: https://api.github.com/authorizations/1
                  scopes:
                    - public_repo
                  token: ''
                  token_last_eight: '12345678'
                  hashed_token: >-
                    25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                  app:
                    url: http://my-github-app.com
                    name: my github app
                    client_id: abcde12345fghij67890
                  note: optional note
                  note_url: http://optional/note/url
                  updated_at: '2011-09-06T20:39:23Z'
                  created_at: '2011-09-06T17:26:27Z'
                  fingerprint: jklmnop12345678
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - authorizations
      summary: Create a new authorization
      description: >-
        **Deprecation Notice:** GitHub will discontinue the [OAuth
        Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/), which is
        used by integrations to create personal access tokens and OAuth tokens,
        and you must now create these tokens using our [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/) will be
        removed on November, 13, 2020. For more information, including scheduled
        brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        **Warning:** Apps must use the [web application
        flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow)
        to obtain OAuth tokens that work with GitHub SAML organizations. OAuth
        tokens created using the Authorizations API will be unable to access
        GitHub SAML organizations. For more information, see the [blog
        post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).


        Creates OAuth tokens using [Basic
        Authentication](https://developer.github.com/v3/auth#basic-authentication).
        If you have two-factor authentication setup, Basic Authentication for
        this endpoint requires that you use a one-time password (OTP) and your
        username and password instead of tokens. For more information, see
        "[Working with two-factor
        authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication)."


        To create tokens for a particular OAuth application using this endpoint,
        you must authenticate as the user you want to create an authorization
        for and provide the app's client ID and secret, found on your OAuth
        application's settings page. If your OAuth application intends to create
        multiple tokens for one user, use `fingerprint` to differentiate between
        them.


        You can also create tokens on GitHub from the [personal access tokens
        settings](https://github.com/settings/tokens) page. Read more about
        these tokens in [the GitHub Help
        documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).


        Organizations that enforce SAML SSO require personal access tokens to be
        allowed. Read more about allowing tokens in [the GitHub Help
        documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"scopes\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"note\": \"<string>\",\n   
                \"note_url\": \"<string>\",\n    \"client_id\":
                \"<string>\",\n    \"client_secret\": \"<string>\",\n   
                \"fingerprint\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/authorizations/1
                scopes:
                  - public_repo
                token: abcdefgh12345678
                token_last_eight: '12345678'
                hashed_token: >-
                  25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
                app:
                  url: http://my-github-app.com
                  name: my github app
                  client_id: abcde12345fghij67890
                note: optional note
                note_url: http://optional/note/url
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                fingerprint: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /codes_of_conduct:
    get:
      tags:
        - codes of conduct
      summary: Get all codes of conduct
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - key: citizen_code_of_conduct
                  name: Citizen Code of Conduct
                  url: >-
                    https://api.github.com/codes_of_conduct/citizen_code_of_conduct
                  html_url: http://citizencodeofconduct.org/
                - key: contributor_covenant
                  name: Contributor Covenant
                  url: https://api.github.com/codes_of_conduct/contributor_covenant
                  html_url: >-
                    https://www.contributor-covenant.org/version/2/0/code_of_conduct/
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /codes_of_conduct/{key}:
    get:
      tags:
        - codes of conduct
      summary: Get a code of conduct
      parameters:
        - name: key
          in: path
          schema:
            type: string
          required: true
          description: (Required) key parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key: contributor_covenant
                name: Contributor Covenant
                url: https://api.github.com/codes_of_conduct/contributor_covenant
                body: >
                  # Contributor Covenant Code of Conduct


                  ## Our Pledge


                  In the interest of fostering an open and welcoming
                  environment, we as contributors and maintainers pledge to
                  making participation in our project and our community a
                  harassment-free experience for everyone, regardless of age,
                  body size, disability, ethnicity, gender identity and
                  expression, level of experience, nationality, personal
                  appearance, race, religion, or sexual identity and
                  orientation.


                  ## Our Standards


                  Examples of behavior that contributes to creating a positive
                  environment include:


                  * Using welcoming and inclusive language

                  * Being respectful of differing viewpoints and experiences

                  * Gracefully accepting constructive criticism

                  * Focusing on what is best for the community

                  * Showing empathy towards other community members


                  Examples of unacceptable behavior by participants include:


                  * The use of sexualized language or imagery and unwelcome
                  sexual attention or advances

                  * Trolling, insulting/derogatory comments, and personal or
                  political attacks

                  * Public or private harassment

                  * Publishing others' private information, such as a physical
                  or electronic address, without explicit permission

                  * Other conduct which could reasonably be considered
                  inappropriate in a professional setting


                  ## Our Responsibilities


                  Project maintainers are responsible for clarifying the
                  standards of acceptable behavior and are expected to take
                  appropriate and fair corrective action in response
                                    to any instances of unacceptable behavior.

                  Project maintainers have the right and responsibility to
                  remove, edit, or reject comments, commits, code, wiki edits,
                  issues, and other contributions that are not aligned to this
                  Code of Conduct, or to ban temporarily or permanently any
                  contributor for other behaviors that they deem inappropriate,
                  threatening, offensive, or harmful.


                  ## Scope


                  This Code of Conduct applies both within project spaces and in
                  public spaces when an individual is representing the project
                  or its community. Examples of representing a project or
                  community include using an official project e-mail address,
                                    posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

                  ## Enforcement


                  Instances of abusive, harassing, or otherwise unacceptable
                  behavior may be reported by contacting the project team at
                  [EMAIL]. The project team will review and investigate all
                  complaints, and will respond in a way that it deems
                  appropriate to the circumstances. The project team is
                  obligated to maintain confidentiality with regard to the
                  reporter of an incident. Further details of specific
                  enforcement policies may be posted separately.


                  Project maintainers who do not follow or enforce the Code of
                  Conduct in good faith may face temporary or permanent
                  repercussions as determined by other members of the project's
                  leadership.


                  ## Attribution


                  This Code of Conduct is adapted from the [Contributor
                  Covenant][homepage], version 1.4, available at
                  [http://contributor-covenant.org/version/1/4][version]


                  [homepage]: http://contributor-covenant.org

                  [version]: http://contributor-covenant.org/version/1/4/
                html_url: http://contributor-covenant.org/version/1/4/
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /enterprises/{enterprise_id}/settings/billing/actions:
    get:
      tags:
        - enterprises/{enterprise id}/settings/billing
      summary: Get GitHub Actions billing for an enterprise
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the summary of the free and paid GitHub Actions minutes used.


        Paid minutes only apply to workflows in private repositories that use
        GitHub-hosted runners. Minutes used is listed for each GitHub-hosted
        runner operating system. Any job re-runs are also included in the usage.
        The usage does not include the multiplier for macOS and Windows runners
        and is not rounded up to the nearest whole minute. For more information,
        see "[Managing billing for GitHub
        Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".


        The authenticated user must be an enterprise admin.
      parameters:
        - name: enterprise_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the GitHub Enterprise Cloud
            instance.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_minutes_used: 305
                total_paid_minutes_used: 0
                included_minutes: 3000
                minutes_used_breakdown:
                  UBUNTU: 205
                  MACOS: 10
                  WINDOWS: 90
  /enterprises/{enterprise_id}/settings/billing/packages:
    get:
      tags:
        - enterprises/{enterprise id}/settings/billing
      summary: Get GitHub Packages billing for an enterprise
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the free and paid storage used for GitHub Packages in gigabytes.


        Paid minutes only apply to packages stored for private repositories. For
        more information, see "[Managing billing for GitHub
        Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."


        The authenticated user must be an enterprise admin.
      parameters:
        - name: enterprise_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the GitHub Enterprise Cloud
            instance.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_gigabytes_bandwidth_used: 50
                total_paid_gigabytes_bandwidth_used: 40
                included_gigabytes_bandwidth: 10
  /enterprises/{enterprise_id}/settings/billing/shared-storage:
    get:
      tags:
        - enterprises/{enterprise id}/settings/billing
      summary: Get shared storage billing for an enterprise
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the estimated paid and estimated total storage used for GitHub
        Actions and Github Packages.


        Paid minutes only apply to packages stored for private repositories. For
        more information, see "[Managing billing for GitHub
        Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."


        The authenticated user must be an enterprise admin.
      parameters:
        - name: enterprise_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier of the GitHub Enterprise Cloud
            instance.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                days_left_in_billing_cycle: 20
                estimated_paid_storage_for_month: 15
                estimated_storage_for_month: 40
  /gists/{gist_id}/comments/{comment_id}:
    get:
      tags:
        - gists > {gist id} > comments > {comment id}
      summary: Get a gist comment
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDExOkdpc3RDb21tZW50MQ==
                url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
                body: Just commenting for the sake of commenting
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-18T23:23:56Z'
                updated_at: '2011-04-18T23:23:56Z'
                author_association: collaborator
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                block:
                  reason: qui
                  created_at: sint do
                  html_url: irure ipsum commodo
                message: lab
                documentation_url: nisi enim
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - gists > {gist id} > comments > {comment id}
      summary: Update a gist comment
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDExOkdpc3RDb21tZW50MQ==
                url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
                body: Just commenting for the sake of commenting
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-18T23:23:56Z'
                updated_at: '2011-04-18T23:23:56Z'
                author_association: collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - gists > {gist id} > comments > {comment id}
      summary: Delete a gist comment
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /gists/{gist_id}/comments:
    get:
      tags:
        - gists > {gist id} > comments
      summary: List gist comments
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDExOkdpc3RDb21tZW50MQ==
                  url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
                  body: Just commenting for the sake of commenting
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-18T23:23:56Z'
                  updated_at: '2011-04-18T23:23:56Z'
                  author_association: collaborator
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - gists > {gist id} > comments
      summary: Create a gist comment
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDExOkdpc3RDb21tZW50MQ==
                url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
                body: Just commenting for the sake of commenting
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-18T23:23:56Z'
                updated_at: '2011-04-18T23:23:56Z'
                author_association: collaborator
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /gists/{gist_id}/forks:
    get:
      tags:
        - gists > {gist id} > forks
      summary: List gist forks
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/gists/dee9c42e4998ce2ea439
                  id: dee9c42e4998ce2ea439
                  created_at: '2011-04-14T16:00:49Z'
                  updated_at: '2011-04-14T16:00:49Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - gists > {gist id} > forks
      summary: Fork a gist
      description: '**Note**: This was previously `/gists/:gist_id/fork`.'
      requestBody:
        content: {}
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/gists/aa5a315d61ae9438b18d
                forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                id: aa5a315d61ae9438b18d
                node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                html_url: https://gist.github.com/aa5a315d61ae9438b18d
                files:
                  hello_world.rb:
                    filename: hello_world.rb
                    type: application/x-ruby
                    language: Ruby
                    raw_url: >-
                      https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
                    size: 167
                public: true
                created_at: '2010-04-14T02:15:15Z'
                updated_at: '2011-06-20T11:34:15Z'
                description: Hello World Examples
                comments: 0
                user: null
                comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                truncated: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /gists/{gist_id}/star:
    get:
      tags:
        - gists > {gist id} > star
      summary: Check if a gist is starred
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    put:
      tags:
        - gists > {gist id} > star
      summary: Star a gist
      description: >-
        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."
      requestBody:
        content: {}
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - gists > {gist id} > star
      summary: Unstar a gist
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /gists/{gist_id}:
    get:
      tags:
        - gists > {gist id}
      summary: Get a gist
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/gists/aa5a315d61ae9438b18d
                forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                id: aa5a315d61ae9438b18d
                node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                html_url: https://gist.github.com/aa5a315d61ae9438b18d
                created_at: '2010-04-14T02:15:15Z'
                updated_at: '2011-06-20T11:34:15Z'
                description: Hello World Examples
                comments: 0
                comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                block:
                  reason: qui
                  created_at: sint do
                  html_url: irure ipsum commodo
                message: lab
                documentation_url: nisi enim
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - gists > {gist id}
      summary: Update a gist
      description: >-
        Allows you to update or delete a gist file and rename gist files. Files
        from the previous version of the gist that aren't explicitly changed
        during an edit are unchanged.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"\"schema type not provided\""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/gists/aa5a315d61ae9438b18d
                forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                id: aa5a315d61ae9438b18d
                node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                html_url: https://gist.github.com/aa5a315d61ae9438b18d
                created_at: '2010-04-14T02:15:15Z'
                updated_at: '2011-06-20T11:34:15Z'
                description: Hello World Examples
                comments: 0
                comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - gists > {gist id}
      summary: Delete a gist
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /gists/{gist_id}/commits:
    get:
      tags:
        - gists > {gist id}
      summary: List gist commits
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
                  version: 57a7f021a713b1c5a6a199b54cc514735d2d462f
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  change_status:
                    deletions: 0
                    additions: 180
                    total: 180
                  committed_at: '2010-04-14T02:15:15Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /gists/{gist_id}/{sha}:
    get:
      tags:
        - gists > {gist id}
      summary: Get a gist revision
      parameters:
        - name: gist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gist_id parameter
          example: <string>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) sha parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
                forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                id: aa5a315d61ae9438b18d
                node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                html_url: https://gist.github.com/aa5a315d61ae9438b18d
                created_at: '2010-04-14T02:15:15Z'
                updated_at: '2011-06-20T11:34:15Z'
                description: Hello World Examples
                comments: 0
                comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /gists:
    get:
      tags:
        - gists
      summary: List gists for the authenticated user
      description: >-
        Lists the authenticated user's gists or if called anonymously, this
        endpoint returns all public gists:
      parameters:
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/gists/aa5a315d61ae9438b18d
                  forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                  commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                  id: aa5a315d61ae9438b18d
                  node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                  git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                  git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                  html_url: https://gist.github.com/aa5a315d61ae9438b18d
                  files:
                    hello_world.rb:
                      filename: hello_world.rb
                      type: application/x-ruby
                      language: Ruby
                      raw_url: >-
                        https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
                      size: 167
                  public: true
                  created_at: '2010-04-14T02:15:15Z'
                  updated_at: '2011-06-20T11:34:15Z'
                  description: Hello World Examples
                  comments: 0
                  user: null
                  comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  truncated: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - gists
      summary: Create a gist
      description: >-
        Allows you to add a new gist with one or more files.


        **Note:** Don't name your files "gistfile" with a numerical suffix. This
        is the format of the automatic naming scheme that Gist uses internally.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"files\": \"<object>\",\n    \"description\":
                \"<string>\",\n    \"public\": false\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/gists/aa5a315d61ae9438b18d
                forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                id: aa5a315d61ae9438b18d
                node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                html_url: https://gist.github.com/aa5a315d61ae9438b18d
                created_at: '2010-04-14T02:15:15Z'
                updated_at: '2011-06-20T11:34:15Z'
                description: Hello World Examples
                comments: 0
                comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /gists/public:
    get:
      tags:
        - gists
      summary: List public gists
      description: >-
        List public gists sorted by most recently updated to least recently
        updated.


        Note: With [pagination](https://developer.github.com/v3/#pagination),
        you can fetch up to 3000 gists. For example, you can fetch 100 pages
        with 30 gists per page or 30 pages with 100 gists per page.
      parameters:
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/gists/aa5a315d61ae9438b18d
                  forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                  commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                  id: aa5a315d61ae9438b18d
                  node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                  git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                  git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                  html_url: https://gist.github.com/aa5a315d61ae9438b18d
                  files:
                    hello_world.rb:
                      filename: hello_world.rb
                      type: application/x-ruby
                      language: Ruby
                      raw_url: >-
                        https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
                      size: 167
                  public: true
                  created_at: '2010-04-14T02:15:15Z'
                  updated_at: '2011-06-20T11:34:15Z'
                  description: Hello World Examples
                  comments: 0
                  user: null
                  comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  truncated: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /gists/starred:
    get:
      tags:
        - gists
      summary: List starred gists
      description: 'List the authenticated user''s starred gists:'
      parameters:
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/gists/aa5a315d61ae9438b18d
                  forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                  commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                  id: aa5a315d61ae9438b18d
                  node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                  git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                  git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                  html_url: https://gist.github.com/aa5a315d61ae9438b18d
                  files:
                    hello_world.rb:
                      filename: hello_world.rb
                      type: application/x-ruby
                      language: Ruby
                      raw_url: >-
                        https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
                      size: 167
                  public: true
                  created_at: '2010-04-14T02:15:15Z'
                  updated_at: '2011-06-20T11:34:15Z'
                  description: Hello World Examples
                  comments: 0
                  user: null
                  comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  truncated: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /gitignore/templates:
    get:
      tags:
        - gitignore/templates
      summary: Get all gitignore templates
      description: >-
        List all templates available to pass as an option when [creating a
        repository](https://developer.github.com/v3/repos/#create-a-repository-for-the-authenticated-user).
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - Actionscript
                - Android
                - AppceleratorTitanium
                - Autotools
                - Bancha
                - C
                - C++
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /gitignore/templates/{name}:
    get:
      tags:
        - gitignore/templates
      summary: Get a gitignore template
      description: >-
        The API also allows fetching the source of a single template.

        Use the raw [media type](https://developer.github.com/v3/media/) to get
        the raw contents.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: (Required) name parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: C
                source: |
                  # Object files
                  *.o

                  # Libraries
                  *.lib
                  *.a

                  # Shared objects (inc. Windows DLLs)
                  *.dll
                  *.so
                  *.so.*
                  *.dylib

                  # Executables
                  *.exe
                  *.out
                  *.app
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /installation/repositories:
    get:
      tags:
        - installation
      summary: List repositories accessible to the app installation
      description: >-
        List repositories that an app installation can access.


        You must use an [installation access
        token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation)
        to access this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                repositories:
                  - id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /installation/token:
    delete:
      tags:
        - installation
      summary: Revoke an installation access token
      description: >-
        Revokes the installation token you're using to authenticate as an
        installation and access this endpoint.


        Once an installation token is revoked, the token is invalidated and
        cannot be used. Other endpoints that require the revoked installation
        token must have a new installation token to work. You can create a new
        token using the "[Create an installation access token for an
        app](https://developer.github.com/v3/apps/#create-an-installation-access-token-for-an-app)"
        endpoint.


        You must use an [installation access
        token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation)
        to access this endpoint.
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /licenses:
    get:
      tags:
        - licenses
      summary: Get all commonly used licenses
      parameters:
        - name: featured
          in: query
          schema:
            type: string
          example: <boolean>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - key: mit
                  name: MIT License
                  spdx_id: MIT
                  url: https://api.github.com/licenses/mit
                  node_id: MDc6TGljZW5zZW1pdA==
                - key: lgpl-3.0
                  name: GNU Lesser General Public License v3.0
                  spdx_id: LGPL-3.0
                  url: https://api.github.com/licenses/lgpl-3.0
                  node_id: MDc6TGljZW5zZW1pdA==
                - key: mpl-2.0
                  name: Mozilla Public License 2.0
                  spdx_id: MPL-2.0
                  url: https://api.github.com/licenses/mpl-2.0
                  node_id: MDc6TGljZW5zZW1pdA==
                - key: agpl-3.0
                  name: GNU Affero General Public License v3.0
                  spdx_id: AGPL-3.0
                  url: https://api.github.com/licenses/agpl-3.0
                  node_id: MDc6TGljZW5zZW1pdA==
                - key: unlicense
                  name: The Unlicense
                  spdx_id: Unlicense
                  url: https://api.github.com/licenses/unlicense
                  node_id: MDc6TGljZW5zZW1pdA==
                - key: apache-2.0
                  name: Apache License 2.0
                  spdx_id: Apache-2.0
                  url: https://api.github.com/licenses/apache-2.0
                  node_id: MDc6TGljZW5zZW1pdA==
                - key: gpl-3.0
                  name: GNU General Public License v3.0
                  spdx_id: GPL-3.0
                  url: https://api.github.com/licenses/gpl-3.0
                  node_id: MDc6TGljZW5zZW1pdA==
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /licenses/{license}:
    get:
      tags:
        - licenses
      summary: Get a license
      parameters:
        - name: license
          in: path
          schema:
            type: string
          required: true
          description: (Required) license parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key: mit
                name: MIT License
                spdx_id: MIT
                url: https://api.github.com/licenses/mit
                node_id: MDc6TGljZW5zZW1pdA==
                html_url: http://choosealicense.com/licenses/mit/
                description: >-
                  A permissive license that is short and to the point. It lets
                  people do anything with your code with proper attribution and
                  without warranty.
                implementation: >-
                  Create a text file (typically named LICENSE or LICENSE.txt) in
                  the root of your source code and copy the text of the license
                  into the file. Replace [year] with the current year and
                  [fullname] with the name (or names) of the copyright holders.
                permissions:
                  - commercial-use
                  - modifications
                  - distribution
                  - sublicense
                  - private-use
                conditions:
                  - include-copyright
                limitations:
                  - no-liability
                body: >


                  The MIT License (MIT)


                  Copyright (c) [year] [fullname]


                  Permission is hereby granted, free of charge, to any person
                  obtaining a copy

                  of this software and associated documentation files (the
                  "Software"), to deal

                  in the Software without restriction, including without
                  limitation the rights

                  to use, copy, modify, merge, publish, distribute, sublicense,
                  and/or sell

                  copies of the Software, and to permit persons to whom the
                  Software is

                  furnished to do so, subject to the following conditions:


                  The above copyright notice and this permission notice shall be
                  included in all

                  copies or substantial portions of the Software.


                  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
                  KIND, EXPRESS OR

                  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
                  MERCHANTABILITY,

                  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
                  EVENT SHALL THE

                  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
                  OR OTHER

                  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
                  OTHERWISE, ARISING FROM,

                  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
                  DEALINGS IN THE

                  SOFTWARE.
                featured: true
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /markdown:
    post:
      tags:
        - markdown
      summary: Render a Markdown document
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"text\": \"<string>\",\n    \"mode\":
                \"markdown\",\n    \"context\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Length:
              schema:
                type: string
                example: anim
            X-CommonMarker-Version:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /markdown/raw:
    post:
      tags:
        - markdown
      summary: Render a Markdown document in raw mode
      description: >-
        You must send Markdown as plain text (using a `Content-Type` header of
        `text/plain` or `text/x-markdown`) to this endpoint, rather than using
        JSON format. In raw mode, [GitHub Flavored
        Markdown](https://github.github.com/gfm/) is not supported and Markdown
        will be rendered in plain format like a README.md file. Markdown content
        must be 400 KB or less.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"\"<string>\""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: text/plain
      responses:
        '200':
          description: OK
          headers:
            X-CommonMarker-Version:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: text/html
          content:
            text/plain:
              schema:
                type: string
              example: anim
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /marketplace_listing/plans:
    get:
      tags:
        - marketplace listing > plans
      summary: List plans
      description: >-
        Lists all plans that are part of your GitHub Marketplace listing.


        GitHub Apps must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint. OAuth Apps must use [basic
        authentication](https://developer.github.com/v3/auth/#basic-authentication)
        with their client ID and client secret to access this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/marketplace_listing/plans/1313
                  accounts_url: >-
                    https://api.github.com/marketplace_listing/plans/1313/accounts
                  id: 1313
                  number: 3
                  name: Pro
                  description: A professional-grade CI solution
                  monthly_price_in_cents: 1099
                  yearly_price_in_cents: 11870
                  price_model: flat-rate
                  has_free_trial: true
                  unit_name: null
                  state: published
                  bullets:
                    - Up to 25 private repositories
                    - 11 concurrent builds
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /marketplace_listing/plans/{plan_id}/accounts:
    get:
      tags:
        - marketplace listing > plans
      summary: List accounts for a plan
      description: >-
        Returns user and organization accounts associated with the specified
        plan, including free plans. For per-seat pricing, you see the list of
        accounts that have purchased the plan, including the number of seats
        purchased. When someone submits a plan change that won't be processed
        until the end of their billing cycle, you will also see the upcoming
        pending change.


        GitHub Apps must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint. OAuth Apps must use [basic
        authentication](https://developer.github.com/v3/auth/#basic-authentication)
        with their client ID and client secret to access this endpoint.
      parameters:
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            One of `created` (when the repository was starred) or `updated`
            (when it was last pushed to).
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: >-
            To return the oldest accounts first, set to `asc`. Can be one of
            `asc` or `desc`. Ignored without the `sort` parameter.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: plan_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) plan_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/orgs/github
                  type: Organization
                  id: 4
                  login: github
                  organization_billing_email: billing@github.com
                  marketplace_pending_change:
                    effective_date: '2017-11-11T00:00:00Z'
                    unit_count: null
                    id: 77
                    plan:
                      url: https://api.github.com/marketplace_listing/plans/1111
                      accounts_url: >-
                        https://api.github.com/marketplace_listing/plans/1111/accounts
                      id: 1111
                      number: 2
                      name: Startup
                      description: A professional-grade CI solution
                      monthly_price_in_cents: 699
                      yearly_price_in_cents: 7870
                      price_model: flat-rate
                      has_free_trial: true
                      state: published
                      unit_name: null
                      bullets:
                        - Up to 10 private repositories
                        - 3 concurrent builds
                  marketplace_purchase:
                    billing_cycle: monthly
                    next_billing_date: '2017-11-11T00:00:00Z'
                    unit_count: null
                    on_free_trial: true
                    free_trial_ends_on: '2017-11-11T00:00:00Z'
                    updated_at: '2017-11-02T01:12:12Z'
                    plan:
                      url: https://api.github.com/marketplace_listing/plans/1313
                      accounts_url: >-
                        https://api.github.com/marketplace_listing/plans/1313/accounts
                      id: 1313
                      number: 3
                      name: Pro
                      description: A professional-grade CI solution
                      monthly_price_in_cents: 1099
                      yearly_price_in_cents: 11870
                      price_model: flat-rate
                      has_free_trial: true
                      unit_name: null
                      state: published
                      bullets:
                        - Up to 25 private repositories
                        - 11 concurrent builds
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /marketplace_listing/stubbed/plans:
    get:
      tags:
        - marketplace listing > stubbed > plans
      summary: List plans (stubbed)
      description: >-
        Lists all plans that are part of your GitHub Marketplace listing.


        GitHub Apps must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint. OAuth Apps must use [basic
        authentication](https://developer.github.com/v3/auth/#basic-authentication)
        with their client ID and client secret to access this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/marketplace_listing/plans/1313
                  accounts_url: >-
                    https://api.github.com/marketplace_listing/plans/1313/accounts
                  id: 1313
                  number: 3
                  name: Pro
                  description: A professional-grade CI solution
                  monthly_price_in_cents: 1099
                  yearly_price_in_cents: 11870
                  price_model: flat-rate
                  has_free_trial: true
                  unit_name: null
                  state: published
                  bullets:
                    - Up to 25 private repositories
                    - 11 concurrent builds
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /marketplace_listing/stubbed/plans/{plan_id}/accounts:
    get:
      tags:
        - marketplace listing > stubbed > plans
      summary: List accounts for a plan (stubbed)
      description: >-
        Returns repository and organization accounts associated with the
        specified plan, including free plans. For per-seat pricing, you see the
        list of accounts that have purchased the plan, including the number of
        seats purchased. When someone submits a plan change that won't be
        processed until the end of their billing cycle, you will also see the
        upcoming pending change.


        GitHub Apps must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint. OAuth Apps must use [basic
        authentication](https://developer.github.com/v3/auth/#basic-authentication)
        with their client ID and client secret to access this endpoint.
      parameters:
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            One of `created` (when the repository was starred) or `updated`
            (when it was last pushed to).
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: >-
            To return the oldest accounts first, set to `asc`. Can be one of
            `asc` or `desc`. Ignored without the `sort` parameter.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: plan_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) plan_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/orgs/github
                  type: Organization
                  id: 4
                  login: github
                  organization_billing_email: billing@github.com
                  marketplace_pending_change:
                    effective_date: '2017-11-11T00:00:00Z'
                    unit_count: null
                    id: 77
                    plan:
                      url: https://api.github.com/marketplace_listing/plans/1111
                      accounts_url: >-
                        https://api.github.com/marketplace_listing/plans/1111/accounts
                      id: 1111
                      number: 2
                      name: Startup
                      description: A professional-grade CI solution
                      monthly_price_in_cents: 699
                      yearly_price_in_cents: 7870
                      price_model: flat-rate
                      has_free_trial: true
                      state: published
                      unit_name: null
                      bullets:
                        - Up to 10 private repositories
                        - 3 concurrent builds
                  marketplace_purchase:
                    billing_cycle: monthly
                    next_billing_date: '2017-11-11T00:00:00Z'
                    unit_count: null
                    on_free_trial: true
                    free_trial_ends_on: '2017-11-11T00:00:00Z'
                    updated_at: '2017-11-02T01:12:12Z'
                    plan:
                      url: https://api.github.com/marketplace_listing/plans/1313
                      accounts_url: >-
                        https://api.github.com/marketplace_listing/plans/1313/accounts
                      id: 1313
                      number: 3
                      name: Pro
                      description: A professional-grade CI solution
                      monthly_price_in_cents: 1099
                      yearly_price_in_cents: 11870
                      price_model: flat-rate
                      has_free_trial: true
                      unit_name: null
                      state: published
                      bullets:
                        - Up to 25 private repositories
                        - 11 concurrent builds
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /marketplace_listing/stubbed/accounts/{account_id}:
    get:
      tags:
        - marketplace listing > stubbed
      summary: Get a subscription plan for an account (stubbed)
      description: >-
        Shows whether the user or organization account actively subscribes to a
        plan listed by the authenticated GitHub App. When someone submits a plan
        change that won't be processed until the end of their billing cycle, you
        will also see the upcoming pending change.


        GitHub Apps must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint. OAuth Apps must use [basic
        authentication](https://developer.github.com/v3/auth/#basic-authentication)
        with their client ID and client secret to access this endpoint.
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) account_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/orgs/github
                type: Organization
                id: 4
                login: github
                organization_billing_email: billing@github.com
                marketplace_pending_change:
                  effective_date: '2017-11-11T00:00:00Z'
                  unit_count: null
                  id: 77
                  plan:
                    url: https://api.github.com/marketplace_listing/plans/1111
                    accounts_url: >-
                      https://api.github.com/marketplace_listing/plans/1111/accounts
                    id: 1111
                    number: 2
                    name: Startup
                    description: A professional-grade CI solution
                    monthly_price_in_cents: 699
                    yearly_price_in_cents: 7870
                    price_model: flat-rate
                    has_free_trial: true
                    state: published
                    unit_name: null
                    bullets:
                      - Up to 10 private repositories
                      - 3 concurrent builds
                marketplace_purchase:
                  billing_cycle: monthly
                  next_billing_date: '2017-11-11T00:00:00Z'
                  unit_count: null
                  on_free_trial: true
                  free_trial_ends_on: '2017-11-11T00:00:00Z'
                  updated_at: '2017-11-02T01:12:12Z'
                  plan:
                    url: https://api.github.com/marketplace_listing/plans/1313
                    accounts_url: >-
                      https://api.github.com/marketplace_listing/plans/1313/accounts
                    id: 1313
                    number: 3
                    name: Pro
                    description: A professional-grade CI solution
                    monthly_price_in_cents: 1099
                    yearly_price_in_cents: 11870
                    price_model: flat-rate
                    has_free_trial: true
                    unit_name: null
                    state: published
                    bullets:
                      - Up to 25 private repositories
                      - 11 concurrent builds
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /marketplace_listing/accounts/{account_id}:
    get:
      tags:
        - marketplace listing
      summary: Get a subscription plan for an account
      description: >-
        Shows whether the user or organization account actively subscribes to a
        plan listed by the authenticated GitHub App. When someone submits a plan
        change that won't be processed until the end of their billing cycle, you
        will also see the upcoming pending change.


        GitHub Apps must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint. OAuth Apps must use [basic
        authentication](https://developer.github.com/v3/auth/#basic-authentication)
        with their client ID and client secret to access this endpoint.
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) account_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/orgs/github
                type: Organization
                id: 4
                login: github
                organization_billing_email: billing@github.com
                marketplace_pending_change:
                  effective_date: '2017-11-11T00:00:00Z'
                  unit_count: null
                  id: 77
                  plan:
                    url: https://api.github.com/marketplace_listing/plans/1111
                    accounts_url: >-
                      https://api.github.com/marketplace_listing/plans/1111/accounts
                    id: 1111
                    number: 2
                    name: Startup
                    description: A professional-grade CI solution
                    monthly_price_in_cents: 699
                    yearly_price_in_cents: 7870
                    price_model: flat-rate
                    has_free_trial: true
                    state: published
                    unit_name: null
                    bullets:
                      - Up to 10 private repositories
                      - 3 concurrent builds
                marketplace_purchase:
                  billing_cycle: monthly
                  next_billing_date: '2017-11-11T00:00:00Z'
                  unit_count: null
                  on_free_trial: true
                  free_trial_ends_on: '2017-11-11T00:00:00Z'
                  updated_at: '2017-11-02T01:12:12Z'
                  plan:
                    url: https://api.github.com/marketplace_listing/plans/1313
                    accounts_url: >-
                      https://api.github.com/marketplace_listing/plans/1313/accounts
                    id: 1313
                    number: 3
                    name: Pro
                    description: A professional-grade CI solution
                    monthly_price_in_cents: 1099
                    yearly_price_in_cents: 11870
                    price_model: flat-rate
                    has_free_trial: true
                    unit_name: null
                    state: published
                    bullets:
                      - Up to 25 private repositories
                      - 11 concurrent builds
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /notifications/threads/{thread_id}/subscription:
    get:
      tags:
        - notifications > threads/{thread id} > subscription
      summary: Get a thread subscription for the authenticated user
      description: >-
        This checks to see if the current user is subscribed to a thread. You
        can also [get a repository
        subscription](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription).


        Note that subscriptions are only generated if a user is participating in
        a conversation--for example, they've replied to the thread, were
        **@mentioned**, or manually subscribe to a thread.
      parameters:
        - name: thread_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                subscribed: true
                ignored: false
                reason: null
                created_at: '2012-10-06T21:34:12Z'
                url: https://api.github.com/notifications/threads/1/subscription
                thread_url: https://api.github.com/notifications/threads/1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - notifications > threads/{thread id} > subscription
      summary: Set a thread subscription
      description: >-
        If you are watching a repository, you receive notifications for all
        threads by default. Use this endpoint to ignore future notifications for
        threads until you comment on the thread or get an **@mention**.


        You can also use this endpoint to subscribe to threads that you are
        currently not receiving notifications for or to subscribed to threads
        that you have previously ignored.


        Unsubscribing from a conversation in a repository that you are not
        watching is functionally equivalent to the [Delete a thread
        subscription](https://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription)
        endpoint.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"ignored\": false\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: thread_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                subscribed: true
                ignored: false
                reason: null
                created_at: '2012-10-06T21:34:12Z'
                url: https://api.github.com/notifications/threads/1/subscription
                thread_url: https://api.github.com/notifications/threads/1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - notifications > threads/{thread id} > subscription
      summary: Delete a thread subscription
      description: >-
        Mutes all future notifications for a conversation until you comment on
        the thread or get an **@mention**. If you are watching the repository of
        the thread, you will still receive notifications. To ignore future
        notifications for a repository you are watching, use the [Set a thread
        subscription](https://developer.github.com/v3/activity/notifications/#set-a-thread-subscription)
        endpoint and set `ignore` to `true`.
      parameters:
        - name: thread_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /notifications/threads/{thread_id}:
    get:
      tags:
        - notifications > threads/{thread id}
      summary: Get a thread
      parameters:
        - name: thread_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1'
                repository:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                subject:
                  title: Greetings
                  url: https://api.github.com/repos/octokit/octokit.rb/issues/123
                  latest_comment_url: >-
                    https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
                  type: Issue
                reason: subscribed
                unread: true
                updated_at: '2014-11-07T22:01:45Z'
                last_read_at: '2014-11-07T22:01:45Z'
                url: https://api.github.com/notifications/threads/1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - notifications > threads/{thread id}
      summary: Mark a thread as read
      requestBody:
        content: {}
      parameters:
        - name: thread_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread_id parameter
          example: <integer>
      responses:
        '205':
          description: Reset Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /notifications:
    get:
      tags:
        - notifications
      summary: List notifications for the authenticated user
      description: >-
        List all notifications for the current user, sorted by most recently
        updated.
      parameters:
        - name: all
          in: query
          schema:
            type: boolean
          description: If `true`, show notifications marked as read.
          example: 'false'
        - name: participating
          in: query
          schema:
            type: boolean
          description: >-
            If `true`, only shows notifications in which the user is directly
            participating or mentioned.
          example: 'false'
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: before
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated before the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1'
                  repository:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                  subject:
                    title: Greetings
                    url: https://api.github.com/repos/octokit/octokit.rb/issues/123
                    latest_comment_url: >-
                      https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
                    type: Issue
                  reason: subscribed
                  unread: true
                  updated_at: '2014-11-07T22:01:45Z'
                  last_read_at: '2014-11-07T22:01:45Z'
                  url: https://api.github.com/notifications/threads/1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    put:
      tags:
        - notifications
      summary: Mark notifications as read
      description: >-
        Marks all notifications as "read" removes it from the [default view on
        GitHub](https://github.com/notifications). If the number of
        notifications is too large to complete in one request, you will receive
        a `202 Accepted` status and GitHub will run an asynchronous process to
        mark notifications as "read." To check whether any "unread"
        notifications remain, you can use the [List notifications for the
        authenticated
        user](https://developer.github.com/v3/activity/notifications/#list-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"last_read_at\": \"<dateTime>\",\n    \"read\":
                \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: sed aliqua mollit cillum anim
        '205':
          description: Reset Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/actions/runners/{runner_id}:
    get:
      tags:
        - orgs/{org} > actions > runners > {runner id}
      summary: Get a self-hosted runner for an organization
      description: >-
        **Warning:** The self-hosted runners API for organizations is currently
        in public beta and subject to change.


        Gets a specific self-hosted runner for an organization. You must
        authenticate using an access token with the `admin:org` scope to use
        this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: runner_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) runner_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 23
                name: MBP
                os: macos
                status: online
    delete:
      tags:
        - orgs/{org} > actions > runners > {runner id}
      summary: Delete a self-hosted runner from an organization
      description: >-
        **Warning:** The self-hosted runners API for organizations is currently
        in public beta and subject to change.


        Forces the removal of a self-hosted runner from an organization. You can
        use this endpoint to completely remove the runner when the machine you
        were using no longer exists. You must authenticate using an access token
        with the `admin:org` scope to use this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: runner_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) runner_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/actions/runners:
    get:
      tags:
        - orgs/{org} > actions > runners
      summary: List self-hosted runners for an organization
      description: >-
        **Warning:** The self-hosted runners API for organizations is currently
        in public beta and subject to change.


        Lists all self-hosted runners for an organization. You must authenticate
        using an access token with the `admin:org` scope to use this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 2
                runners:
                  - id: 23
                    name: MBP
                    os: macos
                    status: online
                  - id: 24
                    name: iMac
                    os: macos
                    status: offline
  /orgs/{org}/actions/runners/downloads:
    get:
      tags:
        - orgs/{org} > actions > runners
      summary: List runner applications for an organization
      description: >-
        **Warning:** The self-hosted runners API for organizations is currently
        in public beta and subject to change.


        Lists binaries for the runner application that you can download and run.
        You must authenticate using an access token with the `admin:org` scope
        to use this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - os: osx
                  architecture: x64
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz
                  filename: actions-runner-osx-x64-2.164.0.tar.gz
                - os: linux
                  architecture: x64
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz
                  filename: actions-runner-linux-x64-2.164.0.tar.gz
                - os: linux
                  architecture: arm
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz
                  filename: actions-runner-linux-arm-2.164.0.tar.gz
                - os: win
                  architecture: x64
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip
                  filename: actions-runner-win-x64-2.164.0.zip
                - os: linux
                  architecture: arm64
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz
                  filename: actions-runner-linux-arm64-2.164.0.tar.gz
  /orgs/{org}/actions/runners/registration-token:
    post:
      tags:
        - orgs/{org} > actions > runners
      summary: Create a registration token for an organization
      description: >-
        **Warning:** The self-hosted runners API for organizations is currently
        in public beta and subject to change.



        Returns a token that you can pass to the `config` script. The token
        expires after one hour. You must authenticate

        using an access token with the `admin:org` scope to use this endpoint.


        #### Example using registration token


        Configure your self-hosted runner, replacing `TOKEN` with the
        registration token provided by this endpoint.


        ```

        ./config.sh --url https://github.com/octo-org --token TOKEN

        ```
      requestBody:
        content: {}
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: LLBF3JGZDX3P5PMEXLND6TS6FCWO6
                expires_at: '2020-01-22T12:13:35.123-08:00'
  /orgs/{org}/actions/runners/remove-token:
    post:
      tags:
        - orgs/{org} > actions > runners
      summary: Create a remove token for an organization
      description: >-
        **Warning:** The self-hosted runners API for organizations is currently
        in public beta and subject to change.



        Returns a token that you can pass to the `config` script to remove a
        self-hosted runner from an organization. The

        token expires after one hour. You must authenticate using an access
        token with the `admin:org` scope to use this

        endpoint.


        #### Example using remove token


        To remove your self-hosted runner from an organization, replace `TOKEN`
        with the remove token provided by this

        endpoint.


        ```

        ./config.sh remove --token TOKEN

        ```
      requestBody:
        content: {}
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: AABF3JGZDX3P5PMEXLND6TS6FCWO6
                expires_at: '2020-01-29T12:13:35.123-08:00'
  /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}:
    put:
      tags:
        - >-
          orgs/{org} > actions > secrets > {secret name} > repositories >
          {repository id}
      summary: Add selected repository to an organization secret
      description: >-
        Adds a repository to an organization secret when the `visibility` for
        repository access is set to `selected`. The visibility is set when you
        [Create or update an organization
        secret](https://developer.github.com/v3/actions/secrets/#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope
        to use this endpoint. GitHub Apps must have the `secrets` organization
        permission to use this endpoint.
      requestBody:
        content: {}
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
        - name: repository_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) repository_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - >-
          orgs/{org} > actions > secrets > {secret name} > repositories >
          {repository id}
      summary: Remove selected repository from an organization secret
      description: >-
        Removes a repository from an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when
        you [Create or update an organization
        secret](https://developer.github.com/v3/actions/secrets/#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope
        to use this endpoint. GitHub Apps must have the `secrets` organization
        permission to use this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
        - name: repository_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) repository_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/actions/secrets/{secret_name}/repositories:
    get:
      tags:
        - orgs/{org} > actions > secrets > {secret name} > repositories
      summary: List selected repositories for an organization secret
      description: >-
        Lists all repositories that have been selected when the `visibility` for
        repository access to a secret is set to `selected`. You must
        authenticate using an access token with the `admin:org` scope to use
        this endpoint. GitHub Apps must have the `secrets` organization
        permission to use this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                repositories:
                  - id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
    put:
      tags:
        - orgs/{org} > actions > secrets > {secret name} > repositories
      summary: Set selected repositories for an organization secret
      description: >-
        Replaces all repositories for an organization secret when the
        `visibility` for repository access is set to `selected`. The visibility
        is set when you [Create or update an organization
        secret](https://developer.github.com/v3/actions/secrets/#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope
        to use this endpoint. GitHub Apps must have the `secrets` organization
        permission to use this endpoint.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"selected_repository_ids\": [\n       
                \"<integer>\",\n        \"<integer>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/actions/secrets/{secret_name}:
    get:
      tags:
        - orgs/{org} > actions > secrets > {secret name}
      summary: Get an organization secret
      description: >-
        Gets a single organization secret without revealing its encrypted value.
        You must authenticate using an access token with the `admin:org` scope
        to use this endpoint. GitHub Apps must have the `secrets` organization
        permission to use this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: GH_TOKEN
                created_at: '2019-08-10T14:59:22Z'
                updated_at: '2020-01-10T14:59:22Z'
                visibility: selected
                selected_repositories_url: >-
                  https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories
    put:
      tags:
        - orgs/{org} > actions > secrets > {secret name}
      summary: Create or update an organization secret
      description: >-
        Creates or updates an organization secret with an encrypted value.
        Encrypt your secret using

        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages).
        You must authenticate using an access

        token with the `admin:org` scope to use this endpoint. GitHub Apps must
        have the `secrets` organization permission to

        use this endpoint.


        #### Example encrypting a secret using Node.js


        Encrypt your secret using the
        [tweetsodium](https://github.com/github/tweetsodium) library.


        ```

        const sodium = require('tweetsodium');


        const key = "base64-encoded-public-key";

        const value = "plain-text-secret";


        // Convert the message and key to Uint8Array's (Buffer implements that
        interface)

        const messageBytes = Buffer.from(value);

        const keyBytes = Buffer.from(key, 'base64');


        // Encrypt using LibSodium.

        const encryptedBytes = sodium.seal(messageBytes, keyBytes);


        // Base64 the encrypted secret

        const encrypted = Buffer.from(encryptedBytes).toString('base64');


        console.log(encrypted);

        ```



        #### Example encrypting a secret using Python


        Encrypt your secret using
        [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox)
        with Python 3.


        ```

        from base64 import b64encode

        from nacl import encoding, public


        def encrypt(public_key: str, secret_value: str) -> str:
          """Encrypt a Unicode string using the public key."""
          public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
          sealed_box = public.SealedBox(public_key)
          encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
          return b64encode(encrypted).decode("utf-8")
        ```


        #### Example encrypting a secret using C#


        Encrypt your secret using the
        [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.


        ```

        var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");

        var publicKey =
        Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");


        var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue,
        publicKey);


        Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));

        ```


        #### Example encrypting a secret using Ruby


        Encrypt your secret using the
        [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.


        ```ruby

        require "rbnacl"

        require "base64"


        key = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")

        public_key = RbNaCl::PublicKey.new(key)


        box = RbNaCl::Boxes::Sealed.from_public_key(public_key)

        encrypted_secret = box.encrypt("my_secret")


        # Print the base64 encoded secret

        puts Base64.strict_encode64(encrypted_secret)

        ```
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"encrypted_value\": \"<string>\",\n    \"key_id\":
                \"<string>\",\n    \"visibility\": \"<string>\",\n   
                \"selected_repository_ids\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - orgs/{org} > actions > secrets > {secret name}
      summary: Delete an organization secret
      description: >-
        Deletes a secret in an organization using the secret name. You must
        authenticate using an access token with the `admin:org` scope to use
        this endpoint. GitHub Apps must have the `secrets` organization
        permission to use this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/actions/secrets:
    get:
      tags:
        - orgs/{org} > actions > secrets
      summary: List organization secrets
      description: >-
        Lists all secrets available in an organization without revealing their
        encrypted values. You must authenticate using an access token with the
        `admin:org` scope to use this endpoint. GitHub Apps must have the
        `secrets` organization permission to use this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 3
                secrets:
                  - name: GIST_ID
                    created_at: '2019-08-10T14:59:22Z'
                    updated_at: '2020-01-10T14:59:22Z'
                    visibility: private
                  - name: DEPLOY_TOKEN
                    created_at: '2019-08-10T14:59:22Z'
                    updated_at: '2020-01-10T14:59:22Z'
                    visibility: all
                  - name: GH_TOKEN
                    created_at: '2019-08-10T14:59:22Z'
                    updated_at: '2020-01-10T14:59:22Z'
                    visibility: selected
                    selected_repositories_url: >-
                      https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories
  /orgs/{org}/actions/secrets/public-key:
    get:
      tags:
        - orgs/{org} > actions > secrets
      summary: Get an organization public key
      description: >-
        Gets your public key, which you need to encrypt secrets. You need to
        encrypt a secret before you can create or update secrets. You must
        authenticate using an access token with the `admin:org` scope to use
        this endpoint. GitHub Apps must have the `secrets` organization
        permission to use this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key_id: '012345678912345678'
                key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
  /orgs/{org}/blocks/{username}:
    get:
      tags:
        - orgs/{org} > blocks > {username}
      summary: Check if a user is blocked by an organization
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - orgs/{org} > blocks > {username}
      summary: Block a user from an organization
      requestBody:
        content: {}
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - orgs/{org} > blocks > {username}
      summary: Unblock a user from an organization
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/blocks:
    get:
      tags:
        - orgs/{org} > blocks
      summary: List users blocked by an organization
      description: List the users blocked by an organization.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /orgs/{org}/credential-authorizations:
    get:
      tags:
        - orgs/{org} > credential-authorizations
      summary: List SAML SSO authorizations for an organization
      description: >-
        Listing and deleting credential authorizations is available to
        organizations with GitHub Enterprise Cloud. For more information, see
        [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products).


        An authenticated organization owner with the `read:org` scope can list
        all credential authorizations for an organization that uses SAML single
        sign-on (SSO). The credentials are either personal access tokens or SSH
        keys that organization members have authorized for the organization. For
        more information, see [About authentication with SAML single
        sign-on](https://help.github.com/en/articles/about-authentication-with-saml-single-sign-on).
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  credential_id: 161195
                  credential_type: personal access token
                  token_last_eight: 71c3fc11
                  credential_authorized_at: '2011-01-26T19:06:43Z'
                  scopes:
                    - user
                    - repo
                - login: hubot
                  credential_id: 161196
                  credential_type: personal access token
                  token_last_eight: '12345678'
                  credential_authorized_at: '2019-03-29T19:06:43Z'
                  scopes:
                    - repo
  /orgs/{org}/credential-authorizations/{credential_id}:
    delete:
      tags:
        - orgs/{org} > credential-authorizations
      summary: Remove a SAML SSO authorization for an organization
      description: >-
        Listing and deleting credential authorizations is available to
        organizations with GitHub Enterprise Cloud. For more information, see
        [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products).


        An authenticated organization owner with the `admin:org` scope can
        remove a credential authorization for an organization that uses SAML
        SSO. Once you remove someone's credential authorization, they will need
        to create a new personal access token or SSH key and authorize it for
        the organization they want to access.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: credential_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) credential_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/hooks/{hook_id}:
    get:
      tags:
        - orgs/{org} > hooks > {hook id}
      summary: Get an organization webhook
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/orgs/octocat/hooks/1
                ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
                name: web
                events:
                  - push
                  - pull_request
                active: true
                config:
                  url: http://example.com
                  content_type: json
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                type: Organization
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - orgs/{org} > hooks > {hook id}
      summary: Update an organization webhook
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"config\": {\n        \"url\": \"<string>\",\n       
                \"content_type\": \"<string>\",\n        \"secret\":
                \"<string>\",\n        \"insecure_ssl\": \"<string>\"\n   
                },\n    \"events\": [\n        \"push\"\n    ],\n    \"active\":
                true,\n    \"name\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/orgs/octocat/hooks/1
                ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
                name: web
                events:
                  - pull_request
                active: true
                config:
                  url: http://example.com
                  content_type: json
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                type: Organization
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - orgs/{org} > hooks > {hook id}
      summary: Delete an organization webhook
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/hooks/{hook_id}/pings:
    post:
      tags:
        - orgs/{org} > hooks > {hook id}
      summary: Ping an organization webhook
      description: >-
        This will trigger a [ping
        event](https://developer.github.com/webhooks/#ping-event) to be sent to
        the hook.
      requestBody:
        content: {}
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/hooks:
    get:
      tags:
        - orgs/{org} > hooks
      summary: List organization webhooks
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  url: https://api.github.com/orgs/octocat/hooks/1
                  ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
                  name: web
                  events:
                    - push
                    - pull_request
                  active: true
                  config:
                    url: http://example.com
                    content_type: json
                  updated_at: '2011-09-06T20:39:23Z'
                  created_at: '2011-09-06T17:26:27Z'
                  type: Organization
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - orgs/{org} > hooks
      summary: Create an organization webhook
      description: 'Here''s how you can create a hook that posts payloads in JSON format:'
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"config\": {\n       
                \"url\": \"<string>\",\n        \"content_type\":
                \"<string>\",\n        \"secret\": \"<string>\",\n       
                \"insecure_ssl\": \"<string>\",\n        \"username\":
                \"<string>\",\n        \"password\": \"<string>\"\n    },\n   
                \"events\": [\n        \"push\"\n    ],\n    \"active\":
                true\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                url: https://api.github.com/orgs/octocat/hooks/1
                ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
                name: web
                events:
                  - push
                  - pull_request
                active: true
                config:
                  url: http://example.com
                  content_type: json
                updated_at: '2011-09-06T20:39:23Z'
                created_at: '2011-09-06T17:26:27Z'
                type: Organization
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /orgs/{org}/interaction-limits:
    get:
      tags:
        - orgs/{org} > interaction-limits
      summary: Get interaction restrictions for an organization
      description: >-
        Shows which group of GitHub users can interact with this organization
        and when the restriction expires. If there are no restrictions, you will
        see an empty response.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                limit: collaborators_only
                origin: organization
                expires_at: '2018-08-17T04:18:39Z'
    put:
      tags:
        - orgs/{org} > interaction-limits
      summary: Set interaction restrictions for an organization
      description: >-
        Temporarily restricts interactions to certain GitHub users in any public
        repository in the given organization. You must be an organization owner
        to set these restrictions.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"limit\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                limit: collaborators_only
                origin: organization
                expires_at: '2018-08-17T04:18:39Z'
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - orgs/{org} > interaction-limits
      summary: Remove interaction restrictions for an organization
      description: >-
        Removes all interaction restrictions from public repositories in the
        given organization. You must be an organization owner to remove
        restrictions.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/invitations:
    get:
      tags:
        - orgs/{org} > invitations
      summary: List pending organization invitations
      description: >-
        The return hash contains a `role` field which refers to the Organization
        Invitation role and will be one of the following values:
        `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or
        `reinstate`. If the invitee is not a GitHub member, the `login` field in
        the return hash will be `null`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  login: monalisa
                  email: octocat@github.com
                  role: direct_member
                  created_at: '2016-11-30T06:46:10-08:00'
                  inviter:
                    login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                  team_count: 2
                  invitation_team_url: https://api.github.com/organizations/2/invitations/1/teams
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - orgs/{org} > invitations
      summary: Create an organization invitation
      description: >-
        Invite people to an organization by using their GitHub user ID or their
        email address. In order to create invitations in an organization, the
        authenticated user must be an organization owner.


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"invitee_id\": \"<integer>\",\n    \"email\":
                \"<string>\",\n    \"role\": \"direct_member\",\n   
                \"team_ids\": [\n        \"<integer>\",\n       
                \"<integer>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                login: monalisa
                email: octocat@github.com
                role: direct_member
                created_at: '2016-11-30T06:46:10-08:00'
                inviter:
                  login: other_user
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/other_user_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/other_user
                  html_url: https://github.com/other_user
                  followers_url: https://api.github.com/users/other_user/followers
                  following_url: >-
                    https://api.github.com/users/other_user/following{/other_user}
                  gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                  starred_url: >-
                    https://api.github.com/users/other_user/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/other_user/subscriptions
                  organizations_url: https://api.github.com/users/other_user/orgs
                  repos_url: https://api.github.com/users/other_user/repos
                  events_url: https://api.github.com/users/other_user/events{/privacy}
                  received_events_url: https://api.github.com/users/other_user/received_events
                  type: User
                  site_admin: false
                team_count: 2
                invitation_team_url: https://api.github.com/organizations/2/invitations/1/teams
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /orgs/{org}/invitations/{invitation_id}/teams:
    get:
      tags:
        - orgs/{org} > invitations
      summary: List organization invitation teams
      description: >-
        List all teams associated with an invitation. In order to see
        invitations in an organization, the authenticated user must be an
        organization owner.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: invitation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) invitation_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://api.github.com/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/members/{username}:
    get:
      tags:
        - orgs/{org} > members > {username}
      summary: Check organization membership for a user
      description: Check if a user is, publicly or privately, a member of the organization.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - orgs/{org} > members > {username}
      summary: Remove an organization member
      description: >-
        Removing a user from this list will remove them from all teams and they
        will no longer have any access to the organization's repositories.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/members:
    get:
      tags:
        - orgs/{org} > members
      summary: List organization members
      description: >-
        List all users who are members of an organization. If the authenticated
        user is also a member of this organization then both concealed and
        public members will be returned.
      parameters:
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Filter members returned in the list. Can be one of:  

            \* `2fa_disabled` - Members without [two-factor
            authentication](https://github.com/blog/1614-two-factor-authentication)
            enabled. Available for organization owners.  

            \* `all` - All members the authenticated user can see.
          example: all
        - name: role
          in: query
          schema:
            type: string
          description: |-
            Filter members returned by their role. Can be one of:  
            \* `all` - All members of the organization, regardless of role.  
            \* `admin` - Organization owners.  
            \* `member` - Non-owner organization members.
          example: all
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /orgs/{org}/memberships/{username}:
    get:
      tags:
        - orgs/{org} > memberships/{username}
      summary: Get organization membership for a user
      description: >-
        In order to get a user's membership with an organization, the
        authenticated user must be an organization member.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/orgs/octocat/memberships/defunkt
                state: active
                role: admin
                organization_url: https://api.github.com/orgs/octocat
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - orgs/{org} > memberships/{username}
      summary: Set organization membership for a user
      description: >-
        Only authenticated organization owners can add a member to the
        organization or update the member's role.


        *   If the authenticated user is _adding_ a member to the organization,
        the invited user will receive an email inviting them to the
        organization. The user's [membership
        status](https://developer.github.com/v3/orgs/members/#get-organization-membership-for-a-user)
        will be `pending` until they accept the invitation.
            
        *   Authenticated users can _update_ a user's membership by passing the
        `role` parameter. If the authenticated user changes a member's role to
        `admin`, the affected user will receive an email notifying them that
        they've been made an organization owner. If the authenticated user
        changes an owner's role to `member`, no email will be sent.


        **Rate limits**


        To prevent abuse, the authenticated user is limited to 50 organization
        invitations per 24 hour period. If the organization is more than one
        month old or on a paid plan, the limit is 500 invitations per 24 hour
        period.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"role\": \"member\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/orgs/invitocat/memberships/defunkt
                state: pending
                role: admin
                organization_url: https://api.github.com/orgs/invitocat
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - orgs/{org} > memberships/{username}
      summary: Remove organization membership for a user
      description: >-
        In order to remove a user's membership with an organization, the
        authenticated user must be an organization owner.


        If the specified user is an active member of the organization, this will
        remove them from the organization. If the specified user has been
        invited to the organization, this will cancel their invitation. The
        specified user will receive an email notification in both cases.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/migrations/{migration_id}/archive:
    get:
      tags:
        - orgs/{org} > migrations > {migration id} > archive
      summary: Download an organization migration archive
      description: Fetches the URL to a migration archive.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
      responses:
        '302':
          description: Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - orgs/{org} > migrations > {migration id} > archive
      summary: Delete an organization migration archive
      description: >-
        Deletes a previous migration archive. Migration archives are
        automatically deleted after seven days.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/migrations/{migration_id}:
    get:
      tags:
        - orgs/{org} > migrations > {migration id}
      summary: Get an organization migration status
      description: |-
        Fetches the status of a migration.

        The `state` of a migration can be one of the following values:

        *   `pending`, which means the migration hasn't started yet.
        *   `exporting`, which means the migration is in progress.
        *   `exported`, which means the migration finished successfully.
        *   `failed`, which means the migration failed.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 79
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                owner:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: true
                guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
                state: exported
                lock_repositories: true
                exclude_attachments: false
                repositories:
                  - id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://api.github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                url: https://api.github.com/orgs/octo-org/migrations/79
                created_at: '2015-07-06T15:33:38-07:00'
                updated_at: '2015-07-06T15:33:38-07:00'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock:
    delete:
      tags:
        - orgs/{org} > migrations > {migration id}
      summary: Unlock an organization repository
      description: >-
        Unlocks a repository that was locked for migration. You should unlock
        each migrated repository and [delete
        them](https://developer.github.com/v3/repos/#delete-a-repository) when
        the migration is complete and you no longer need the source data.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
        - name: repo_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) repo_name parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/migrations/{migration_id}/repositories:
    get:
      tags:
        - orgs/{org} > migrations > {migration id}
      summary: List repositories in an organization migration
      description: List all the repositories for this organization migration.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  template_repository: octocat/template
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/migrations:
    get:
      tags:
        - orgs/{org} > migrations
      summary: List organization migrations
      description: Lists the most recent migrations.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 79
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
                  state: pending
                  lock_repositories: true
                  exclude_attachments: false
                  repositories:
                    - id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      clone_url: https://github.com/octocat/Hello-World.git
                      mirror_url: git:git.example.com/octocat/Hello-World
                      hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                      svn_url: https://svn.github.com/octocat/Hello-World
                      homepage: https://github.com
                      language: null
                      forks_count: 9
                      stargazers_count: 80
                      watchers_count: 80
                      size: 108
                      default_branch: master
                      open_issues_count: 0
                      is_template: true
                      topics:
                        - octocat
                        - atom
                        - electron
                        - api
                      has_issues: true
                      has_projects: true
                      has_wiki: true
                      has_pages: false
                      has_downloads: true
                      archived: false
                      disabled: false
                      visibility: public
                      pushed_at: '2011-01-26T19:06:43Z'
                      created_at: '2011-01-26T19:01:12Z'
                      updated_at: '2011-01-26T19:14:43Z'
                      permissions:
                        admin: false
                        push: false
                        pull: true
                      allow_rebase_merge: true
                      template_repository: null
                      temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                      allow_squash_merge: true
                      delete_branch_on_merge: true
                      allow_merge_commit: true
                      subscribers_count: 42
                      network_count: 0
                      license:
                        key: mit
                        name: MIT License
                        url: https://api.github.com/licenses/mit
                        spdx_id: MIT
                        node_id: MDc6TGljZW5zZW1pdA==
                        html_url: https://api.github.com/licenses/mit
                      forks: 1
                      open_issues: 1
                      watchers: 1
                  url: https://api.github.com/orgs/octo-org/migrations/79
                  created_at: '2015-07-06T15:33:38-07:00'
                  updated_at: '2015-07-06T15:33:38-07:00'
                  node_id: MDQ6VXNlcjE=
    post:
      tags:
        - orgs/{org} > migrations
      summary: Start an organization migration
      description: Initiates the generation of a migration archive.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"repositories\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"lock_repositories\": false,\n   
                \"exclude_attachments\": false,\n    \"exclude\": [\n       
                \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 79
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                owner:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: true
                guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
                state: pending
                lock_repositories: true
                exclude_attachments: false
                repositories:
                  - id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://api.github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                url: https://api.github.com/orgs/octo-org/migrations/79
                created_at: '2015-07-06T15:33:38-07:00'
                updated_at: '2015-07-06T15:33:38-07:00'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /orgs/{org}/outside_collaborators/{username}:
    put:
      tags:
        - orgs/{org} > outside collaborators > {username}
      summary: Convert an organization member to outside collaborator
      description: >-
        When an organization member is converted to an outside collaborator,
        they'll only have access to the repositories that their current team
        membership allows. The user will no longer be a member of the
        organization. For more information, see "[Converting an organization
        member to an outside
        collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)".
      requestBody:
        content: {}
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Cannot convert the last owner to an outside collaborator
                documentation_url: >-
                  https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - orgs/{org} > outside collaborators > {username}
      summary: Remove outside collaborator from an organization
      description: >-
        Removing a user from this list will remove them from all the
        organization's repositories.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: >-
                  You cannot specify an organization member to remove as an
                  outside collaborator.
                documentation_url: >-
                  https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator
  /orgs/{org}/outside_collaborators:
    get:
      tags:
        - orgs/{org} > outside collaborators
      summary: List outside collaborators for an organization
      description: List all users who are outside collaborators of an organization.
      parameters:
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Filter the list of outside collaborators. Can be one of:  

            \* `2fa_disabled`: Outside collaborators without [two-factor
            authentication](https://github.com/blog/1614-two-factor-authentication)
            enabled.  

            \* `all`: All outside collaborators.
          example: all
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
  /orgs/{org}/projects:
    get:
      tags:
        - orgs/{org} > projects
      summary: List organization projects
      description: >-
        Lists the projects in an organization. Returns a `404 Not Found` status
        if projects are disabled in the organization. If you do not have
        sufficient privileges to perform this action, a `401 Unauthorized` or
        `410 Gone` status is returned.
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: >-
            Indicates the state of the projects to return. Can be either `open`,
            `closed`, or `all`.
          example: open
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - owner_url: https://api.github.com/orgs/octocat
                  url: https://api.github.com/projects/1002605
                  html_url: https://github.com/orgs/api-playground/projects/1
                  columns_url: https://api.github.com/projects/1002605/columns
                  id: 1002605
                  node_id: MDc6UHJvamVjdDEwMDI2MDU=
                  name: Organization Roadmap
                  body: High-level roadmap for the upcoming year.
                  number: 1
                  state: open
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-11T20:09:31Z'
                  updated_at: '2014-03-04T18:58:10Z'
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
    post:
      tags:
        - orgs/{org} > projects
      summary: Create an organization project
      description: >-
        Creates an organization project board. Returns a `404 Not Found` status
        if projects are disabled in the organization. If you do not have
        sufficient privileges to perform this action, a `401 Unauthorized` or
        `410 Gone` status is returned.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\",\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                owner_url: https://api.github.com/orgs/octocat
                url: https://api.github.com/projects/1002605
                html_url: https://github.com/orgs/api-playground/projects/1
                columns_url: https://api.github.com/projects/1002605/columns
                id: 1002605
                node_id: MDc6UHJvamVjdDEwMDI2MDU=
                name: Organization Roadmap
                body: High-level roadmap for the upcoming year.
                number: 1
                state: open
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-11T20:09:31Z'
                updated_at: '2014-03-04T18:58:10Z'
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /orgs/{org}/public_members/{username}:
    get:
      tags:
        - orgs/{org} > public members > {username}
      summary: Check public organization membership for a user
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - orgs/{org} > public members > {username}
      summary: Set public organization membership for the authenticated user
      description: >-
        The user can publicize their own membership. (A user cannot publicize
        the membership for another user.)


        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."
      requestBody:
        content: {}
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - orgs/{org} > public members > {username}
      summary: Remove public organization membership for the authenticated user
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/public_members:
    get:
      tags:
        - orgs/{org} > public members
      summary: List public organization members
      description: >-
        Members of an organization can choose to have their membership
        publicized or not.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
  /orgs/{org}/repos:
    get:
      tags:
        - orgs/{org} > repos
      summary: List organization repositories
      description: Lists repositories for the specified organization.
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Specifies the types of repositories you want returned. Can be one of
            `all`, `public`, `private`, `forks`, `sources`, `member`,
            `internal`. Default: `all`. If your organization is associated with
            an enterprise account using GitHub Enterprise Cloud or GitHub
            Enterprise Server 2.20+, `type` can also be `internal`.
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: >-
            Can be one of `asc` or `desc`. Default: when using `full_name`:
            `asc`, otherwise `desc`
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  template_repository: octocat/template
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
    post:
      tags:
        - orgs/{org} > repos
      summary: Create an organization repository
      description: >-
        Creates a new repository in the specified organization. The
        authenticated user must be a member of the organization.


        **OAuth scope requirements**


        When using
        [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/),
        authorizations must include:


        *   `public_repo` scope or `repo` scope to create a public repository

        *   `repo` scope to create a private repository
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"description\":
                \"<string>\",\n    \"homepage\": \"<string>\",\n    \"private\":
                false,\n    \"visibility\": \"<string>\",\n    \"has_issues\":
                true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n   
                \"is_template\": false,\n    \"team_id\": \"<integer>\",\n   
                \"auto_init\": false,\n    \"gitignore_template\":
                \"<string>\",\n    \"license_template\": \"<string>\",\n   
                \"allow_squash_merge\": true,\n    \"allow_merge_commit\":
                true,\n    \"allow_rebase_merge\": true,\n   
                \"delete_branch_on_merge\": false\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                language: null
                forks: 9
                forks_count: 9
                stargazers_count: 80
                watchers_count: 80
                watchers: 80
                size: 108
                default_branch: master
                open_issues: 0
                open_issues_count: 0
                is_template: true
                license:
                  key: mit
                  name: MIT License
                  url: https://api.github.com/licenses/mit
                  spdx_id: MIT
                  node_id: MDc6TGljZW5zZW1pdA==
                  html_url: https://api.github.com/licenses/mit
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  admin: false
                  push: false
                  pull: true
                allow_rebase_merge: true
                template_repository: null
                temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                allow_squash_merge: true
                delete_branch_on_merge: true
                allow_merge_commit: true
                subscribers_count: 42
                network_count: 0
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /orgs/{org}/settings/billing/actions:
    get:
      tags:
        - orgs/{org} > settings/billing
      summary: Get GitHub Actions billing for an organization
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the summary of the free and paid GitHub Actions minutes used.


        Paid minutes only apply to workflows in private repositories that use
        GitHub-hosted runners. Minutes used is listed for each GitHub-hosted
        runner operating system. Any job re-runs are also included in the usage.
        The usage does not include the multiplier for macOS and Windows runners
        and is not rounded up to the nearest whole minute. For more information,
        see "[Managing billing for GitHub
        Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".


        Access tokens must have the `read:org` scope.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_minutes_used: 305
                total_paid_minutes_used: 0
                included_minutes: 3000
                minutes_used_breakdown:
                  UBUNTU: 205
                  MACOS: 10
                  WINDOWS: 90
  /orgs/{org}/settings/billing/packages:
    get:
      tags:
        - orgs/{org} > settings/billing
      summary: Get GitHub Packages billing for an organization
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the free and paid storage usued for GitHub Packages in gigabytes.


        Paid minutes only apply to packages stored for private repositories. For
        more information, see "[Managing billing for GitHub
        Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."


        Access tokens must have the `read:org` scope.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_gigabytes_bandwidth_used: 50
                total_paid_gigabytes_bandwidth_used: 40
                included_gigabytes_bandwidth: 10
  /orgs/{org}/settings/billing/shared-storage:
    get:
      tags:
        - orgs/{org} > settings/billing
      summary: Get shared storage billing for an organization
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the estimated paid and estimated total storage used for GitHub
        Actions and Github Packages.


        Paid minutes only apply to packages stored for private repositories. For
        more information, see "[Managing billing for GitHub
        Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."


        Access tokens must have the `read:org` scope.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                days_left_in_billing_cycle: 20
                estimated_paid_storage_for_month: 15
                estimated_storage_for_month: 40
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions:
    get:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          comments > {comment number} > reactions
      summary: List reactions for a team discussion comment
      description: >-
        List the reactions to a [team discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/).
        OAuth access tokens require the `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
      parameters:
        - name: content
          in: query
          schema:
            type: string
          description: >-
            Returns a single [reaction
            type](https://developer.github.com/v3/reactions/#reaction-types).
            Omit this parameter to list all reactions to a team discussion
            comment.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDg6UmVhY3Rpb24x
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  content: heart
                  created_at: '2016-05-20T20:09:31Z'
    post:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          comments > {comment number} > reactions
      summary: Create reaction for a team discussion comment
      description: >-
        Create a reaction to a [team discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/).
        OAuth access tokens require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        A response with a `Status: 200 OK` means that you already added the
        reaction type to this team discussion comment.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `POST
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"content\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}:
    delete:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          comments > {comment number} > reactions
      summary: Delete team discussion comment reaction
      description: >-
        **Note:** You can also specify a team or organization with `team_id` and
        `org_id` using the route `DELETE
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.


        Delete a reaction to a [team discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/).
        OAuth access tokens require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: reaction_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}:
    get:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          comments > {comment number}
      summary: Get a discussion comment
      description: >-
        Get a specific comment on a team discussion. OAuth access tokens require
        the `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Do you like apples?
                body_html: <p>Do you like apples?</p>
                body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
                created_at: '2018-01-15T23:53:58Z'
                last_edited_at: null
                discussion_url: https://api.github.com/teams/2403582/discussions/1
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
                node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
                number: 1
                updated_at: '2018-01-15T23:53:58Z'
                url: https://api.github.com/teams/2403582/discussions/1/comments/1
                reactions:
                  url: https://api.github.com/teams/2403582/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
    patch:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          comments > {comment number}
      summary: Update a discussion comment
      description: >-
        Edits the body text of a discussion comment. OAuth access tokens require
        the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PATCH
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Do you like pineapples?
                body_html: <p>Do you like pineapples?</p>
                body_version: e6907b24d9c93cc0c5024a7af5888116
                created_at: '2018-01-15T23:53:58Z'
                last_edited_at: '2018-01-26T18:22:20Z'
                discussion_url: https://api.github.com/teams/2403582/discussions/1
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
                node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
                number: 1
                updated_at: '2018-01-26T18:22:20Z'
                url: https://api.github.com/teams/2403582/discussions/1/comments/1
                reactions:
                  url: https://api.github.com/teams/2403582/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
    delete:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          comments > {comment number}
      summary: Delete a discussion comment
      description: >-
        Deletes a comment on a team discussion. OAuth access tokens require the
        `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments:
    get:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          comments
      summary: List discussion comments
      description: >-
        List all comments on a team discussion. OAuth access tokens require the
        `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.
      parameters:
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - author:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Do you like apples?
                  body_html: <p>Do you like apples?</p>
                  body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
                  created_at: '2018-01-15T23:53:58Z'
                  last_edited_at: null
                  discussion_url: https://api.github.com/teams/2403582/discussions/1
                  html_url: >-
                    https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
                  node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
                  number: 1
                  updated_at: '2018-01-15T23:53:58Z'
                  url: >-
                    https://api.github.com/teams/2403582/discussions/1/comments/1
                  reactions:
                    url: >-
                      https://api.github.com/teams/2403582/discussions/1/reactions
                    total_count: 5
                    '+1': 3
                    '-1': 1
                    laugh: 0
                    confused: 0
                    heart: 1
                    hooray: 0
                    eyes: 1
                    rocket: 1
    post:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          comments
      summary: Create a discussion comment
      description: >-
        Creates a new comment on a team discussion. OAuth access tokens require
        the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `POST
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Do you like apples?
                body_html: <p>Do you like apples?</p>
                body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
                created_at: '2018-01-15T23:53:58Z'
                last_edited_at: null
                discussion_url: https://api.github.com/teams/2403582/discussions/1
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
                node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
                number: 1
                updated_at: '2018-01-15T23:53:58Z'
                url: https://api.github.com/teams/2403582/discussions/1/comments/1
                reactions:
                  url: https://api.github.com/teams/2403582/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions:
    get:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          reactions
      summary: List reactions for a team discussion
      description: >-
        List the reactions to a [team
        discussion](https://developer.github.com/v3/teams/discussions/). OAuth
        access tokens require the `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.
      parameters:
        - name: content
          in: query
          schema:
            type: string
          description: >-
            Returns a single [reaction
            type](https://developer.github.com/v3/reactions/#reaction-types).
            Omit this parameter to list all reactions to a team discussion.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDg6UmVhY3Rpb24x
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  content: heart
                  created_at: '2016-05-20T20:09:31Z'
    post:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          reactions
      summary: Create reaction for a team discussion
      description: >-
        Create a reaction to a [team
        discussion](https://developer.github.com/v3/teams/discussions/). OAuth
        access tokens require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        A response with a `Status: 200 OK` means that you already added the
        reaction type to this team discussion.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `POST
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"content\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}:
    delete:
      tags:
        - >-
          orgs/{org} > teams > {team slug} > discussions > {discussion number} >
          reactions
      summary: Delete team discussion reaction
      description: >-
        **Note:** You can also specify a team or organization with `team_id` and
        `org_id` using the route `DELETE
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.


        Delete a reaction to a [team
        discussion](https://developer.github.com/v3/teams/discussions/). OAuth
        access tokens require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: reaction_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}:
    get:
      tags:
        - orgs/{org} > teams > {team slug} > discussions > {discussion number}
      summary: Get a discussion
      description: >-
        Get a specific discussion on a team's page. OAuth access tokens require
        the `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Hi! This is an area for us to collaborate as a team.
                body_html: <p>Hi! This is an area for us to collaborate as a team</p>
                body_version: 0d495416a700fb06133c612575d92bfb
                comments_count: 0
                comments_url: https://api.github.com/teams/2343027/discussions/1/comments
                created_at: '2018-01-25T18:56:31Z'
                last_edited_at: null
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1
                node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
                number: 1
                pinned: false
                private: false
                team_url: https://api.github.com/teams/2343027
                title: Our first team post
                updated_at: '2018-01-25T18:56:31Z'
                url: https://api.github.com/teams/2343027/discussions/1
                reactions:
                  url: https://api.github.com/teams/2343027/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
    patch:
      tags:
        - orgs/{org} > teams > {team slug} > discussions > {discussion number}
      summary: Update a discussion
      description: >-
        Edits the title and body text of a discussion post. Only the parameters
        you provide are updated. OAuth access tokens require the
        `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PATCH
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"title\": \"<string>\",\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Hi! This is an area for us to collaborate as a team.
                body_html: <p>Hi! This is an area for us to collaborate as a team</p>
                body_version: 0d495416a700fb06133c612575d92bfb
                comments_count: 1
                comments_url: https://api.github.com/teams/2343027/discussions/1/comments
                created_at: '2018-01-25T18:56:31Z'
                last_edited_at: '2018-01-26T18:22:20Z'
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1
                node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
                number: 1
                pinned: false
                private: false
                team_url: https://api.github.com/teams/2343027
                title: Welcome to our first team post
                updated_at: '2018-01-26T18:22:20Z'
                url: https://api.github.com/teams/2343027/discussions/1
                reactions:
                  url: https://api.github.com/teams/2343027/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
    delete:
      tags:
        - orgs/{org} > teams > {team slug} > discussions > {discussion number}
      summary: Delete a discussion
      description: >-
        Delete a discussion from a team's page. OAuth access tokens require the
        `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/teams/{team_slug}/discussions:
    get:
      tags:
        - orgs/{org} > teams > {team slug} > discussions
      summary: List discussions
      description: >-
        List all discussions on a team's page. OAuth access tokens require the
        `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/discussions`.
      parameters:
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - author:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Hi! This is an area for us to collaborate as a team.
                  body_html: <p>Hi! This is an area for us to collaborate as a team</p>
                  body_version: 0d495416a700fb06133c612575d92bfb
                  comments_count: 0
                  comments_url: https://api.github.com/teams/2343027/discussions/1/comments
                  created_at: '2018-01-25T18:56:31Z'
                  last_edited_at: null
                  html_url: >-
                    https://github.com/orgs/github/teams/justice-league/discussions/1
                  node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
                  number: 1
                  pinned: false
                  private: false
                  team_url: https://api.github.com/teams/2343027
                  title: Our first team post
                  updated_at: '2018-01-25T18:56:31Z'
                  url: https://api.github.com/teams/2343027/discussions/1
                  reactions:
                    url: >-
                      https://api.github.com/teams/2343027/discussions/1/reactions
                    total_count: 5
                    '+1': 3
                    '-1': 1
                    laugh: 0
                    confused: 0
                    heart: 1
                    hooray: 0
                    eyes: 1
                    rocket: 1
    post:
      tags:
        - orgs/{org} > teams > {team slug} > discussions
      summary: Create a discussion
      description: >-
        Creates a new discussion post on a team's page. OAuth access tokens
        require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `POST /organizations/{org_id}/team/{team_id}/discussions`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"title\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"private\": false\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Hi! This is an area for us to collaborate as a team.
                body_html: <p>Hi! This is an area for us to collaborate as a team</p>
                body_version: 0d495416a700fb06133c612575d92bfb
                comments_count: 0
                comments_url: https://api.github.com/teams/2343027/discussions/1/comments
                created_at: '2018-01-25T18:56:31Z'
                last_edited_at: null
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1
                node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
                number: 1
                pinned: false
                private: false
                team_url: https://api.github.com/teams/2343027
                title: Our first team post
                updated_at: '2018-01-25T18:56:31Z'
                url: https://api.github.com/teams/2343027/discussions/1
                reactions:
                  url: https://api.github.com/teams/2343027/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
  /orgs/{org}/teams/{team_slug}/memberships/{username}:
    get:
      tags:
        - orgs/{org} > teams > {team slug} > memberships/{username}
      summary: Get team membership for a user
      description: >-
        Team members will include the members of child teams.


        To get a user's membership with a team, the team must be visible to the
        authenticated user.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/memberships/{username}`.


        **Note:** The `role` for organization owners returns as `maintainer`.
        For more information about `maintainer` roles, see [Create a
        team](https://developer.github.com/v3/teams/#create-a-team).
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/teams/1/memberships/octocat
                role: member
                state: active
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - orgs/{org} > teams > {team slug} > memberships/{username}
      summary: Add or update team membership for a user
      description: >-
        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Adds an organization member to a team. An authenticated organization
        owner or team maintainer can add organization members to a team.


        **Note:** When you have team synchronization set up for a team with your
        organization's identity provider (IdP), you will see an error if you
        attempt to use the API for making changes to the team's membership. If
        you have access to manage group membership in your IdP, you can manage
        GitHub team membership through your identity provider, which
        automatically adds and removes team members in an organization. For more
        information, see "[Synchronizing teams between your identity provider
        and
        GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        An organization owner can add someone who is not part of the team's
        organization to a team. When an organization owner adds someone to a
        team who is not an organization member, this endpoint will send an
        invitation to the person via email. This newly-created membership will
        be in the "pending" state until the person accepts the invitation, at
        which point the membership will transition to the "active" state and the
        user will be added as a member of the team.


        If the user is already a member of the team, this endpoint will update
        the role of the team member's role. To update the membership of a team
        member, the authenticated user must be an organization owner or a team
        maintainer.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PUT
        /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"role\": \"member\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/teams/1/memberships/octocat
                role: member
                state: active
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Cannot add an organization as a member.
                errors:
                  - code: org
                    field: user
                    resource: TeamMember
    delete:
      tags:
        - orgs/{org} > teams > {team slug} > memberships/{username}
      summary: Remove team membership for a user
      description: >-
        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        To remove a membership between a user and a team, the authenticated user
        must have 'admin' permissions to the team or be an owner of the
        organization that the team is associated with. Removing team membership
        does not delete the user, it just removes their membership from the
        team.


        **Note:** When you have team synchronization set up for a team with your
        organization's identity provider (IdP), you will see an error if you
        attempt to use the API for making changes to the team's membership. If
        you have access to manage group membership in your IdP, you can manage
        GitHub team membership through your identity provider, which
        automatically adds and removes team members in an organization. For more
        information, see "[Synchronizing teams between your identity provider
        and
        GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/teams/{team_slug}/projects/{project_id}:
    get:
      tags:
        - orgs/{org} > teams > {team slug} > projects > {project id}
      summary: Check team permissions for a project
      description: >-
        Checks whether a team has `read`, `write`, or `admin` permissions for an
        organization project. The response includes projects inherited from a
        parent team.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                owner_url: https://api.github.com/orgs/octocat
                url: https://api.github.com/projects/1002605
                html_url: https://github.com/orgs/api-playground/projects/1
                columns_url: https://api.github.com/projects/1002605/columns
                id: 1002605
                node_id: MDc6UHJvamVjdDEwMDI2MDU=
                name: Organization Roadmap
                body: High-level roadmap for the upcoming year.
                number: 1
                state: open
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-11T20:09:31Z'
                updated_at: '2014-03-04T18:58:10Z'
                organization_permission: write
                private: false
                permissions:
                  read: true
                  write: true
                  admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - orgs/{org} > teams > {team slug} > projects > {project id}
      summary: Add or update team project permissions
      description: >-
        Adds an organization project to a team. To add a project to a team or
        update the team's permission on a project, the authenticated user must
        have `admin` permissions for the project. The project and team must be
        part of the same organization.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PUT
        /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"permission\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Must have admin rights to Repository.
                documentation_url: >-
                  https://developer.github.com/v3/teams/#add-or-update-team-project-permissions
    delete:
      tags:
        - orgs/{org} > teams > {team slug} > projects > {project id}
      summary: Remove a project from a team
      description: >-
        Removes an organization project from a team. An organization owner or a
        team maintainer can remove any project from the team. To remove a
        project from a team as an organization member, the authenticated user
        must have `read` access to both the team and project, or `admin` access
        to the team or project. This endpoint removes the project from the team,
        but does not delete the project.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/teams/{team_slug}/projects:
    get:
      tags:
        - orgs/{org} > teams > {team slug} > projects
      summary: List team projects
      description: >-
        Lists the organization projects for a team.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/projects`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - owner_url: https://api.github.com/orgs/octocat
                  url: https://api.github.com/projects/1002605
                  html_url: https://github.com/orgs/api-playground/projects/1
                  columns_url: https://api.github.com/projects/1002605/columns
                  id: 1002605
                  node_id: MDc6UHJvamVjdDEwMDI2MDU=
                  name: Organization Roadmap
                  body: High-level roadmap for the upcoming year.
                  number: 1
                  state: open
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-11T20:09:31Z'
                  updated_at: '2014-03-04T18:58:10Z'
                  organization_permission: write
                  private: false
                  permissions:
                    read: true
                    write: true
                    admin: false
  /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}:
    get:
      tags:
        - orgs/{org} > teams > {team slug} > repos > {owner}/{repo}
      summary: Check team permissions for a repository
      description: >-
        Checks whether a team has `admin`, `push`, `maintain`, `triage`, or
        `pull` permission for a repository. Repositories inherited through a
        parent team will also be checked.


        You can also get information about the specified repository, including
        what permissions the team grants on it, by passing the following custom
        [media type](https://developer.github.com/v3/media/) via the
        `application/vnd.github.v3.repository+json` accept header.


        If a team doesn't have permission for the repository, you will receive a
        `404 Not Found` response status.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/vnd.github.v3.repository+json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                language: null
                forks_count: 9
                stargazers_count: 80
                watchers_count: 80
                size: 108
                default_branch: master
                open_issues_count: 0
                is_template: true
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  admin: false
                  push: false
                  pull: true
                allow_rebase_merge: true
                template_repository: null
                temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                allow_squash_merge: true
                delete_branch_on_merge: true
                allow_merge_commit: true
                subscribers_count: 42
                network_count: 0
                license:
                  key: mit
                  name: MIT License
                  url: https://api.github.com/licenses/mit
                  spdx_id: MIT
                  node_id: MDc6TGljZW5zZW1pdA==
                  html_url: https://api.github.com/licenses/mit
                forks: 1
                open_issues: 1
                watchers: 1
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - orgs/{org} > teams > {team slug} > repos > {owner}/{repo}
      summary: Add or update team repository permissions
      description: >-
        To add a repository to a team or update the team's permission on a
        repository, the authenticated user must have admin access to the
        repository, and must be able to see the team. The repository must be
        owned by the organization, or a direct fork of a repository owned by the
        organization. You will get a `422 Unprocessable Entity` status if you
        attempt to add a repository to a team that is not owned by the
        organization. Note that, if you choose not to pass any parameters,
        you'll need to set `Content-Length` to zero when calling out to this
        endpoint. For more information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PUT
        /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.


        For more information about the permission levels, see "[Repository
        permission levels for an
        organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"permission\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - orgs/{org} > teams > {team slug} > repos > {owner}/{repo}
      summary: Remove a repository from a team
      description: >-
        If the authenticated user is an organization owner or a team maintainer,
        they can remove any repositories from the team. To remove a repository
        from a team as an organization member, the authenticated user must have
        admin access to the repository and must be able to see the team. This
        does not delete the repository, it just removes it from the team.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/teams/{team_slug}/repos:
    get:
      tags:
        - orgs/{org} > teams > {team slug} > repos
      summary: List team repositories
      description: >-
        Lists a team's repositories visible to the authenticated user.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/repos`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  template_repository: octocat/template
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
  /orgs/{org}/teams/{team_slug}/team-sync/group-mappings:
    get:
      tags:
        - orgs/{org} > teams > {team slug} > team-sync/group-mappings
      summary: List IdP groups for a team
      description: >-
        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        List IdP groups connected to a team on GitHub.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                groups:
                  - group_id: '123'
                    group_name: Octocat admins
                    group_description: The people who configure your octoworld.
                  - group_id: '456'
                    group_name: Octocat docs members
                    group_description: The people who make your octoworld come to life.
    patch:
      tags:
        - orgs/{org} > teams > {team slug} > team-sync/group-mappings
      summary: Create or update IdP group connections
      description: >-
        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Creates, updates, or removes a connection between a team and an IdP
        group. When adding groups to a team, you must include all new and
        existing groups to avoid replacing existing groups with the new ones.
        Specifying an empty `groups` array will remove all connections for a
        team.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PATCH
        /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"groups\": [\n        {\n            \"group_id\":
                \"<string>\",\n            \"group_name\":
                \"<string>\",\n            \"group_description\":
                \"<string>\"\n        },\n        {\n            \"group_id\":
                \"<string>\",\n            \"group_name\":
                \"<string>\",\n            \"group_description\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                groups:
                  - group_id: '123'
                    group_name: Octocat admins
                    group_description: The people who configure your octoworld.
                  - group_id: '456'
                    group_name: Octocat docs members
                    group_description: The people who make your octoworld come to life.
  /orgs/{org}/teams/{team_slug}:
    get:
      tags:
        - orgs/{org} > teams > {team slug}
      summary: Get a team by name
      description: >-
        Gets a team using the team's `slug`. GitHub generates the `slug` from
        the team `name`.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://api.github.com/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
                members_count: 3
                repos_count: 10
                created_at: '2017-07-14T16:53:42Z'
                updated_at: '2017-08-17T12:37:15Z'
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                  name: github
                  company: GitHub
                  blog: https://github.com/blog
                  location: San Francisco
                  email: octocat@github.com
                  is_verified: true
                  has_organization_projects: true
                  has_repository_projects: true
                  public_repos: 2
                  public_gists: 1
                  followers: 20
                  following: 0
                  html_url: https://github.com/octocat
                  created_at: '2008-01-14T04:33:35Z'
                  updated_at: '2017-08-17T12:37:15Z'
                  type: Organization
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - orgs/{org} > teams > {team slug}
      summary: Update a team
      description: >-
        To edit a team, the authenticated user must either be an organization
        owner or a team maintainer.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PATCH /organizations/{org_id}/team/{team_id}`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"description\":
                \"<string>\",\n    \"privacy\": \"<string>\",\n   
                \"permission\": \"pull\",\n    \"parent_team_id\":
                \"<integer>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://api.github.com/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
                members_count: 3
                repos_count: 10
                created_at: '2017-07-14T16:53:42Z'
                updated_at: '2017-08-17T12:37:15Z'
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                  name: github
                  company: GitHub
                  blog: https://github.com/blog
                  location: San Francisco
                  email: octocat@github.com
                  is_verified: true
                  has_organization_projects: true
                  has_repository_projects: true
                  public_repos: 2
                  public_gists: 1
                  followers: 20
                  following: 0
                  html_url: https://github.com/octocat
                  created_at: '2008-01-14T04:33:35Z'
                  updated_at: '2017-08-17T12:37:15Z'
                  type: Organization
    delete:
      tags:
        - orgs/{org} > teams > {team slug}
      summary: Delete a team
      description: >-
        To delete a team, the authenticated user must be an organization owner
        or team maintainer.


        If you are an organization owner, deleting a parent team will delete all
        of its child teams as well.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE /organizations/{org_id}/team/{team_id}`.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /orgs/{org}/teams/{team_slug}/invitations:
    get:
      tags:
        - orgs/{org} > teams > {team slug}
      summary: List pending team invitations
      description: >-
        The return hash contains a `role` field which refers to the Organization
        Invitation role and will be one of the following values:
        `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or
        `reinstate`. If the invitee is not a GitHub member, the `login` field in
        the return hash will be `null`.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/invitations`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  login: monalisa
                  email: octocat@github.com
                  role: direct_member
                  created_at: '2016-11-30T06:46:10-08:00'
                  inviter:
                    login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                  team_count: 2
                  invitation_team_url: https://api.github.com/organizations/2/invitations/1/teams
  /orgs/{org}/teams/{team_slug}/members:
    get:
      tags:
        - orgs/{org} > teams > {team slug}
      summary: List team members
      description: >-
        Team members will include the members of child teams.


        To list members in a team, the team must be visible to the authenticated
        user.
      parameters:
        - name: role
          in: query
          schema:
            type: string
          description: |-
            Filters members returned by their role in the team. Can be one of:  
            \* `member` - normal members of the team.  
            \* `maintainer` - team maintainers.  
            \* `all` - all members of the team.
          example: all
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
  /orgs/{org}/teams/{team_slug}/teams:
    get:
      tags:
        - orgs/{org} > teams > {team slug}
      summary: List child teams
      description: >-
        Lists the child teams of the team specified by `{team_slug}`.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/teams`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: team_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) team_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 2
                  node_id: MDQ6VGVhbTI=
                  url: https://api.github.com/teams/2
                  name: Original Roster
                  slug: original-roster
                  description: Started it all.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/2/members{/member}
                  repositories_url: https://api.github.com/teams/2/repos
                  parent:
                    id: 1
                    node_id: MDQ6VGVhbTE=
                    url: https://api.github.com/teams/1
                    html_url: https://api.github.com/teams/justice-league
                    name: Justice League
                    slug: justice-league
                    description: A great team.
                    privacy: closed
                    permission: admin
                    members_url: https://api.github.com/teams/1/members{/member}
                    repositories_url: https://api.github.com/teams/1/repos
                  html_url: https://github.com/orgs/rails/teams/core
  /orgs/{org}/teams:
    get:
      tags:
        - orgs/{org} > teams
      summary: List teams
      description: >-
        Lists all teams in an organization that are visible to the authenticated
        user.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://api.github.com/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - orgs/{org} > teams
      summary: Create a team
      description: >-
        To create a team, the authenticated user must be a member or owner of
        `{org}`. By default, organization members can create teams. Organization
        owners can limit team creation to organization owners. For more
        information, see "[Setting team creation
        permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization)."


        When you create a new team, you automatically become a team maintainer
        without explicitly adding yourself to the optional array of
        `maintainers`. For more information, see "[About
        teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)".
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"description\":
                \"<string>\",\n    \"maintainers\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"repo_names\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"privacy\": \"<string>\",\n    \"permission\": \"pull\",\n   
                \"parent_team_id\": \"<integer>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://api.github.com/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
                members_count: 3
                repos_count: 10
                created_at: '2017-07-14T16:53:42Z'
                updated_at: '2017-08-17T12:37:15Z'
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                  name: github
                  company: GitHub
                  blog: https://github.com/blog
                  location: San Francisco
                  email: octocat@github.com
                  is_verified: true
                  has_organization_projects: true
                  has_repository_projects: true
                  public_repos: 2
                  public_gists: 1
                  followers: 20
                  following: 0
                  html_url: https://github.com/octocat
                  created_at: '2008-01-14T04:33:35Z'
                  updated_at: '2017-08-17T12:37:15Z'
                  type: Organization
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /orgs/{org}:
    get:
      tags:
        - orgs/{org}
      summary: Get an organization
      description: >-
        To see many of the organization response values, you need to be an
        authenticated organization owner with the `admin:org` scope. When the
        value of `two_factor_requirement_enabled` is `true`, the organization
        requires all members, billing managers, and outside collaborators to
        enable [two-factor
        authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).


        GitHub Apps with the `Organization plan` permission can use this
        endpoint to retrieve information about an organization's GitHub plan.
        See "[Authenticating with GitHub
        Apps](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/)"
        for details. For an example response, see "[Response with GitHub plan
        information](https://developer.github.com/v3/orgs/#response-with-github-plan-information)."
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                login: github
                id: 1
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                url: https://api.github.com/orgs/github
                repos_url: https://api.github.com/orgs/github/repos
                events_url: https://api.github.com/orgs/github/events
                hooks_url: https://api.github.com/orgs/github/hooks
                issues_url: https://api.github.com/orgs/github/issues
                members_url: https://api.github.com/orgs/github/members{/member}
                public_members_url: https://api.github.com/orgs/github/public_members{/member}
                avatar_url: https://github.com/images/error/octocat_happy.gif
                description: A great organization
                name: github
                company: GitHub
                blog: https://github.com/blog
                location: San Francisco
                email: octocat@github.com
                twitter_username: github
                is_verified: true
                has_organization_projects: true
                has_repository_projects: true
                public_repos: 2
                public_gists: 1
                followers: 20
                following: 0
                html_url: https://github.com/octocat
                created_at: '2008-01-14T04:33:35Z'
                updated_at: '2014-03-03T18:58:10Z'
                type: Organization
                total_private_repos: 100
                owned_private_repos: 100
                private_gists: 81
                disk_usage: 10000
                collaborators: 8
                billing_email: mona@github.com
                plan:
                  name: Medium
                  space: 400
                  private_repos: 20
                default_repository_permission: read
                members_can_create_repositories: true
                two_factor_requirement_enabled: true
                members_allowed_repository_creation_type: all
                members_can_create_public_repositories: false
                members_can_create_private_repositories: false
                members_can_create_internal_repositories: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - orgs/{org}
      summary: Update an organization
      description: >-
        **Parameter Deprecation Notice:** GitHub will replace and discontinue
        `members_allowed_repository_creation_type` in favor of more granular
        permissions. The new input parameters are
        `members_can_create_public_repositories`,
        `members_can_create_private_repositories` for all organizations and
        `members_can_create_internal_repositories` for organizations associated
        with an enterprise account using GitHub Enterprise Cloud or GitHub
        Enterprise Server 2.20+. For more information, see the [blog
        post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).


        Enables an authenticated organization owner with the `admin:org` scope
        to update the organization's profile and member privileges.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"billing_email\": \"<string>\",\n    \"company\":
                \"<string>\",\n    \"email\": \"<string>\",\n   
                \"twitter_username\": \"<string>\",\n    \"location\":
                \"<string>\",\n    \"name\": \"<string>\",\n    \"description\":
                \"<string>\",\n    \"has_organization_projects\":
                \"<boolean>\",\n    \"has_repository_projects\":
                \"<boolean>\",\n    \"default_repository_permission\":
                \"read\",\n    \"members_can_create_repositories\": true,\n   
                \"members_can_create_internal_repositories\":
                \"<boolean>\",\n    \"members_can_create_private_repositories\":
                \"<boolean>\",\n    \"members_can_create_public_repositories\":
                \"<boolean>\",\n   
                \"members_allowed_repository_creation_type\": \"<string>\",\n   
                \"blog\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                login: github
                id: 1
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                url: https://api.github.com/orgs/github
                repos_url: https://api.github.com/orgs/github/repos
                events_url: https://api.github.com/orgs/github/events
                hooks_url: https://api.github.com/orgs/github/hooks
                issues_url: https://api.github.com/orgs/github/issues
                members_url: https://api.github.com/orgs/github/members{/member}
                public_members_url: https://api.github.com/orgs/github/public_members{/member}
                avatar_url: https://github.com/images/error/octocat_happy.gif
                description: A great organization
                name: github
                company: GitHub
                blog: https://github.com/blog
                location: San Francisco
                email: octocat@github.com
                twitter_username: github
                is_verified: true
                has_organization_projects: true
                has_repository_projects: true
                public_repos: 2
                public_gists: 1
                followers: 20
                following: 0
                html_url: https://github.com/octocat
                created_at: '2008-01-14T04:33:35Z'
                type: Organization
                total_private_repos: 100
                owned_private_repos: 100
                private_gists: 81
                disk_usage: 10000
                collaborators: 8
                billing_email: mona@github.com
                plan:
                  name: Medium
                  space: 400
                  private_repos: 20
                default_repository_permission: read
                members_can_create_repositories: true
                two_factor_requirement_enabled: true
                members_allowed_repository_creation_type: all
                members_can_create_public_repositories: false
                members_can_create_private_repositories: false
                members_can_create_internal_repositories: false
                updated_at: '2014-03-03T18:58:10Z'
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /orgs/{org}/events:
    get:
      tags:
        - orgs/{org}
      summary: List public organization events
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
  /orgs/{org}/installation:
    get:
      tags:
        - orgs/{org}
      summary: Get an organization installation for the authenticated app
      description: >-
        Enables an authenticated GitHub App to find the organization's
        installation information.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                account:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  avatar_url: https://github.com/images/error/hubot_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/orgs/github
                  html_url: https://github.com/github
                  followers_url: https://api.github.com/users/github/followers
                  following_url: https://api.github.com/users/github/following{/other_user}
                  gists_url: https://api.github.com/users/github/gists{/gist_id}
                  starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/github/subscriptions
                  organizations_url: https://api.github.com/users/github/orgs
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  received_events_url: https://api.github.com/users/github/received_events
                  type: Organization
                  site_admin: false
                repository_selection: all
                access_tokens_url: https://api.github.com/installations/1/access_tokens
                repositories_url: https://api.github.com/installation/repositories
                html_url: >-
                  https://github.com/organizations/github/settings/installations/1
                app_id: 1
                target_id: 1
                target_type: Organization
                permissions:
                  checks: write
                  metadata: read
                  contents: read
                events:
                  - push
                  - pull_request
                created_at: '2018-02-09T20:51:14Z'
                updated_at: '2018-02-09T20:51:14Z'
                single_file_name: null
                app_slug: github-actions
  /orgs/{org}/installations:
    get:
      tags:
        - orgs/{org}
      summary: List app installations for an organization
      description: >-
        Lists all GitHub Apps in an organization. The installation count
        includes all GitHub Apps installed on repositories in the organization.
        You must be an organization owner with `admin:read` scope to use this
        endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                installations:
                  - id: 25381
                    account:
                      login: octo-org
                      id: 6811672
                      node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=
                      avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4
                      gravatar_id: ''
                      url: https://api.github.com/users/octo-org
                      html_url: https://github.com/octo-org
                      followers_url: https://api.github.com/users/octo-org/followers
                      following_url: >-
                        https://api.github.com/users/octo-org/following{/other_user}
                      gists_url: https://api.github.com/users/octo-org/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octo-org/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octo-org/subscriptions
                      organizations_url: https://api.github.com/users/octo-org/orgs
                      repos_url: https://api.github.com/users/octo-org/repos
                      events_url: https://api.github.com/users/octo-org/events{/privacy}
                      received_events_url: https://api.github.com/users/octo-org/received_events
                      type: Organization
                      site_admin: false
                    repository_selection: selected
                    access_tokens_url: >-
                      https://api.github.com/app/installations/25381/access_tokens
                    repositories_url: https://api.github.com/installation/repositories
                    html_url: >-
                      https://github.com/organizations/octo-org/settings/installations/25381
                    app_id: 2218
                    target_id: 6811672
                    target_type: Organization
                    permissions:
                      deployments: write
                      metadata: read
                      pull_requests: read
                      statuses: read
                    events:
                      - deployment
                      - deployment_status
                    created_at: '2017-05-16T08:47:09.000-07:00'
                    updated_at: '2017-06-06T11:23:23.000-07:00'
                    single_file_name: null
                    app_slug: github-actions
  /orgs/{org}/issues:
    get:
      tags:
        - orgs/{org}
      summary: List organization issues assigned to the authenticated user
      description: >-
        List issues in an organization assigned to the authenticated user.


        **Note**: GitHub's REST API v3 considers every pull request an issue,
        but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in
        the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request
        returned from "Issues" endpoints will be an _issue id_. To find out the
        pull

        request id, use the "[List pull
        requests](https://developer.github.com/v3/pulls/#list-pull-requests)"
        endpoint.
      parameters:
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Indicates which sorts of issues to return. Can be one of:  

            \* `assigned`: Issues assigned to you  

            \* `created`: Issues created by you  

            \* `mentioned`: Issues mentioning you  

            \* `subscribed`: Issues you're subscribed to updates for  

            \* `all`: All issues the authenticated user can see, regardless of
            participation or creation
          example: assigned
        - name: state
          in: query
          schema:
            type: string
          description: >-
            Indicates the state of the issues to return. Can be either `open`,
            `closed`, or `all`.
          example: open
        - name: labels
          in: query
          schema:
            type: string
          description: 'A list of comma separated label names. Example: `bug,ui,@high`'
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            What to sort results by. Can be either `created`, `updated`,
            `comments`.
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDU6SXNzdWUx
                  url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  repository_url: https://api.github.com/repos/octocat/Hello-World
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                  html_url: https://github.com/octocat/Hello-World/issues/1347
                  number: 1347
                  state: open
                  title: Found a bug
                  body: I'm having a problem with this.
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  labels:
                    - id: 208045946
                      node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels/bug
                      name: bug
                      description: Something isn't working
                      color: f29513
                      default: true
                  assignee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  assignees:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  milestone:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1
                    html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                    id: 1002604
                    node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                    number: 1
                    state: open
                    title: v1.0
                    description: Tracking milestone for version 1.0
                    creator:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    open_issues: 4
                    closed_issues: 8
                    created_at: '2011-04-10T20:09:31Z'
                    updated_at: '2014-03-03T18:58:10Z'
                    closed_at: '2013-02-12T13:22:01Z'
                    due_on: '2012-10-09T23:39:01Z'
                  locked: true
                  active_lock_reason: too heated
                  comments: 0
                  pull_request:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                    html_url: https://github.com/octocat/Hello-World/pull/1347
                    diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                    patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                  closed_at: null
                  created_at: '2011-04-22T13:33:48Z'
                  updated_at: '2011-04-22T13:33:48Z'
                  repository:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                  author_association: collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /orgs/{org}/team-sync/groups:
    get:
      tags:
        - orgs/{org}
      summary: List IdP groups for an organization
      description: >-
        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        List IdP groups available in an organization. You can limit your page
        results using the `per_page` parameter. GitHub generates a url-encoded
        `page` token using a cursor value for where the next page begins. For
        more information on cursor pagination, see "[Offset and Cursor
        Pagination
        explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89)."


        The `per_page` parameter provides pagination for a list of IdP groups
        the authenticated user can access in an organization. For example, if
        the user `octocat` wants to see two groups per page in `octo-org` via
        cURL, it would look like this:
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                groups:
                  - group_id: '123'
                    group_name: Octocat admins
                    group_description: The people who configure your octoworld.
                  - group_id: '456'
                    group_name: Octocat docs members
                    group_description: The people who make your octoworld come to life.
  /projects/columns/cards/{card_id}:
    get:
      tags:
        - projects > columns > cards/{card id}
      summary: Get a project card
      parameters:
        - name: card_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) card_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/projects/columns/cards/1478
                id: 1478
                node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
                note: Add payload for delete Project column
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2016-09-05T14:21:06Z'
                updated_at: '2016-09-05T14:20:22Z'
                archived: false
                column_url: https://api.github.com/projects/columns/367
                content_url: >-
                  https://api.github.com/repos/api-playground/projects-test/issues/3
                project_url: https://api.github.com/projects/120
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - projects > columns > cards/{card id}
      summary: Update an existing project card
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"note\": \"<string>\",\n    \"archived\":
                \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: card_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) card_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/projects/columns/cards/1478
                id: 1478
                node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
                note: Add payload for delete Project column
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2016-09-05T14:21:06Z'
                updated_at: '2016-09-05T14:20:22Z'
                archived: false
                column_url: https://api.github.com/projects/columns/367
                content_url: >-
                  https://api.github.com/repos/api-playground/projects-test/issues/3
                project_url: https://api.github.com/projects/120
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
    delete:
      tags:
        - projects > columns > cards/{card id}
      summary: Delete a project card
      parameters:
        - name: card_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) card_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: elit
                documentation_url: nostrud laboris enim
                errors:
                  - occaecat irure et dolore
                  - aute Duis
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /projects/columns/cards/{card_id}/moves:
    post:
      tags:
        - projects > columns > cards/{card id}
      summary: Move a project card
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"position\": \"<string>\",\n    \"column_id\":
                \"<integer>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: card_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) card_id parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim culpa
                documentation_url: eu consequat
                errors:
                  - code: anim des
                    message: ut do anim consequat
                    resource: minim Duis con
                    field: enim reprehenderit in
                  - code: laborum aute voluptate id
                    message: dolore magna
                    resource: nulla cillum ut labore
                    field: et labore aliqua
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: reprehenderit magna veniam in nulla
                message: sit
                documentation_url: qui
                errors:
                  - code: v
                    message: pariatur veniam irure occaecat
                  - code: quis incididunt elit pariatur mollit
                    message: deserunt aliquip ut m
  /projects/columns/{column_id}/cards:
    get:
      tags:
        - projects > columns > {column id} > cards
      summary: List project cards
      parameters:
        - name: archived_state
          in: query
          schema:
            type: string
          description: >-
            Filters the project cards that are returned by the card's state. Can
            be one of `all`,`archived`, or `not_archived`.
          example: not_archived
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: column_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) column_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/projects/columns/cards/1478
                  id: 1478
                  node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
                  note: Add payload for delete Project column
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2016-09-05T14:21:06Z'
                  updated_at: '2016-09-05T14:20:22Z'
                  archived: false
                  column_url: https://api.github.com/projects/columns/367
                  content_url: >-
                    https://api.github.com/repos/api-playground/projects-test/issues/3
                  project_url: https://api.github.com/projects/120
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - projects > columns > {column id} > cards
      summary: Create a project card
      description: >-
        **Note**: GitHub's REST API v3 considers every pull request an issue,
        but not every issue is a pull request. For this reason, "Issues"
        endpoints may return both issues and pull requests in the response. You
        can identify pull requests by the `pull_request` key.


        Be aware that the `id` of a pull request returned from "Issues"
        endpoints will be an _issue id_. To find out the pull request id, use
        the "[List pull
        requests](https://developer.github.com/v3/pulls/#list-pull-requests)"
        endpoint.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"note\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: column_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) column_id parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/projects/columns/cards/1478
                id: 1478
                node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
                note: Add payload for delete Project column
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2016-09-05T14:21:06Z'
                updated_at: '2016-09-05T14:20:22Z'
                archived: false
                column_url: https://api.github.com/projects/columns/367
                content_url: >-
                  https://api.github.com/repos/api-playground/projects-test/issues/3
                project_url: https://api.github.com/projects/120
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: reprehenderit magna veniam in nulla
                message: sit
                documentation_url: qui
                errors:
                  - code: v
                    message: pariatur veniam irure occaecat
                  - code: quis incididunt elit pariatur mollit
                    message: deserunt aliquip ut m
  /projects/columns/{column_id}:
    get:
      tags:
        - projects > columns > {column id}
      summary: Get a project column
      parameters:
        - name: column_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) column_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/projects/columns/367
                project_url: https://api.github.com/projects/120
                cards_url: https://api.github.com/projects/columns/367/cards
                id: 367
                node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
                name: To Do
                created_at: '2016-09-05T14:18:44Z'
                updated_at: '2016-09-05T14:22:28Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - projects > columns > {column id}
      summary: Update an existing project column
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: column_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) column_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/projects/columns/367
                project_url: https://api.github.com/projects/120
                cards_url: https://api.github.com/projects/columns/367/cards
                id: 367
                node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
                name: To Do
                created_at: '2016-09-05T14:18:44Z'
                updated_at: '2016-09-05T14:22:28Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - projects > columns > {column id}
      summary: Delete a project column
      parameters:
        - name: column_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) column_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /projects/columns/{column_id}/moves:
    post:
      tags:
        - projects > columns > {column id}
      summary: Move a project column
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"position\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: column_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) column_id parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /projects/{project_id}/collaborators/{username}:
    put:
      tags:
        - projects > {project id} > collaborators > {username}
      summary: Add project collaborator
      description: >-
        Adds a collaborator to an organization project and sets their permission
        level. You must be an organization owner or a project `admin` to add a
        collaborator.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"permission\": \"write\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - projects > {project id} > collaborators > {username}
      summary: Remove user as a collaborator
      description: >-
        Removes a collaborator from an organization project. You must be an
        organization owner or a project `admin` to remove a collaborator.
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /projects/{project_id}/collaborators/{username}/permission:
    get:
      tags:
        - projects > {project id} > collaborators > {username}
      summary: Get project permission for a user
      description: >-
        Returns the collaborator's permission level for an organization project.
        Possible values for the `permission` key: `admin`, `write`, `read`,
        `none`. You must be an organization owner or a project `admin` to review
        a user's permission level.
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                permission: admin
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /projects/{project_id}/collaborators:
    get:
      tags:
        - projects > {project id} > collaborators
      summary: List project collaborators
      description: >-
        Lists the collaborators for an organization project. For a project, the
        list of collaborators includes outside collaborators, organization
        members that are direct collaborators, organization members with access
        through team memberships, organization members with access through
        default organization permissions, and organization owners. You must be
        an organization owner or a project `admin` to list collaborators.
      parameters:
        - name: affiliation
          in: query
          schema:
            type: string
          description: >-
            Filters the collaborators by their affiliation. Can be one of:  

            \* `outside`: Outside collaborators of a project that are not a
            member of the project's organization.  

            \* `direct`: Collaborators with permissions to a project, regardless
            of organization membership status.  

            \* `all`: All collaborators the authenticated user can see.
          example: all
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /projects/{project_id}/columns:
    get:
      tags:
        - projects > {project id} > columns
      summary: List project columns
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/projects/columns/367
                  project_url: https://api.github.com/projects/120
                  cards_url: https://api.github.com/projects/columns/367/cards
                  id: 367
                  node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
                  name: To Do
                  created_at: '2016-09-05T14:18:44Z'
                  updated_at: '2016-09-05T14:22:28Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - projects > {project id} > columns
      summary: Create a project column
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/projects/columns/367
                project_url: https://api.github.com/projects/120
                cards_url: https://api.github.com/projects/columns/367/cards
                id: 367
                node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
                name: To Do
                created_at: '2016-09-05T14:18:44Z'
                updated_at: '2016-09-05T14:22:28Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /projects/{project_id}:
    get:
      tags:
        - projects > {project id}
      summary: Get a project
      description: >-
        Gets a project by its `id`. Returns a `404 Not Found` status if projects
        are disabled. If you do not have sufficient privileges to perform this
        action, a `401 Unauthorized` or `410 Gone` status is returned.
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                owner_url: https://api.github.com/repos/api-playground/projects-test
                url: https://api.github.com/projects/1002604
                html_url: https://github.com/api-playground/projects-test/projects/1
                columns_url: https://api.github.com/projects/1002604/columns
                id: 1002604
                node_id: MDc6UHJvamVjdDEwMDI2MDQ=
                name: Projects Documentation
                body: Developer documentation project for the developer site.
                number: 1
                state: open
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-10T20:09:31Z'
                updated_at: '2014-03-03T18:58:10Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - projects > {project id}
      summary: Update a project
      description: >-
        Updates a project board's information. Returns a `404 Not Found` status
        if projects are disabled. If you do not have sufficient privileges to
        perform this action, a `401 Unauthorized` or `410 Gone` status is
        returned.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"state\": \"<string>\",\n   
                \"organization_permission\": \"<string>\",\n    \"private\":
                \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                owner_url: https://api.github.com/repos/api-playground/projects-test
                url: https://api.github.com/projects/1002604
                html_url: https://github.com/api-playground/projects-test/projects/1
                columns_url: https://api.github.com/projects/1002604/columns
                id: 1002604
                node_id: MDc6UHJvamVjdDEwMDI2MDQ=
                name: Projects Documentation
                body: Developer documentation project for the developer site.
                number: 1
                state: open
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-10T20:09:31Z'
                updated_at: '2014-03-03T18:58:10Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: elit
                documentation_url: nostrud laboris enim
                errors:
                  - occaecat irure et dolore
                  - aute Duis
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
    delete:
      tags:
        - projects > {project id}
      summary: Delete a project
      description: >-
        Deletes a project board. Returns a `404 Not Found` status if projects
        are disabled.
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: elit
                documentation_url: nostrud laboris enim
                errors:
                  - occaecat irure et dolore
                  - aute Duis
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/actions/artifacts/{artifact_id}:
    get:
      tags:
        - repos > {owner}/{repo} > actions > artifacts > {artifact id}
      summary: Get an artifact
      description: >-
        Gets a specific artifact for a workflow run. Anyone with read access to
        the repository can use this endpoint. If the repository is private you
        must use an access token with the `repo` scope. GitHub Apps must have
        the `actions:read` permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: artifact_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) artifact_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 11
                node_id: MDg6QXJ0aWZhY3QxMQ==
                name: Rails
                size_in_bytes: 556
                url: >-
                  https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
                archive_download_url: >-
                  https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
                expired: false
                created_at: '2020-01-10T14:59:22Z'
                expires_at: '2020-01-21T14:59:22Z'
                updated_at: '2020-01-21T14:59:22Z'
    delete:
      tags:
        - repos > {owner}/{repo} > actions > artifacts > {artifact id}
      summary: Delete an artifact
      description: >-
        Deletes an artifact for a workflow run. You must authenticate using an
        access token with the `repo` scope to use this endpoint. GitHub Apps
        must have the `actions:write` permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: artifact_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) artifact_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}:
    get:
      tags:
        - repos > {owner}/{repo} > actions > artifacts > {artifact id}
      summary: Download an artifact
      description: >-
        Gets a redirect URL to download an archive for a repository. This URL
        expires after 1 minute. Look for `Location:` in

        the response header to find the URL for the download. The
        `:archive_format` must be `zip`. Anyone with read access to

        the repository can use this endpoint. If the repository is private you
        must use an access token with the `repo` scope.

        GitHub Apps must have the `actions:read` permission to use this
        endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: artifact_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) artifact_id parameter
          example: <integer>
        - name: archive_format
          in: path
          schema:
            type: string
          required: true
          description: (Required) archive_format parameter
          example: <string>
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/artifacts:
    get:
      tags:
        - repos > {owner}/{repo} > actions > artifacts
      summary: List artifacts for a repository
      description: >-
        Lists all artifacts for a repository. Anyone with read access to the
        repository can use this endpoint. If the repository is private you must
        use an access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 2
                artifacts:
                  - id: 11
                    node_id: MDg6QXJ0aWZhY3QxMQ==
                    name: Rails
                    size_in_bytes: 556
                    url: >-
                      https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
                    archive_download_url: >-
                      https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
                    expired: false
                    created_at: '2020-01-10T14:59:22Z'
                    expires_at: '2020-03-21T14:59:22Z'
                    updated_at: '2020-02-21T14:59:22Z'
                  - id: 13
                    node_id: MDg6QXJ0aWZhY3QxMw==
                    name: ''
                    size_in_bytes: 453
                    url: >-
                      https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13
                    archive_download_url: >-
                      https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip
                    expired: false
                    created_at: '2020-01-10T14:59:22Z'
                    expires_at: '2020-03-21T14:59:22Z'
                    updated_at: '2020-02-21T14:59:22Z'
  /repos/{owner}/{repo}/actions/jobs/{job_id}:
    get:
      tags:
        - repos > {owner}/{repo} > actions > jobs/{job id}
      summary: Get a job for a workflow run
      description: >-
        Gets a specific job in a workflow run. Anyone with read access to the
        repository can use this endpoint. If the repository is private you must
        use an access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: job_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) job_id parameter
          example: <integer>
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 399444496
                run_id: 29679449
                run_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449
                node_id: MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==
                head_sha: f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0
                url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496
                html_url: https://github.com/octo-org/octo-repo/runs/399444496
                status: completed
                conclusion: success
                started_at: '2020-01-20T17:42:40Z'
                completed_at: '2020-01-20T17:44:39Z'
                name: build
                steps:
                  - name: Set up job
                    status: completed
                    conclusion: success
                    number: 1
                    started_at: '2020-01-20T09:42:40.000-08:00'
                    completed_at: '2020-01-20T09:42:41.000-08:00'
                  - name: Run actions/checkout@v2
                    status: completed
                    conclusion: success
                    number: 2
                    started_at: '2020-01-20T09:42:41.000-08:00'
                    completed_at: '2020-01-20T09:42:45.000-08:00'
                  - name: Set up Ruby
                    status: completed
                    conclusion: success
                    number: 3
                    started_at: '2020-01-20T09:42:45.000-08:00'
                    completed_at: '2020-01-20T09:42:45.000-08:00'
                  - name: Run actions/cache@v2
                    status: completed
                    conclusion: success
                    number: 4
                    started_at: '2020-01-20T09:42:45.000-08:00'
                    completed_at: '2020-01-20T09:42:48.000-08:00'
                  - name: Install Bundler
                    status: completed
                    conclusion: success
                    number: 5
                    started_at: '2020-01-20T09:42:48.000-08:00'
                    completed_at: '2020-01-20T09:42:52.000-08:00'
                  - name: Install Gems
                    status: completed
                    conclusion: success
                    number: 6
                    started_at: '2020-01-20T09:42:52.000-08:00'
                    completed_at: '2020-01-20T09:42:53.000-08:00'
                  - name: Run Tests
                    status: completed
                    conclusion: success
                    number: 7
                    started_at: '2020-01-20T09:42:53.000-08:00'
                    completed_at: '2020-01-20T09:42:59.000-08:00'
                  - name: Deploy to Heroku
                    status: completed
                    conclusion: success
                    number: 8
                    started_at: '2020-01-20T09:42:59.000-08:00'
                    completed_at: '2020-01-20T09:44:39.000-08:00'
                  - name: Post actions/cache@v2
                    status: completed
                    conclusion: success
                    number: 16
                    started_at: '2020-01-20T09:44:39.000-08:00'
                    completed_at: '2020-01-20T09:44:39.000-08:00'
                  - name: Complete job
                    status: completed
                    conclusion: success
                    number: 17
                    started_at: '2020-01-20T09:44:39.000-08:00'
                    completed_at: '2020-01-20T09:44:39.000-08:00'
                check_run_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496
  /repos/{owner}/{repo}/actions/jobs/{job_id}/logs:
    get:
      tags:
        - repos > {owner}/{repo} > actions > jobs/{job id}
      summary: Download job logs for a workflow run
      description: >-
        Gets a redirect URL to download a plain text file of logs for a workflow
        job. This link expires after 1 minute. Look

        for `Location:` in the response header to find the URL for the download.
        Anyone with read access to the repository can

        use this endpoint. If the repository is private you must use an access
        token with the `repo` scope. GitHub Apps must

        have the `actions:read` permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: job_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) job_id parameter
          example: <integer>
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/runners/{runner_id}:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runners > {runner id}
      summary: Get a self-hosted runner for a repository
      description: >-
        Gets a specific self-hosted runner. You must authenticate using an
        access token with the `repo` scope to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: runner_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) runner_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 23
                name: MBP
                os: macos
                status: online
    delete:
      tags:
        - repos > {owner}/{repo} > actions > runners > {runner id}
      summary: Delete a self-hosted runner from a repository
      description: >-
        Forces the removal of a self-hosted runner from a repository. You can
        use this endpoint to completely remove the runner when the machine you
        were using no longer exists. You must authenticate using an access token
        with the `repo` scope to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: runner_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) runner_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/runners:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runners
      summary: List self-hosted runners for a repository
      description: >-
        Lists all self-hosted runners for a repository. You must authenticate
        using an access token with the `repo` scope to use this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 2
                runners:
                  - id: 23
                    name: MBP
                    os: macos
                    status: online
                  - id: 24
                    name: iMac
                    os: macos
                    status: offline
  /repos/{owner}/{repo}/actions/runners/downloads:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runners
      summary: List runner applications for a repository
      description: >-
        Lists binaries for the runner application that you can download and run.
        You must authenticate using an access token with the `repo` scope to use
        this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - os: osx
                  architecture: x64
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz
                  filename: actions-runner-osx-x64-2.164.0.tar.gz
                - os: linux
                  architecture: x64
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz
                  filename: actions-runner-linux-x64-2.164.0.tar.gz
                - os: linux
                  architecture: arm
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz
                  filename: actions-runner-linux-arm-2.164.0.tar.gz
                - os: win
                  architecture: x64
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip
                  filename: actions-runner-win-x64-2.164.0.zip
                - os: linux
                  architecture: arm64
                  download_url: >-
                    https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz
                  filename: actions-runner-linux-arm64-2.164.0.tar.gz
  /repos/{owner}/{repo}/actions/runners/registration-token:
    post:
      tags:
        - repos > {owner}/{repo} > actions > runners
      summary: Create a registration token for a repository
      description: >-
        Returns a token that you can pass to the `config` script. The token
        expires after one hour. You must authenticate

        using an access token with the `repo` scope to use this endpoint.


        #### Example using registration token
         
        Configure your self-hosted runner, replacing `TOKEN` with the
        registration token provided by this endpoint.


        ```

        ./config.sh --url https://github.com/octo-org/octo-repo-artifacts
        --token TOKEN

        ```
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: LLBF3JGZDX3P5PMEXLND6TS6FCWO6
                expires_at: '2020-01-22T12:13:35.123-08:00'
  /repos/{owner}/{repo}/actions/runners/remove-token:
    post:
      tags:
        - repos > {owner}/{repo} > actions > runners
      summary: Create a remove token for a repository
      description: >-
        Returns a token that you can pass to remove a self-hosted runner from a
        repository. The token expires after one hour.

        You must authenticate using an access token with the `repo` scope to use
        this endpoint.


        #### Example using remove token
         
        To remove your self-hosted runner from a repository, replace TOKEN with
        the remove token provided by this endpoint.


        ```

        ./config.sh remove --token TOKEN

        ```
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: AABF3JGZDX3P5PMEXLND6TS6FCWO6
                expires_at: '2020-01-29T12:13:35.123-08:00'
  /repos/{owner}/{repo}/actions/runs/{run_id}/logs:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id} > logs
      summary: Download workflow run logs
      description: >-
        Gets a redirect URL to download an archive of log files for a workflow
        run. This link expires after 1 minute. Look for

        `Location:` in the response header to find the URL for the download.
        Anyone with read access to the repository can use

        this endpoint. If the repository is private you must use an access token
        with the `repo` scope. GitHub Apps must have

        the `actions:read` permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id} > logs
      summary: Delete workflow run logs
      description: >-
        Deletes all logs for a workflow run. You must authenticate using an
        access token with the `repo` scope to use this endpoint. GitHub Apps
        must have the `actions:write` permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/runs/{run_id}:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id}
      summary: Get a workflow run
      description: >-
        Gets a specific workflow run. Anyone with read access to the repository
        can use this endpoint. If the repository is private you must use an
        access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 30433642
                node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
                head_branch: master
                head_sha: acb5820ced9479c074f688cc328bf03f341a511d
                run_number: 562
                event: push
                status: queued
                conclusion: null
                workflow_id: 159038
                url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
                html_url: https://github.com/octo-org/octo-repo/actions/runs/30433642
                pull_requests: []
                created_at: '2020-01-22T19:33:08Z'
                updated_at: '2020-01-22T19:33:08Z'
                jobs_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
                logs_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
                check_suite_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
                artifacts_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
                cancel_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
                rerun_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
                workflow_url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
                head_commit:
                  id: acb5820ced9479c074f688cc328bf03f341a511d
                  tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
                  message: Create linter.yml
                  timestamp: '2020-01-22T19:33:05Z'
                  author:
                    name: Octo Cat
                    email: octocat@github.com
                  committer:
                    name: GitHub
                    email: noreply@github.com
                repository:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                head_repository:
                  id: 217723378
                  node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
                  name: octo-repo
                  full_name: octo-org/octo-repo
                  private: true
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  html_url: https://github.com/octo-org/octo-repo
                  description: null
                  fork: false
                  url: https://api.github.com/repos/octo-org/octo-repo
                  forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
                  keys_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
                  collaborators_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
                  teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
                  hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
                  issue_events_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
                  events_url: https://api.github.com/repos/octo-org/octo-repo/events
                  assignees_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
                  branches_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
                  tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
                  blobs_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
                  trees_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
                  statuses_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
                  languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
                  stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
                  contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
                  subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
                  subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
                  commits_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
                  git_commits_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
                  comments_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/comments{/number}
                  issue_comment_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
                  contents_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
                  compare_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
                  merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
                  archive_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
                  downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
                  issues_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/issues{/number}
                  pulls_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
                  milestones_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
                  labels_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/labels{/name}
                  releases_url: >-
                    https://api.github.com/repos/octo-org/octo-repo/releases{/id}
                  deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
    delete:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id}
      summary: Delete a workflow run
      description: >-
        Delete a specific workflow run. Anyone with write access to the
        repository can use this endpoint. If the repository is

        private you must use an access token with the `repo` scope. GitHub Apps
        must have the `actions:write` permission to use

        this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id}
      summary: List workflow run artifacts
      description: >-
        Lists artifacts for a workflow run. Anyone with read access to the
        repository can use this endpoint. If the repository is private you must
        use an access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 2
                artifacts:
                  - id: 11
                    node_id: MDg6QXJ0aWZhY3QxMQ==
                    name: Rails
                    size_in_bytes: 556
                    url: >-
                      https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
                    archive_download_url: >-
                      https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
                    expired: false
                    created_at: '2020-01-10T14:59:22Z'
                    expires_at: '2020-03-21T14:59:22Z'
                    updated_at: '2020-02-21T14:59:22Z'
                  - id: 13
                    node_id: MDg6QXJ0aWZhY3QxMw==
                    name: ''
                    size_in_bytes: 453
                    url: >-
                      https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13
                    archive_download_url: >-
                      https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip
                    expired: false
                    created_at: '2020-01-10T14:59:22Z'
                    expires_at: '2020-03-21T14:59:22Z'
                    updated_at: '2020-02-21T14:59:22Z'
  /repos/{owner}/{repo}/actions/runs/{run_id}/cancel:
    post:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id}
      summary: Cancel a workflow run
      description: >-
        Cancels a workflow run using its `id`. You must authenticate using an
        access token with the `repo` scope to use this endpoint. GitHub Apps
        must have the `actions:write` permission to use this endpoint.
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/runs/{run_id}/jobs:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id}
      summary: List jobs for a workflow run
      description: >-
        Lists jobs for a workflow run. Anyone with read access to the repository
        can use this endpoint. If the repository is private you must use an
        access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint. You can use parameters
        to narrow the list of results. For more information about using
        parameters, see
        [Parameters](https://developer.github.com/v3/#parameters).
      parameters:
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Filters jobs by their `completed_at` timestamp. Can be one of:  

            \* `latest`: Returns jobs from the most recent execution of the
            workflow run.  

            \* `all`: Returns all jobs for a workflow run, including from old
            executions of the workflow run.
          example: latest
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                jobs:
                  - id: 399444496
                    run_id: 29679449
                    run_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449
                    node_id: MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==
                    head_sha: f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0
                    url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496
                    html_url: https://github.com/octo-org/octo-repo/runs/399444496
                    status: completed
                    conclusion: success
                    started_at: '2020-01-20T17:42:40Z'
                    completed_at: '2020-01-20T17:44:39Z'
                    name: build
                    steps:
                      - name: Set up job
                        status: completed
                        conclusion: success
                        number: 1
                        started_at: '2020-01-20T09:42:40.000-08:00'
                        completed_at: '2020-01-20T09:42:41.000-08:00'
                      - name: Run actions/checkout@v2
                        status: completed
                        conclusion: success
                        number: 2
                        started_at: '2020-01-20T09:42:41.000-08:00'
                        completed_at: '2020-01-20T09:42:45.000-08:00'
                      - name: Set up Ruby
                        status: completed
                        conclusion: success
                        number: 3
                        started_at: '2020-01-20T09:42:45.000-08:00'
                        completed_at: '2020-01-20T09:42:45.000-08:00'
                      - name: Run actions/cache@v2
                        status: completed
                        conclusion: success
                        number: 4
                        started_at: '2020-01-20T09:42:45.000-08:00'
                        completed_at: '2020-01-20T09:42:48.000-08:00'
                      - name: Install Bundler
                        status: completed
                        conclusion: success
                        number: 5
                        started_at: '2020-01-20T09:42:48.000-08:00'
                        completed_at: '2020-01-20T09:42:52.000-08:00'
                      - name: Install Gems
                        status: completed
                        conclusion: success
                        number: 6
                        started_at: '2020-01-20T09:42:52.000-08:00'
                        completed_at: '2020-01-20T09:42:53.000-08:00'
                      - name: Run Tests
                        status: completed
                        conclusion: success
                        number: 7
                        started_at: '2020-01-20T09:42:53.000-08:00'
                        completed_at: '2020-01-20T09:42:59.000-08:00'
                      - name: Deploy to Heroku
                        status: completed
                        conclusion: success
                        number: 8
                        started_at: '2020-01-20T09:42:59.000-08:00'
                        completed_at: '2020-01-20T09:44:39.000-08:00'
                      - name: Post actions/cache@v2
                        status: completed
                        conclusion: success
                        number: 16
                        started_at: '2020-01-20T09:44:39.000-08:00'
                        completed_at: '2020-01-20T09:44:39.000-08:00'
                      - name: Complete job
                        status: completed
                        conclusion: success
                        number: 17
                        started_at: '2020-01-20T09:44:39.000-08:00'
                        completed_at: '2020-01-20T09:44:39.000-08:00'
                    check_run_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496
  /repos/{owner}/{repo}/actions/runs/{run_id}/rerun:
    post:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id}
      summary: Re-run a workflow
      description: >-
        Re-runs your workflow run using its `id`. You must authenticate using an
        access token with the `repo` scope to use this endpoint. GitHub Apps
        must have the `actions:write` permission to use this endpoint.
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/runs/{run_id}/timing:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runs > {run id}
      summary: Get workflow run usage
      description: >-
        **Warning:** This GitHub Actions usage endpoint is currently in public
        beta and subject to change. For more information, see "[GitHub Actions
        API workflow
        usage](https://developer.github.com/changes/2020-05-15-actions-api-workflow-usage)."


        Gets the number of billable minutes and total run time for a specific
        workflow run. Billable minutes only apply to workflows in private
        repositories that use GitHub-hosted runners. Usage is listed for each
        GitHub-hosted runner operating system in milliseconds. Any job re-runs
        are also included in the usage. The usage does not include the
        multiplier for macOS and Windows runners and is not rounded up to the
        nearest whole minute. For more information, see "[Managing billing for
        GitHub
        Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".


        Anyone with read access to the repository can use this endpoint. If the
        repository is private you must use an access token with the `repo`
        scope. GitHub Apps must have the `actions:read` permission to use this
        endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: run_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                billable:
                  UBUNTU:
                    total_ms: 180000
                    jobs: 1
                  MACOS:
                    total_ms: 240000
                    jobs: 4
                  WINDOWS:
                    total_ms: 300000
                    jobs: 2
                run_duration_ms: 500000
  /repos/{owner}/{repo}/actions/runs:
    get:
      tags:
        - repos > {owner}/{repo} > actions > runs
      summary: List workflow runs for a repository
      description: >-
        Lists all workflow runs for a repository. You can use parameters to
        narrow the list of results. For more information about using parameters,
        see [Parameters](https://developer.github.com/v3/#parameters).


        Anyone with read access to the repository can use this endpoint. If the
        repository is private you must use an access token with the `repo`
        scope. GitHub Apps must have the `actions:read` permission to use this
        endpoint.
      parameters:
        - name: actor
          in: query
          schema:
            type: string
          description: >-
            Returns someone's workflow runs. Use the login for the user who
            created the `push` associated with the check suite or workflow run.
          example: <string>
        - name: branch
          in: query
          schema:
            type: string
          description: >-
            Returns workflow runs associated with a branch. Use the name of the
            branch of the `push`.
          example: <string>
        - name: event
          in: query
          schema:
            type: string
          description: >-
            Returns workflow run triggered by the event you specify. For
            example, `push`, `pull_request` or `issue`. For more information,
            see "[Events that trigger
            workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)."
          example: <string>
        - name: status
          in: query
          schema:
            type: string
          description: >-
            Returns workflow runs associated with the check run `status` or
            `conclusion` you specify. For example, a conclusion can be `success`
            or a status can be `completed`. For more information, see the
            `status` and `conclusion` options available in "[Create a check
            run](https://developer.github.com/v3/checks/runs/#create-a-check-run)."
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                workflow_runs:
                  - id: 30433642
                    node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
                    head_branch: master
                    head_sha: acb5820ced9479c074f688cc328bf03f341a511d
                    run_number: 562
                    event: push
                    status: queued
                    conclusion: null
                    workflow_id: 159038
                    url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
                    html_url: >-
                      https://github.com/octo-org/octo-repo/actions/runs/30433642
                    pull_requests: []
                    created_at: '2020-01-22T19:33:08Z'
                    updated_at: '2020-01-22T19:33:08Z'
                    jobs_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
                    logs_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
                    check_suite_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
                    artifacts_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
                    cancel_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
                    rerun_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
                    workflow_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
                    head_commit:
                      id: acb5820ced9479c074f688cc328bf03f341a511d
                      tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
                      message: Create linter.yml
                      timestamp: '2020-01-22T19:33:05Z'
                      author:
                        name: Octo Cat
                        email: octocat@github.com
                      committer:
                        name: GitHub
                        email: noreply@github.com
                    repository:
                      id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                    head_repository:
                      id: 217723378
                      node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
                      name: octo-repo
                      full_name: octo-org/octo-repo
                      private: true
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      html_url: https://github.com/octo-org/octo-repo
                      description: null
                      fork: false
                      url: https://api.github.com/repos/octo-org/octo-repo
                      forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
                      keys_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
                      collaborators_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
                      teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
                      hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
                      issue_events_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
                      events_url: https://api.github.com/repos/octo-org/octo-repo/events
                      assignees_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
                      branches_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
                      tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
                      blobs_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
                      trees_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
                      statuses_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
                      languages_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/languages
                      stargazers_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/stargazers
                      contributors_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/contributors
                      subscribers_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/subscription
                      commits_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
                      git_commits_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
                      comments_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/comments{/number}
                      issue_comment_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
                      contents_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
                      compare_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
                      merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
                      archive_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
                      downloads_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/downloads
                      issues_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/issues{/number}
                      pulls_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
                      milestones_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
                      labels_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/labels{/name}
                      releases_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/releases{/id}
                      deployments_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/deployments
  /repos/{owner}/{repo}/actions/secrets/{secret_name}:
    get:
      tags:
        - repos > {owner}/{repo} > actions > secrets > {secret name}
      summary: Get a repository secret
      description: >-
        Gets a single repository secret without revealing its encrypted value.
        You must authenticate using an access token with the `repo` scope to use
        this endpoint. GitHub Apps must have the `secrets` repository permission
        to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: GH_TOKEN
                created_at: '2019-08-10T14:59:22Z'
                updated_at: '2020-01-10T14:59:22Z'
    put:
      tags:
        - repos > {owner}/{repo} > actions > secrets > {secret name}
      summary: Create or update a repository secret
      description: >-
        Creates or updates a repository secret with an encrypted value. Encrypt
        your secret using

        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages).
        You must authenticate using an access

        token with the `repo` scope to use this endpoint. GitHub Apps must have
        the `secrets` repository permission to use

        this endpoint.


        #### Example encrypting a secret using Node.js


        Encrypt your secret using the
        [tweetsodium](https://github.com/github/tweetsodium) library.


        ```

        const sodium = require('tweetsodium');


        const key = "base64-encoded-public-key";

        const value = "plain-text-secret";


        // Convert the message and key to Uint8Array's (Buffer implements that
        interface)

        const messageBytes = Buffer.from(value);

        const keyBytes = Buffer.from(key, 'base64');


        // Encrypt using LibSodium.

        const encryptedBytes = sodium.seal(messageBytes, keyBytes);


        // Base64 the encrypted secret

        const encrypted = Buffer.from(encryptedBytes).toString('base64');


        console.log(encrypted);

        ```



        #### Example encrypting a secret using Python


        Encrypt your secret using
        [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox)
        with Python 3.


        ```

        from base64 import b64encode

        from nacl import encoding, public


        def encrypt(public_key: str, secret_value: str) -> str:
          """Encrypt a Unicode string using the public key."""
          public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
          sealed_box = public.SealedBox(public_key)
          encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
          return b64encode(encrypted).decode("utf-8")
        ```


        #### Example encrypting a secret using C#


        Encrypt your secret using the
        [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.


        ```

        var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");

        var publicKey =
        Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");


        var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue,
        publicKey);


        Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));

        ```


        #### Example encrypting a secret using Ruby


        Encrypt your secret using the
        [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.


        ```ruby

        require "rbnacl"

        require "base64"


        key = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")

        public_key = RbNaCl::PublicKey.new(key)


        box = RbNaCl::Boxes::Sealed.from_public_key(public_key)

        encrypted_secret = box.encrypt("my_secret")


        # Print the base64 encoded secret

        puts Base64.strict_encode64(encrypted_secret)

        ```
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"encrypted_value\": \"<string>\",\n    \"key_id\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - repos > {owner}/{repo} > actions > secrets > {secret name}
      summary: Delete a repository secret
      description: >-
        Deletes a secret in a repository using the secret name. You must
        authenticate using an access token with the `repo` scope to use this
        endpoint. GitHub Apps must have the `secrets` repository permission to
        use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: secret_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) secret_name parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/secrets:
    get:
      tags:
        - repos > {owner}/{repo} > actions > secrets
      summary: List repository secrets
      description: >-
        Lists all secrets available in a repository without revealing their
        encrypted values. You must authenticate using an access token with the
        `repo` scope to use this endpoint. GitHub Apps must have the `secrets`
        repository permission to use this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 2
                secrets:
                  - name: GH_TOKEN
                    created_at: '2019-08-10T14:59:22Z'
                    updated_at: '2020-01-10T14:59:22Z'
                  - name: GIST_ID
                    created_at: '2020-01-10T10:59:22Z'
                    updated_at: '2020-01-11T11:59:22Z'
  /repos/{owner}/{repo}/actions/secrets/public-key:
    get:
      tags:
        - repos > {owner}/{repo} > actions > secrets
      summary: Get a repository public key
      description: >-
        Gets your public key, which you need to encrypt secrets. You need to
        encrypt a secret before you can create or update secrets. Anyone with
        read access to the repository can use this endpoint. If the repository
        is private you must use an access token with the `repo` scope. GitHub
        Apps must have the `secrets` repository permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key_id: '012345678912345678'
                key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}:
    get:
      tags:
        - repos > {owner}/{repo} > actions > workflows > {workflow id}
      summary: Get a workflow
      description: >-
        Gets a specific workflow. You can also replace `:workflow_id` with
        `:workflow_file_name`. For example, you could use `main.yml`. Anyone
        with read access to the repository can use this endpoint. If the
        repository is private you must use an access token with the `repo`
        scope. GitHub Apps must have the `actions:read` permission to use this
        endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: workflow_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 161335
                node_id: MDg6V29ya2Zsb3cxNjEzMzU=
                name: CI
                path: .github/workflows/blank.yml
                state: active
                created_at: '2020-01-08T23:48:37.000-08:00'
                updated_at: '2020-01-08T23:50:21.000-08:00'
                url: >-
                  https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335
                html_url: >-
                  https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335
                badge_url: https://github.com/octo-org/octo-repo/workflows/CI/badge.svg
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches:
    post:
      tags:
        - repos > {owner}/{repo} > actions > workflows > {workflow id}
      summary: Create a workflow dispatch event
      description: >-
        You can use this endpoint to manually trigger a GitHub Actions workflow
        run. You can also replace `{workflow_id}` with the workflow file name.
        For example, you could use `main.yml`.


        You must configure your GitHub Actions workflow to run when the
        [`workflow_dispatch`
        webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch)
        event occurs. The `inputs` are configured in the workflow file. For more
        information about how to configure the `workflow_dispatch` event in the
        workflow file, see "[Events that trigger
        workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch)."


        You must authenticate using an access token with the `repo` scope to use
        this endpoint. GitHub Apps must have the `actions:write` permission to
        use this endpoint. For more information, see "[Creating a personal
        access token for the command
        line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line)."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"ref\": \"<string>\",\n    \"inputs\": \"<object>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: workflow_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs:
    get:
      tags:
        - repos > {owner}/{repo} > actions > workflows > {workflow id}
      summary: List workflow runs
      description: >-
        List all workflow runs for a workflow. You can also replace
        `:workflow_id` with `:workflow_file_name`. For example, you could use
        `main.yml`. You can use parameters to narrow the list of results. For
        more information about using parameters, see
        [Parameters](https://developer.github.com/v3/#parameters).


        Anyone with read access to the repository can use this endpoint. If the
        repository is private you must use an access token with the `repo`
        scope.
      parameters:
        - name: actor
          in: query
          schema:
            type: string
          description: >-
            Returns someone's workflow runs. Use the login for the user who
            created the `push` associated with the check suite or workflow run.
          example: <string>
        - name: branch
          in: query
          schema:
            type: string
          description: >-
            Returns workflow runs associated with a branch. Use the name of the
            branch of the `push`.
          example: <string>
        - name: event
          in: query
          schema:
            type: string
          description: >-
            Returns workflow run triggered by the event you specify. For
            example, `push`, `pull_request` or `issue`. For more information,
            see "[Events that trigger
            workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)."
          example: <string>
        - name: status
          in: query
          schema:
            type: string
          description: >-
            Returns workflow runs associated with the check run `status` or
            `conclusion` you specify. For example, a conclusion can be `success`
            or a status can be `completed`. For more information, see the
            `status` and `conclusion` options available in "[Create a check
            run](https://developer.github.com/v3/checks/runs/#create-a-check-run)."
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: workflow_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                workflow_runs:
                  - id: 30433642
                    node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
                    head_branch: master
                    head_sha: acb5820ced9479c074f688cc328bf03f341a511d
                    run_number: 562
                    event: push
                    status: queued
                    conclusion: null
                    workflow_id: 159038
                    url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
                    html_url: >-
                      https://github.com/octo-org/octo-repo/actions/runs/30433642
                    pull_requests: []
                    created_at: '2020-01-22T19:33:08Z'
                    updated_at: '2020-01-22T19:33:08Z'
                    jobs_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
                    logs_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
                    check_suite_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
                    artifacts_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
                    cancel_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
                    rerun_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
                    workflow_url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
                    head_commit:
                      id: acb5820ced9479c074f688cc328bf03f341a511d
                      tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
                      message: Create linter.yml
                      timestamp: '2020-01-22T19:33:05Z'
                      author:
                        name: Octo Cat
                        email: octocat@github.com
                      committer:
                        name: GitHub
                        email: noreply@github.com
                    repository:
                      id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                    head_repository:
                      id: 217723378
                      node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
                      name: octo-repo
                      full_name: octo-org/octo-repo
                      private: true
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      html_url: https://github.com/octo-org/octo-repo
                      description: null
                      fork: false
                      url: https://api.github.com/repos/octo-org/octo-repo
                      forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
                      keys_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
                      collaborators_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
                      teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
                      hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
                      issue_events_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
                      events_url: https://api.github.com/repos/octo-org/octo-repo/events
                      assignees_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
                      branches_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
                      tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
                      blobs_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
                      trees_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
                      statuses_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
                      languages_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/languages
                      stargazers_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/stargazers
                      contributors_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/contributors
                      subscribers_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/subscription
                      commits_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
                      git_commits_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
                      comments_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/comments{/number}
                      issue_comment_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
                      contents_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
                      compare_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
                      merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
                      archive_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
                      downloads_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/downloads
                      issues_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/issues{/number}
                      pulls_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
                      milestones_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
                      labels_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/labels{/name}
                      releases_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/releases{/id}
                      deployments_url: >-
                        https://api.github.com/repos/octo-org/octo-repo/deployments
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing:
    get:
      tags:
        - repos > {owner}/{repo} > actions > workflows > {workflow id}
      summary: Get workflow usage
      description: >-
        **Warning:** This GitHub Actions usage endpoint is currently in public
        beta and subject to change. For more information, see "[GitHub Actions
        API workflow
        usage](https://developer.github.com/changes/2020-05-15-actions-api-workflow-usage)."


        Gets the number of billable minutes used by a specific workflow during
        the current billing cycle. Billable minutes only apply to workflows in
        private repositories that use GitHub-hosted runners. Usage is listed for
        each GitHub-hosted runner operating system in milliseconds. Any job
        re-runs are also included in the usage. The usage does not include the
        multiplier for macOS and Windows runners and is not rounded up to the
        nearest whole minute. For more information, see "[Managing billing for
        GitHub
        Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".


        You can also replace `:workflow_id` with `:workflow_file_name`. For
        example, you could use `main.yml`. Anyone with read access to the
        repository can use this endpoint. If the repository is private you must
        use an access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: workflow_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                billable:
                  UBUNTU:
                    total_ms: 180000
                  MACOS:
                    total_ms: 240000
                  WINDOWS:
                    total_ms: 300000
  /repos/{owner}/{repo}/actions/workflows:
    get:
      tags:
        - repos > {owner}/{repo} > actions > workflows
      summary: List repository workflows
      description: >-
        Lists the workflows in a repository. Anyone with read access to the
        repository can use this endpoint. If the repository is private you must
        use an access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 2
                workflows:
                  - id: 161335
                    node_id: MDg6V29ya2Zsb3cxNjEzMzU=
                    name: CI
                    path: .github/workflows/blank.yml
                    state: active
                    created_at: '2020-01-08T23:48:37.000-08:00'
                    updated_at: '2020-01-08T23:50:21.000-08:00'
                    url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335
                    html_url: >-
                      https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335
                    badge_url: >-
                      https://github.com/octo-org/octo-repo/workflows/CI/badge.svg
                  - id: 269289
                    node_id: MDE4OldvcmtmbG93IFNlY29uZGFyeTI2OTI4OQ==
                    name: Linter
                    path: .github/workflows/linter.yml
                    state: active
                    created_at: '2020-01-08T23:48:37.000-08:00'
                    updated_at: '2020-01-08T23:50:21.000-08:00'
                    url: >-
                      https://api.github.com/repos/octo-org/octo-repo/actions/workflows/269289
                    html_url: >-
                      https://github.com/octo-org/octo-repo/blob/master/.github/workflows/269289
                    badge_url: >-
                      https://github.com/octo-org/octo-repo/workflows/Linter/badge.svg
  /repos/{owner}/{repo}/assignees:
    get:
      tags:
        - repos > {owner}/{repo} > assignees
      summary: List assignees
      description: >-
        Lists the [available
        assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/)
        for issues in a repository.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/assignees/{assignee}:
    get:
      tags:
        - repos > {owner}/{repo} > assignees
      summary: Check if a user can be assigned
      description: >-
        Checks if a user has permission to be assigned to an issue in this
        repository.


        If the `assignee` can be assigned to issues in the repository, a `204`
        header with no content is returned.


        Otherwise a `404` status code is returned.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: assignee
          in: path
          schema:
            type: string
          required: true
          description: (Required) assignee parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/automated-security-fixes:
    put:
      tags:
        - repos > {owner}/{repo} > automated-security-fixes
      summary: Enable automated security fixes
      description: >-
        Enables automated security fixes for a repository. The authenticated
        user must have admin access to the repository. For more information, see
        "[Configuring automated security
        fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)".
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - repos > {owner}/{repo} > automated-security-fixes
      summary: Disable automated security fixes
      description: >-
        Disables automated security fixes for a repository. The authenticated
        user must have admin access to the repository. For more information, see
        "[Configuring automated security
        fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)".
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > enforce
          admins
      summary: Get admin branch protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
                enabled: true
    post:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > enforce
          admins
      summary: Set admin branch protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Adding admin enforcement requires admin or owner permissions to the
        repository and branch protection to be enabled.
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
                enabled: true
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > enforce
          admins
      summary: Delete admin branch protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removing admin enforcement requires admin or owner permissions to the
        repository and branch protection to be enabled.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          pull request reviews
      summary: Get pull request review protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/vnd.github.luke-cage-preview+json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
                dismissal_restrictions:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
                  users_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
                  teams_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
                  users:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  teams:
                    - id: 1
                      node_id: MDQ6VGVhbTE=
                      url: https://api.github.com/teams/1
                      html_url: https://api.github.com/teams/justice-league
                      name: Justice League
                      slug: justice-league
                      description: A great team.
                      privacy: closed
                      permission: admin
                      members_url: https://api.github.com/teams/1/members{/member}
                      repositories_url: https://api.github.com/teams/1/repos
                      parent: null
                dismiss_stale_reviews: true
                require_code_owner_reviews: true
                required_approving_review_count: 2
    patch:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          pull request reviews
      summary: Update pull request review protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Updating pull request review enforcement requires admin or owner
        permissions to the repository and branch protection to be enabled.


        **Note**: Passing new arrays of `users` and `teams` replaces their
        previous values.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"dismissal_restrictions\": {\n        \"users\":
                [\n            \"<string>\",\n            \"<string>\"\n       
                ],\n        \"teams\": [\n            \"<string>\",\n           
                \"<string>\"\n        ]\n    },\n    \"dismiss_stale_reviews\":
                \"<boolean>\",\n    \"require_code_owner_reviews\":
                \"<boolean>\",\n    \"required_approving_review_count\":
                \"<integer>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
                dismissal_restrictions:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
                  users_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
                  teams_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
                  users:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  teams:
                    - id: 1
                      node_id: MDQ6VGVhbTE=
                      url: https://api.github.com/teams/1
                      html_url: https://api.github.com/teams/justice-league
                      name: Justice League
                      slug: justice-league
                      description: A great team.
                      privacy: closed
                      permission: admin
                      members_url: https://api.github.com/teams/1/members{/member}
                      repositories_url: https://api.github.com/teams/1/repos
                      parent: null
                dismiss_stale_reviews: true
                require_code_owner_reviews: true
                required_approving_review_count: 2
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          pull request reviews
      summary: Delete pull request review protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          signatures
      summary: Get commit signature protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository,
        you can use this endpoint to check whether a branch requires signed
        commits. An enabled status of `true` indicates you must sign commits on
        this branch. For more information, see [Signing commits with
        GPG](https://help.github.com/articles/signing-commits-with-gpg) in
        GitHub Help.


        **Note**: You must enable branch protection to require signed commits.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
                enabled: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          signatures
      summary: Create commit signature protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository,
        you can use this endpoint to require signed commits on a branch. You
        must enable branch protection to require signed commits.
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
                enabled: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          signatures
      summary: Delete commit signature protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository,
        you can use this endpoint to disable required signed commits on a
        branch. You must enable branch protection to require signed commits.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          status checks > contexts
      summary: Get all status check contexts
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - continuous-integration/travis-ci
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          status checks > contexts
      summary: Add status check contexts
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"[\n    \"<string>\",\n    \"<string>\"\n]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - continuous-integration/travis-ci
                - continuous-integration/jenkins
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    put:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          status checks > contexts
      summary: Set status check contexts
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"[\n    \"<string>\",\n    \"<string>\"\n]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - continuous-integration/travis-ci
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          status checks > contexts
      summary: Remove status check contexts
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - continuous-integration/travis-ci
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          status checks
      summary: Get status checks protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
                strict: true
                contexts:
                  - continuous-integration/travis-ci
                contexts_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          status checks
      summary: Update status check protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Updating required status checks requires admin or owner permissions to
        the repository and branch protection to be enabled.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"strict\": \"<boolean>\",\n    \"contexts\": [\n       
                \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
                strict: true
                contexts:
                  - continuous-integration/travis-ci
                contexts_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection > required
          status checks
      summary: Remove status check protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > apps
      summary: Get apps with access to the protected branch
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists the GitHub Apps that have push access to this branch. Only
        installed GitHub Apps with `write` access to the `contents` permission
        can be added as authorized actors on a protected branch.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > apps
      summary: Add app access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Grants the specified apps push access for this branch. Only installed
        GitHub Apps with `write` access to the `contents` permission can be
        added as authorized actors on a protected branch.


        | Type    |
        Description                                                                                                                                               
        |

        | ------- |
        ----------------------------------------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | The GitHub Apps that have push access to this branch. Use
        the app's `slug`. **Note**: The list of users, apps, and teams in total
        is limited to 100 items. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"[\n    \"<string>\",\n    \"<string>\"\n]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    put:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > apps
      summary: Set app access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Replaces the list of apps that have push access to this branch. This
        removes all apps that previously had push access and grants push access
        to the new list of apps. Only installed GitHub Apps with `write` access
        to the `contents` permission can be added as authorized actors on a
        protected branch.


        | Type    |
        Description                                                                                                                                               
        |

        | ------- |
        ----------------------------------------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | The GitHub Apps that have push access to this branch. Use
        the app's `slug`. **Note**: The list of users, apps, and teams in total
        is limited to 100 items. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"[\n    \"<string>\",\n    \"<string>\"\n]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > apps
      summary: Remove app access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removes the ability of an app to push to this branch. Only installed
        GitHub Apps with `write` access to the `contents` permission can be
        added as authorized actors on a protected branch.


        | Type    |
        Description                                                                                                                                               
        |

        | ------- |
        ----------------------------------------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | The GitHub Apps that have push access to this branch. Use
        the app's `slug`. **Note**: The list of users, apps, and teams in total
        is limited to 100 items. |
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > teams
      summary: Get teams with access to the protected branch
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists the teams who have push access to this branch. The list includes
        child teams.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://api.github.com/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > teams
      summary: Add team access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Grants the specified teams push access for this branch. You can also
        give push access to child teams.


        | Type    |
        Description                                                                                                                               
        |

        | ------- |
        ------------------------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | The teams that can have push access. Use the team's `slug`.
        **Note**: The list of users, apps, and teams in total is limited to 100
        items. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"[\n    \"<string>\",\n    \"<string>\"\n]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://api.github.com/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    put:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > teams
      summary: Set team access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Replaces the list of teams that have push access to this branch. This
        removes all teams that previously had push access and grants push access
        to the new list of teams. Team restrictions include child teams.


        | Type    |
        Description                                                                                                                               
        |

        | ------- |
        ------------------------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | The teams that can have push access. Use the team's `slug`.
        **Note**: The list of users, apps, and teams in total is limited to 100
        items. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"[\n    \"<string>\",\n    \"<string>\"\n]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://api.github.com/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > teams
      summary: Remove team access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removes the ability of a team to push to this branch. You can also
        remove push access for child teams.


        | Type    |
        Description                                                                                                                                        
        |

        | ------- |
        ---------------------------------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | Teams that should no longer have push access. Use the team's
        `slug`. **Note**: The list of users, apps, and teams in total is limited
        to 100 items. |
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://api.github.com/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > users
      summary: Get users with access to the protected branch
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists the people who have push access to this branch.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > users
      summary: Add user access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Grants the specified people push access for this branch.


        | Type    |
        Description                                                                                                                  
        |

        | ------- |
        -----------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | Usernames for people who can have push access. **Note**: The
        list of users, apps, and teams in total is limited to 100 items. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"[\n    \"<string>\",\n    \"<string>\"\n]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    put:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > users
      summary: Set user access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Replaces the list of people that have push access to this branch. This
        removes all people that previously had push access and grants push
        access to the new list of people.


        | Type    |
        Description                                                                                                                  
        |

        | ------- |
        -----------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | Usernames for people who can have push access. **Note**: The
        list of users, apps, and teams in total is limited to 100 items. |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"[\n    \"<string>\",\n    \"<string>\"\n]"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions > users
      summary: Remove user access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removes the ability of a user to push to this branch.


        | Type    |
        Description                                                                                                                                  
        |

        | ------- |
        ---------------------------------------------------------------------------------------------------------------------------------------------
        |

        | `array` | Usernames of the people who should no longer have push
        access. **Note**: The list of users, apps, and teams in total is limited
        to 100 items. |
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions:
    get:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions
      summary: Get access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists who has access to this protected branch.


        **Note**: Users, apps, and teams `restrictions` are only available for
        organization-owned repositories.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
                users_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
                teams_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
                apps_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
                users:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                teams:
                  - id: 1
                    node_id: MDQ6VGVhbTE=
                    url: https://api.github.com/teams/1
                    html_url: https://api.github.com/teams/justice-league
                    name: Justice League
                    slug: justice-league
                    description: A great team.
                    privacy: closed
                    permission: admin
                    members_url: https://api.github.com/teams/1/members{/member}
                    repositories_url: https://api.github.com/teams/1/repos
                    parent: null
                apps:
                  - id: 1
                    slug: octoapp
                    node_id: MDExOkludGVncmF0aW9uMQ==
                    owner:
                      login: github
                      id: 1
                      node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                      url: https://api.github.com/orgs/github
                      repos_url: https://api.github.com/orgs/github/repos
                      events_url: https://api.github.com/orgs/github/events
                      hooks_url: https://api.github.com/orgs/github/hooks
                      issues_url: https://api.github.com/orgs/github/issues
                      members_url: https://api.github.com/orgs/github/members{/member}
                      public_members_url: >-
                        https://api.github.com/orgs/github/public_members{/member}
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      description: A great organization
                    name: Octocat App
                    description: ''
                    external_url: https://example.com
                    html_url: https://github.com/apps/octoapp
                    created_at: '2017-07-08T16:18:44-04:00'
                    updated_at: '2017-07-08T16:18:44-04:00'
                    permissions:
                      metadata: read
                      contents: read
                      issues: write
                      single_file: write
                    events:
                      - push
                      - pull_request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - >-
          repos > {owner}/{repo} > branches > {branch} > protection >
          restrictions
      summary: Delete access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Disables the ability to restrict who can push to this branch.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/branches/{branch}/protection:
    get:
      tags:
        - repos > {owner}/{repo} > branches > {branch} > protection
      summary: Get branch protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches/master/protection
                enabled: true
                required_status_checks:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
                  contexts:
                    - continuous-integration/travis-ci
                  contexts_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
                  enforcement_level: non_admins
                enforce_admins:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
                  enabled: true
                required_pull_request_reviews:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
                  dismissal_restrictions:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
                    users_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
                    teams_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
                    users:
                      - login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                    teams:
                      - id: 1
                        node_id: MDQ6VGVhbTE=
                        url: https://api.github.com/teams/1
                        html_url: https://api.github.com/teams/justice-league
                        name: Justice League
                        slug: justice-league
                        description: A great team.
                        privacy: closed
                        permission: admin
                        members_url: https://api.github.com/teams/1/members{/member}
                        repositories_url: https://api.github.com/teams/1/repos
                        parent: null
                  dismiss_stale_reviews: true
                  require_code_owner_reviews: true
                  required_approving_review_count: 2
                restrictions:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
                  users_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
                  teams_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
                  apps_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
                  users:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  teams:
                    - id: 1
                      node_id: MDQ6VGVhbTE=
                      url: https://api.github.com/teams/1
                      html_url: https://api.github.com/teams/justice-league
                      name: Justice League
                      slug: justice-league
                      description: A great team.
                      privacy: closed
                      permission: admin
                      members_url: https://api.github.com/teams/1/members{/member}
                      repositories_url: https://api.github.com/teams/1/repos
                      parent: null
                  apps:
                    - id: 1
                      slug: octoapp
                      node_id: MDExOkludGVncmF0aW9uMQ==
                      owner:
                        login: github
                        id: 1
                        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                        url: https://api.github.com/orgs/github
                        repos_url: https://api.github.com/orgs/github/repos
                        events_url: https://api.github.com/orgs/github/events
                        hooks_url: https://api.github.com/orgs/github/hooks
                        issues_url: https://api.github.com/orgs/github/issues
                        members_url: https://api.github.com/orgs/github/members{/member}
                        public_members_url: >-
                          https://api.github.com/orgs/github/public_members{/member}
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        description: A great organization
                      name: Octocat App
                      description: ''
                      external_url: https://example.com
                      html_url: https://github.com/apps/octoapp
                      created_at: '2017-07-08T16:18:44-04:00'
                      updated_at: '2017-07-08T16:18:44-04:00'
                      permissions:
                        metadata: read
                        contents: read
                        issues: write
                        single_file: write
                      events:
                        - push
                        - pull_request
                required_linear_history:
                  enabled: true
                allow_force_pushes:
                  enabled: true
                allow_deletions:
                  enabled: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - repos > {owner}/{repo} > branches > {branch} > protection
      summary: Update branch protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Protecting a branch requires admin or owner permissions to the
        repository.


        **Note**: Passing new arrays of `users` and `teams` replaces their
        previous values.


        **Note**: The list of users, apps, and teams in total is limited to 100
        items.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"required_status_checks\": {\n        \"strict\":
                \"<boolean>\",\n        \"contexts\": [\n           
                \"<string>\",\n            \"<string>\"\n        ]\n    },\n   
                \"enforce_admins\": \"<boolean>\",\n   
                \"required_pull_request_reviews\": {\n       
                \"dismissal_restrictions\": {\n            \"users\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"teams\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        },\n       
                \"dismiss_stale_reviews\": \"<boolean>\",\n       
                \"require_code_owner_reviews\": \"<boolean>\",\n       
                \"required_approving_review_count\": \"<integer>\"\n    },\n   
                \"restrictions\": {\n        \"users\": [\n           
                \"<string>\",\n            \"<string>\"\n        ],\n       
                \"teams\": [\n            \"<string>\",\n           
                \"<string>\"\n        ],\n        \"apps\": [\n           
                \"<string>\",\n            \"<string>\"\n        ]\n    },\n   
                \"required_linear_history\": \"<boolean>\",\n   
                \"allow_force_pushes\": \"<boolean>\",\n    \"allow_deletions\":
                \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: deserunt consectetur do
                required_status_checks:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
                  contexts_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
                  strict: true
                  contexts:
                    - continuous-integration/travis-ci
                required_pull_request_reviews:
                  url: anim labore
                  dismiss_stale_reviews: false
                  require_code_owner_reviews: false
                  required_approving_review_count: -56907738
                  dismissal_restrictions:
                    url: adipisicing Ut
                    users_url: Ut id consectetur ipsum
                    teams_url: cupidatat et voluptate ut incididunt
                    users:
                      - avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      - avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                    teams:
                      - id: -98654282
                        node_id: dolor Ut officia ad
                        url: qui ex mollit sit enim
                        members_url: minim consectetur
                        name: consequat
                        description: adipisicing tempor fugiat proident
                        permission: voluptate ex ut
                        html_url: https://github.com/orgs/rails/teams/core
                        repositories_url: ex Excepteur officia ut
                        slug: reprehenderit adipis
                        privacy: aliquip ea
                        parent:
                          id: 1
                          node_id: MDQ6VGVhbTE=
                          url: https://api.github.com/organizations/1/team/1
                          members_url: >-
                            https://api.github.com/organizations/1/team/1/members{/member}
                          name: Justice League
                          description: A great team.
                          permission: admin
                          html_url: https://github.com/orgs/rails/teams/core
                          repositories_url: https://api.github.com/organizations/1/team/1/repos
                          slug: justice-league
                          privacy: closed
                          ldap_dn: uid=example,ou=users,dc=github,dc=com
                      - id: 33624176
                        node_id: sunt
                        url: aute aliquip labore cillum
                        members_url: id Ut enim
                        name: ipsum proident consequat
                        description: in esse commodo
                        permission: officia elit
                        html_url: https://github.com/orgs/rails/teams/core
                        repositories_url: aliquip esse commodo tempor
                        slug: elit qui nisi ut
                        privacy: eu ess
                        parent:
                          id: 1
                          node_id: MDQ6VGVhbTE=
                          url: https://api.github.com/organizations/1/team/1
                          members_url: >-
                            https://api.github.com/organizations/1/team/1/members{/member}
                          name: Justice League
                          description: A great team.
                          permission: admin
                          html_url: https://github.com/orgs/rails/teams/core
                          repositories_url: https://api.github.com/organizations/1/team/1/repos
                          slug: justice-league
                          privacy: closed
                          ldap_dn: uid=example,ou=users,dc=github,dc=com
                required_signatures:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
                  enabled: true
                enforce_admins:
                  url: ut quis tempor
                  enabled: true
                required_linear_history:
                  enabled: false
                allow_force_pushes:
                  enabled: true
                allow_deletions:
                  enabled: false
                restrictions:
                  url: in occaecat
                  users_url: dolor nisi ex quis exercitation
                  teams_url: elit dolore in ex
                  apps_url: et quis sint cu
                  users:
                    - login: laboris deserunt tempo
                      id: -93347071
                      node_id: aliquip irure
                      avatar_url: aliqua dolore dese
                      gravatar_id: labore cupidatat ipsum
                      url: est tempor quis
                      html_url: pariatur velit
                      followers_url: elit sit
                      following_url: consectetur nisi ad sed
                      gists_url: sed Lorem eu fugiat
                      starred_url: occaecat pariatur
                      subscriptions_url: velit qui dolore
                      organizations_url: elit dolore tempor eu quis
                      repos_url: velit mollit l
                      events_url: id ex commodo sint
                      received_events_url: in
                      type: nisi dolor et
                      site_admin: false
                    - login: reprehenderit ad in labore Duis
                      id: -19448178
                      node_id: id dolor est
                      avatar_url: culpa Duis
                      gravatar_id: mollit nostrud
                      url: enim veniam reprehenderit
                      html_url: in magna exercitation
                      followers_url: cillum velit officia aute
                      following_url: fugiat commodo et d
                      gists_url: consequat pariatur
                      starred_url: laboris reprehenderit esse
                      subscriptions_url: tempor occaecat amet
                      organizations_url: ipsum consequat
                      repos_url: ullamco eu
                      events_url: dolor
                      received_events_url: enim
                      type: qui est
                      site_admin: true
                  teams:
                    - id: 71159569
                      node_id: ea
                      url: eiusmod aute
                      html_url: aute
                      name: anim voluptate ut
                      slug: in mollit
                      description: officia
                      privacy: deserunt eiusmod irure officia
                      permission: sed
                      members_url: 'tempor aute '
                      repositories_url: qui deseru
                      parent: ea ipsum sit
                    - id: -72381659
                      node_id: dolore officia irure minim
                      url: ipsum sed
                      html_url: ut
                      name: nulla dolor ad elit
                      slug: laboris ipsum adipisicing reprehenderit cillum
                      description: eiusmod
                      privacy: in consectetur ut
                      permission: ad labore pariatur
                      members_url: id Ut cupidatat
                      repositories_url: culpa ad adipisicing reprehenderit
                      parent: tempor n
                  apps:
                    - id: -9035988
                      slug: laboris esse in
                      node_id: ipsum qui p
                      owner:
                        login: deserunt sint reprehenderit incididunt
                        id: 31501709
                        node_id: 'tempor aliquip '
                        url: dolore pariatur occaecat sunt
                        repos_url: dolor in nostrud
                        events_url: magna sed sint
                        hooks_url: veniam adipisicing fugiat
                        issues_url: cillum minim
                        members_url: occaecat
                        public_members_url: consequat ani
                        avatar_url: in proident
                        description: ullamco laboris do velit elit
                        gravatar_id: '""'
                        html_url: '"https://github.com/testorg-ea8ec76d71c3af4b"'
                        followers_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"
                        following_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"
                        gists_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"
                        starred_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"
                        subscriptions_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"
                        organizations_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"
                        received_events_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"
                        type: '"Organization"'
                      name: culpa cillum
                      description: dolore proident ut
                      external_url: laborum deserunt
                      html_url: anim magna eiusmod i
                      created_at: labore quis minim dolore
                      updated_at: labore cillum Lorem
                      permissions:
                        metadata: veniam anim aliquip consequat
                        contents: non velit
                        issues: non eiusmod elit
                        single_file: esse sint Excepteur cupidatat ut
                      events:
                        - minim consequat
                        - dolor esse ipsum pariatur cupidatat
                    - id: 69184777
                      slug: quis officia Excepteur
                      node_id: ea
                      owner:
                        login: deserunt veniam
                        id: -5725275
                        node_id: eiusmod dolore
                        url: deserunt adipisicing dolore
                        repos_url: reprehenderit dolore
                        events_url: ut magna in minim
                        hooks_url: ipsum
                        issues_url: in minim nostrud
                        members_url: irure elit non
                        public_members_url: consectetur aute
                        avatar_url: nulla
                        description: reprehenderit Excepteur sit
                        gravatar_id: '""'
                        html_url: '"https://github.com/testorg-ea8ec76d71c3af4b"'
                        followers_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"
                        following_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"
                        gists_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"
                        starred_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"
                        subscriptions_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"
                        organizations_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"
                        received_events_url: >-
                          "https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"
                        type: '"Organization"'
                      name: sit Ut
                      description: mollit proident
                      external_url: non proi
                      html_url: in sunt
                      created_at: in quis exercitation veniam reprehenderit
                      updated_at: nostrud sint voluptate
                      permissions:
                        metadata: laboris nisi Excepteur labore
                        contents: sit deserunt
                        issues: nostrud officia cillum est dolore
                        single_file: ut
                      events:
                        - ex et
                        - in officia esse
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
    delete:
      tags:
        - repos > {owner}/{repo} > branches > {branch} > protection
      summary: Delete branch protection
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/branches/{branch}:
    get:
      tags:
        - repos > {owner}/{repo} > branches > {branch}
      summary: Get a branch
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: (Required) branch+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: master
                commit:
                  sha: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                  node_id: >-
                    MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==
                  commit:
                    author:
                      name: The Octocat
                      date: '2012-03-06T15:06:50-08:00'
                      email: octocat@nowhere.com
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                    message: |-
                      Merge pull request #6 from Spaceghost/patch-1

                      New line at end of file.
                    tree:
                      sha: b4eecafa9be2f2006ce1b709d6857b07069b4608
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608
                    committer:
                      name: The Octocat
                      date: '2012-03-06T15:06:50-08:00'
                      email: octocat@nowhere.com
                    verification:
                      verified: false
                      reason: unsigned
                      signature: null
                      payload: null
                    comment_count: 0
                  author:
                    gravatar_id: ''
                    avatar_url: >-
                      https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
                    url: https://api.github.com/users/octocat
                    id: 583231
                    login: octocat
                    node_id: MDQ6VXNlcjE=
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  parents:
                    - sha: 553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
                    - sha: 762941318ee16e59dabbacb1b4049eec22f0d303
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                  committer:
                    gravatar_id: ''
                    avatar_url: >-
                      https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
                    url: https://api.github.com/users/octocat
                    id: 583231
                    login: octocat
                    node_id: MDQ6VXNlcjE=
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  html_url: >-
                    https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
                _links:
                  html: https://github.com/octocat/Hello-World/tree/master
                  self: >-
                    https://api.github.com/repos/octocat/Hello-World/branches/master
                protected: true
                protection:
                  enabled: true
                  required_status_checks:
                    enforcement_level: non_admins
                    contexts:
                      - ci-test
                      - linter
                protection_url: >-
                  https://api.github.com/repos/octocat/hello-world/branches/master/protection
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /repos/{owner}/{repo}/branches:
    get:
      tags:
        - repos > {owner}/{repo} > branches
      summary: List branches
      parameters:
        - name: protected
          in: query
          schema:
            type: string
          description: >-
            Setting to `true` returns only protected branches. When set to
            `false`, only unprotected branches are returned. Omitting this
            parameter returns all branches.
          example: <boolean>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: master
                  commit:
                    sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
                  protected: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/check-runs/{check_run_id}:
    get:
      tags:
        - repos > {owner}/{repo} > check-runs > {check run id}
      summary: Get a check run
      description: >-
        **Note:** The Checks API only looks for pushes in the repository where
        the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Gets a single check run using its `id`. GitHub Apps must have the
        `checks:read` permission on a private repository or pull access to a
        public repository to get check runs. OAuth Apps and authenticated users
        must have the `repo` scope to get check runs in a private repository.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: check_run_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) check_run_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 4
                head_sha: ce587453ced02b1526dfb4cb910479d431683101
                node_id: MDg6Q2hlY2tSdW40
                external_id: ''
                url: https://api.github.com/repos/github/hello-world/check-runs/4
                html_url: https://github.com/github/hello-world/runs/4
                details_url: https://example.com
                status: completed
                conclusion: neutral
                started_at: '2018-05-04T01:14:52Z'
                completed_at: '2018-05-04T01:14:52Z'
                output:
                  title: Mighty Readme report
                  summary: There are 0 failures, 2 warnings, and 1 notice.
                  text: >-
                    You may have some misspelled words on lines 2 and 4. You
                    also may want to add a section in your README about how to
                    install your app.
                  annotations_count: 2
                  annotations_url: >-
                    https://api.github.com/repos/github/hello-world/check-runs/4/annotations
                name: mighty_readme
                check_suite:
                  id: 5
                app:
                  id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
                pull_requests:
                  - url: https://api.github.com/repos/github/hello-world/pulls/1
                    id: 1934
                    number: 3956
                    head:
                      ref: say-hello
                      sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
                      repo:
                        id: 526
                        url: https://api.github.com/repos/github/hello-world
                        name: hello-world
                    base:
                      ref: master
                      sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
                      repo:
                        id: 526
                        url: https://api.github.com/repos/github/hello-world
                        name: hello-world
    patch:
      tags:
        - repos > {owner}/{repo} > check-runs > {check run id}
      summary: Update a check run
      description: >-
        **Note:** The Checks API only looks for pushes in the repository where
        the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Updates a check run for a specific commit in a repository. Your GitHub
        App must have the `checks:write` permission to edit check runs.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"details_url\":
                \"<string>\",\n    \"external_id\": \"<string>\",\n   
                \"started_at\": \"<string>\",\n    \"status\":
                \"<string>\",\n    \"conclusion\": \"<string>\",\n   
                \"completed_at\": \"<string>\",\n    \"output\": {\n       
                \"summary\": \"<string>\",\n        \"title\":
                \"<string>\",\n        \"text\": \"<string>\",\n       
                \"annotations\": [\n            {\n                \"path\":
                \"<string>\",\n                \"start_line\":
                \"<integer>\",\n                \"end_line\":
                \"<integer>\",\n                \"annotation_level\":
                \"<string>\",\n                \"message\":
                \"<string>\",\n                \"start_column\":
                \"<integer>\",\n                \"end_column\":
                \"<integer>\",\n                \"title\":
                \"<string>\",\n                \"raw_details\":
                \"<string>\"\n            },\n            {\n               
                \"path\": \"<string>\",\n                \"start_line\":
                \"<integer>\",\n                \"end_line\":
                \"<integer>\",\n                \"annotation_level\":
                \"<string>\",\n                \"message\":
                \"<string>\",\n                \"start_column\":
                \"<integer>\",\n                \"end_column\":
                \"<integer>\",\n                \"title\":
                \"<string>\",\n                \"raw_details\":
                \"<string>\"\n            }\n        ],\n        \"images\":
                [\n            {\n                \"alt\":
                \"<string>\",\n                \"image_url\":
                \"<string>\",\n                \"caption\":
                \"<string>\"\n            },\n            {\n               
                \"alt\": \"<string>\",\n                \"image_url\":
                \"<string>\",\n                \"caption\":
                \"<string>\"\n            }\n        ]\n    },\n    \"actions\":
                [\n        {\n            \"label\": \"<string>\",\n           
                \"description\": \"<string>\",\n            \"identifier\":
                \"<string>\"\n        },\n        {\n            \"label\":
                \"<string>\",\n            \"description\":
                \"<string>\",\n            \"identifier\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: check_run_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) check_run_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 4
                head_sha: ce587453ced02b1526dfb4cb910479d431683101
                node_id: MDg6Q2hlY2tSdW40
                external_id: ''
                url: https://api.github.com/repos/github/hello-world/check-runs/4
                html_url: https://github.com/github/hello-world/runs/4
                details_url: https://example.com
                status: completed
                conclusion: neutral
                started_at: '2018-05-04T01:14:52Z'
                completed_at: '2018-05-04T01:14:52Z'
                output:
                  title: Mighty Readme report
                  summary: There are 0 failures, 2 warnings, and 1 notice.
                  text: >-
                    You may have some misspelled words on lines 2 and 4. You
                    also may want to add a section in your README about how to
                    install your app.
                  annotations_count: 2
                  annotations_url: >-
                    https://api.github.com/repos/github/hello-world/check-runs/4/annotations
                name: mighty_readme
                check_suite:
                  id: 5
                app:
                  id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
                pull_requests:
                  - url: https://api.github.com/repos/github/hello-world/pulls/1
                    id: 1934
                    number: 3956
                    head:
                      ref: say-hello
                      sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
                      repo:
                        id: 526
                        url: https://api.github.com/repos/github/hello-world
                        name: hello-world
                    base:
                      ref: master
                      sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
                      repo:
                        id: 526
                        url: https://api.github.com/repos/github/hello-world
                        name: hello-world
  /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations:
    get:
      tags:
        - repos > {owner}/{repo} > check-runs > {check run id}
      summary: List check run annotations
      description: >-
        Lists annotations for a check run using the annotation `id`. GitHub Apps
        must have the `checks:read` permission on a private repository or pull
        access to a public repository to get annotations for a check run. OAuth
        Apps and authenticated users must have the `repo` scope to get
        annotations for a check run in a private repository.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: check_run_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) check_run_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - path: README.md
                  start_line: 2
                  end_line: 2
                  start_column: 5
                  end_column: 10
                  annotation_level: warning
                  title: Spell Checker
                  message: Check your spelling for 'banaas'.
                  raw_details: Do you mean 'bananas' or 'banana'?
                  blob_href: >-
                    https://api.github.com/repos/github/rest-api-description/git/blobs/abc
  /repos/{owner}/{repo}/check-runs:
    post:
      tags:
        - repos > {owner}/{repo} > check-runs
      summary: Create a check run
      description: >-
        **Note:** The Checks API only looks for pushes in the repository where
        the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Creates a new check run for a specific commit in a repository. Your
        GitHub App must have the `checks:write` permission to create check runs.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"head_sha\":
                \"<string>\",\n    \"details_url\": \"<string>\",\n   
                \"external_id\": \"<string>\",\n    \"status\": \"queued\",\n   
                \"started_at\": \"<string>\",\n    \"conclusion\":
                \"<string>\",\n    \"completed_at\": \"<string>\",\n   
                \"output\": {\n        \"title\": \"<string>\",\n       
                \"summary\": \"<string>\",\n        \"text\":
                \"<string>\",\n        \"annotations\": [\n           
                {\n                \"path\": \"<string>\",\n               
                \"start_line\": \"<integer>\",\n                \"end_line\":
                \"<integer>\",\n                \"annotation_level\":
                \"<string>\",\n                \"message\":
                \"<string>\",\n                \"start_column\":
                \"<integer>\",\n                \"end_column\":
                \"<integer>\",\n                \"title\":
                \"<string>\",\n                \"raw_details\":
                \"<string>\"\n            },\n            {\n               
                \"path\": \"<string>\",\n                \"start_line\":
                \"<integer>\",\n                \"end_line\":
                \"<integer>\",\n                \"annotation_level\":
                \"<string>\",\n                \"message\":
                \"<string>\",\n                \"start_column\":
                \"<integer>\",\n                \"end_column\":
                \"<integer>\",\n                \"title\":
                \"<string>\",\n                \"raw_details\":
                \"<string>\"\n            }\n        ],\n        \"images\":
                [\n            {\n                \"alt\":
                \"<string>\",\n                \"image_url\":
                \"<string>\",\n                \"caption\":
                \"<string>\"\n            },\n            {\n               
                \"alt\": \"<string>\",\n                \"image_url\":
                \"<string>\",\n                \"caption\":
                \"<string>\"\n            }\n        ]\n    },\n    \"actions\":
                [\n        {\n            \"label\": \"<string>\",\n           
                \"description\": \"<string>\",\n            \"identifier\":
                \"<string>\"\n        },\n        {\n            \"label\":
                \"<string>\",\n            \"description\":
                \"<string>\",\n            \"identifier\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 4
                head_sha: ce587453ced02b1526dfb4cb910479d431683101
                node_id: MDg6Q2hlY2tSdW40
                external_id: '42'
                url: https://api.github.com/repos/github/hello-world/check-runs/4
                html_url: https://github.com/github/hello-world/runs/4
                details_url: https://example.com
                status: in_progress
                conclusion: null
                started_at: '2018-05-04T01:14:52Z'
                completed_at: null
                output:
                  title: Mighty Readme Report
                  summary: ''
                  text: ''
                  annotations_count: 1
                  annotations_url: >-
                    https://api.github.com/repos/github/hello-world/check-runs/4/annotations
                name: mighty_readme
                check_suite:
                  id: 5
                app:
                  id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
                pull_requests:
                  - url: https://api.github.com/repos/github/hello-world/pulls/1
                    id: 1934
                    number: 3956
                    head:
                      ref: say-hello
                      sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
                      repo:
                        id: 526
                        url: https://api.github.com/repos/github/hello-world
                        name: hello-world
                    base:
                      ref: master
                      sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
                      repo:
                        id: 526
                        url: https://api.github.com/repos/github/hello-world
                        name: hello-world
  /repos/{owner}/{repo}/check-suites/{check_suite_id}:
    get:
      tags:
        - repos > {owner}/{repo} > check-suites > {check suite id}
      summary: Get a check suite
      description: >-
        **Note:** The Checks API only looks for pushes in the repository where
        the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array and a `null` value for `head_branch`.


        Gets a single check suite using its `id`. GitHub Apps must have the
        `checks:read` permission on a private repository or pull access to a
        public repository to get check suites. OAuth Apps and authenticated
        users must have the `repo` scope to get check suites in a private
        repository.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: check_suite_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) check_suite_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 5
                node_id: MDEwOkNoZWNrU3VpdGU1
                head_branch: master
                head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
                status: completed
                conclusion: neutral
                url: https://api.github.com/repos/github/hello-world/check-suites/5
                before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
                after: d6fde92930d4715a2b49857d24b940956b26d2d3
                pull_requests: []
                created_at: '2017-07-08T16:18:44-04:00'
                updated_at: '2017-07-08T16:18:44-04:00'
                app:
                  id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
                repository:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  template_repository: octocat/template-repo
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                head_commit:
                  id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                  tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                  message: |-
                    Merge pull request #6 from Spaceghost/patch-1

                    New line at end of file.
                  timestamp: '2016-10-10T00:00:00Z'
                  author:
                    name: The Octocat
                    email: octocat@nowhere.com
                  committer:
                    name: The Octocat
                    email: octocat@nowhere.com
                latest_check_runs_count: 1
                check_runs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
  /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs:
    get:
      tags:
        - repos > {owner}/{repo} > check-suites > {check suite id}
      summary: List check runs in a check suite
      description: >-
        **Note:** The Checks API only looks for pushes in the repository where
        the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Lists check runs for a check suite using its `id`. GitHub Apps must have
        the `checks:read` permission on a private repository or pull access to a
        public repository to get check runs. OAuth Apps and authenticated users
        must have the `repo` scope to get check runs in a private repository.
      parameters:
        - name: check_name
          in: query
          schema:
            type: string
          description: Returns check runs with the specified `name`.
          example: <string>
        - name: status
          in: query
          schema:
            type: string
          description: >-
            Returns check runs with the specified `status`. Can be one of
            `queued`, `in_progress`, or `completed`.
          example: <string>
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Filters check runs by their `completed_at` timestamp. Can be one of
            `latest` (returning the most recent check runs) or `all`.
          example: latest
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: check_suite_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) check_suite_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                check_runs:
                  - id: 4
                    head_sha: ce587453ced02b1526dfb4cb910479d431683101
                    node_id: MDg6Q2hlY2tSdW40
                    external_id: ''
                    url: >-
                      https://api.github.com/repos/github/hello-world/check-runs/4
                    html_url: https://github.com/github/hello-world/runs/4
                    details_url: https://example.com
                    status: completed
                    conclusion: neutral
                    started_at: '2018-05-04T01:14:52Z'
                    completed_at: '2018-05-04T01:14:52Z'
                    output:
                      title: Mighty Readme report
                      summary: There are 0 failures, 2 warnings, and 1 notice.
                      text: >-
                        You may have some misspelled words on lines 2 and 4. You
                        also may want to add a section in your README about how
                        to install your app.
                      annotations_count: 2
                      annotations_url: >-
                        https://api.github.com/repos/github/hello-world/check-runs/4/annotations
                    name: mighty_readme
                    check_suite:
                      id: 5
                    app:
                      id: 1
                      slug: octoapp
                      node_id: MDExOkludGVncmF0aW9uMQ==
                      owner:
                        login: github
                        id: 1
                        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                        url: https://api.github.com/orgs/github
                        repos_url: https://api.github.com/orgs/github/repos
                        events_url: https://api.github.com/orgs/github/events
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: true
                      name: Octocat App
                      description: ''
                      external_url: https://example.com
                      html_url: https://github.com/apps/octoapp
                      created_at: '2017-07-08T16:18:44-04:00'
                      updated_at: '2017-07-08T16:18:44-04:00'
                      permissions:
                        metadata: read
                        contents: read
                        issues: write
                        single_file: write
                      events:
                        - push
                        - pull_request
                    pull_requests:
                      - url: >-
                          https://api.github.com/repos/github/hello-world/pulls/1
                        id: 1934
                        number: 3956
                        head:
                          ref: say-hello
                          sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
                          repo:
                            id: 526
                            url: https://api.github.com/repos/github/hello-world
                            name: hello-world
                        base:
                          ref: master
                          sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
                          repo:
                            id: 526
                            url: https://api.github.com/repos/github/hello-world
                            name: hello-world
  /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest:
    post:
      tags:
        - repos > {owner}/{repo} > check-suites > {check suite id}
      summary: Rerequest a check suite
      description: >-
        Triggers GitHub to rerequest an existing check suite, without pushing
        new code to a repository. This endpoint will trigger the [`check_suite`
        webhook](https://developer.github.com/webhooks/event-payloads/#check_suite)
        event with the action `rerequested`. When a check suite is
        `rerequested`, its `status` is reset to `queued` and the `conclusion` is
        cleared.


        To rerequest a check suite, your GitHub App must have the `checks:read`
        permission on a private repository or pull access to a public
        repository.
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: check_suite_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) check_suite_id parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/check-suites:
    post:
      tags:
        - repos > {owner}/{repo} > check-suites
      summary: Create a check suite
      description: >-
        **Note:** The Checks API only looks for pushes in the repository where
        the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array and a `null` value for `head_branch`.


        By default, check suites are automatically created when you create a
        [check run](https://developer.github.com/v3/checks/runs/). You only need
        to use this endpoint for manually creating check suites when you've
        disabled automatic creation using "[Update repository preferences for
        check
        suites](https://developer.github.com/v3/checks/suites/#update-repository-preferences-for-check-suites)".
        Your GitHub App must have the `checks:write` permission to create check
        suites.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"head_sha\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 5
                node_id: MDEwOkNoZWNrU3VpdGU1
                head_branch: master
                head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
                status: completed
                conclusion: neutral
                url: https://api.github.com/repos/github/hello-world/check-suites/5
                before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
                after: d6fde92930d4715a2b49857d24b940956b26d2d3
                pull_requests: []
                created_at: '2017-07-08T16:18:44-04:00'
                updated_at: '2017-07-08T16:18:44-04:00'
                app:
                  id: 1
                  slug: octoapp
                  node_id: MDExOkludGVncmF0aW9uMQ==
                  owner:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: true
                  name: Octocat App
                  description: ''
                  external_url: https://example.com
                  html_url: https://github.com/apps/octoapp
                  created_at: '2017-07-08T16:18:44-04:00'
                  updated_at: '2017-07-08T16:18:44-04:00'
                  permissions:
                    metadata: read
                    contents: read
                    issues: write
                    single_file: write
                  events:
                    - push
                    - pull_request
                repository:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  template_repository: octocat/template-repo
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                head_commit:
                  id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                  tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                  message: |-
                    Merge pull request #6 from Spaceghost/patch-1

                    New line at end of file.
                  timestamp: '2016-10-10T00:00:00Z'
                  author:
                    name: The Octocat
                    email: octocat@nowhere.com
                  committer:
                    name: The Octocat
                    email: octocat@nowhere.com
                latest_check_runs_count: 1
                check_runs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
  /repos/{owner}/{repo}/check-suites/preferences:
    patch:
      tags:
        - repos > {owner}/{repo} > check-suites
      summary: Update repository preferences for check suites
      description: >-
        Changes the default automatic flow when creating check suites. By
        default, a check suite is automatically created each time code is pushed
        to a repository. When you disable the automatic creation of check
        suites, you can manually [Create a check
        suite](https://developer.github.com/v3/checks/suites/#create-a-check-suite).
        You must have admin permissions in the repository to set preferences for
        check suites.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"auto_trigger_checks\": [\n        {\n           
                \"app_id\": \"<integer>\",\n            \"setting\":
                true\n        },\n        {\n            \"app_id\":
                \"<integer>\",\n            \"setting\": true\n        }\n   
                ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                preferences:
                  auto_trigger_checks:
                    - app_id: 2
                      setting: true
                    - app_id: 4
                      setting: false
                repository:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  allow_rebase_merge: true
                  template_repository: null
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  allow_squash_merge: true
                  delete_branch_on_merge: true
                  allow_merge_commit: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    url: https://api.github.com/licenses/mit
                    spdx_id: MIT
                    node_id: MDc6TGljZW5zZW1pdA==
                    html_url: http://choosealicense.com/licenses/mit/
                  forks: 1
                  open_issues: 1
                  watchers: 1
  /repos/{owner}/{repo}/code-scanning/alerts:
    get:
      tags:
        - repos > {owner}/{repo} > code-scanning/alerts
      summary: List code scanning alerts for a repository
      description: >-
        Lists all open code scanning alerts for the default branch (usually
        `master`) and protected branches in a repository. You must use an access
        token with the `security_events` scope to use this endpoint. GitHub Apps
        must have the `security_events` read permission to use this endpoint.
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: Set to `closed` to list only closed code scanning alerts.
          example: open
        - name: ref
          in: query
          schema:
            type: string
          description: >-
            Returns a list of code scanning alerts for a specific brach
            reference. The `ref` must be formatted as `heads/<branch name>`.
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - number: 42
                  rule_id: js/trivial-conditional
                  rule_severity: warning
                  rule_description: Useless conditional
                  tool: CodeQL
                  created_at: '2020-05-06T12:00:00Z'
                  open: true
                  closed_by: null
                  closed_at: null
                  url: >-
                    https://api.github.com/repos/Octo-org/octo-repo/code-scanning/alerts/25
                  html_url: >-
                    https://github.com/Octo-org/octo-repo/security/code-scanning/25
                - number: 43
                  rule_id: js/useless-expression
                  rule_severity: warning
                  rule_description: Expression has no effect
                  tool: CodeQL
                  created_at: '2020-05-06T12:00:00Z'
                  open: true
                  closed_by: null
                  closed_at: null
                  url: >-
                    https://api.github.com/repos/Octo-org/octo-repo/code-scanning/alerts/88
                  html_url: >-
                    https://github.com/Octo-org/octo-repo/security/code-scanning/88
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /repos/{owner}/{repo}/code-scanning/alerts/{alert_id}:
    get:
      tags:
        - repos > {owner}/{repo} > code-scanning/alerts
      summary: Get a code scanning alert
      description: >-
        Gets a single code scanning alert. You must use an access token with the
        `security_events` scope to use this endpoint. GitHub Apps must have the
        `security_events` read permission to use this endpoint.


        The security `alert_id` is found at the end of the security alert's URL.
        For example, the security alert ID for
        `https://github.com/Octo-org/octo-repo/security/code-scanning/88` is
        `88`.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: alert_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) alert_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rule_id: js/useless-expression
                rule_severity: warning
                rule_description: Expression has no effect
                tool: CodeQL
                created_at: '2020-05-06T12:00:00Z'
                open: true
                closed_by: null
                closed_at: null
                url: >-
                  https://api.github.com/repos/Octo-org/octo-repo/code-scanning/alerts/88
                html_url: >-
                  https://github.com/Octo-org/octo-repo/security/code-scanning/88
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /repos/{owner}/{repo}/collaborators/{username}:
    get:
      tags:
        - repos > {owner}/{repo} > collaborators > {username}
      summary: Check if a user is a repository collaborator
      description: >-
        For organization-owned repositories, the list of collaborators includes
        outside collaborators, organization members that are direct
        collaborators, organization members with access through team
        memberships, organization members with access through default
        organization permissions, and organization owners.


        Team members will include the members of child teams.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - repos > {owner}/{repo} > collaborators > {username}
      summary: Add a repository collaborator
      description: >-
        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.


        For more information the permission levels, see "[Repository permission
        levels for an
        organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".


        Note that, if you choose not to pass any parameters, you'll need to set
        `Content-Length` to zero when calling out to this endpoint. For more
        information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."


        The invitee will receive a notification that they have been invited to
        the repository, which they must accept or decline. They may do this via
        the notifications page, the email they receive, or by using the
        [repository invitations API
        endpoints](https://developer.github.com/v3/repos/invitations/).


        **Rate limits**


        To prevent abuse, you are limited to sending 50 invitations to a
        repository per 24 hour period. Note there is no limit if you are
        inviting organization members to an organization repository.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"permission\": \"push\",\n    \"permissions\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                repository:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                invitee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                inviter:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                permissions: write
                created_at: '2016-06-13T14:52:50-05:00'
                url: https://api.github.com/user/repository_invitations/1296269
                html_url: https://github.com/octocat/Hello-World/invitations
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo} > collaborators > {username}
      summary: Remove a repository collaborator
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/collaborators/{username}/permission:
    get:
      tags:
        - repos > {owner}/{repo} > collaborators > {username}
      summary: Get repository permissions for a user
      description: >-
        Checks the repository permission of a collaborator. The possible
        repository permissions are `admin`, `write`, `read`, and `none`.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                permission: admin
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/collaborators:
    get:
      tags:
        - repos > {owner}/{repo} > collaborators
      summary: List repository collaborators
      description: >-
        For organization-owned repositories, the list of collaborators includes
        outside collaborators, organization members that are direct
        collaborators, organization members with access through team
        memberships, organization members with access through default
        organization permissions, and organization owners.


        Team members will include the members of child teams.
      parameters:
        - name: affiliation
          in: query
          schema:
            type: string
          description: >-
            Filter collaborators returned by their affiliation. Can be one of:  

            \* `outside`: All outside collaborators of an organization-owned
            repository.  

            \* `direct`: All collaborators with permissions to an
            organization-owned repository, regardless of organization membership
            status.  

            \* `all`: All collaborators the authenticated user can see.
          example: all
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                  permissions:
                    pull: true
                    push: true
                    admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/comments/{comment_id}/reactions:
    get:
      tags:
        - repos > {owner}/{repo} > comments > {comment id} > reactions
      summary: List reactions for a commit comment
      description: >-
        List the reactions to a [commit
        comment](https://developer.github.com/v3/repos/comments/).
      parameters:
        - name: content
          in: query
          schema:
            type: string
          description: >-
            Returns a single [reaction
            type](https://developer.github.com/v3/reactions/#reaction-types).
            Omit this parameter to list all reactions to a commit comment.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDg6UmVhY3Rpb24x
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  content: heart
                  created_at: '2016-05-20T20:09:31Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
    post:
      tags:
        - repos > {owner}/{repo} > comments > {comment id} > reactions
      summary: Create reaction for a commit comment
      description: >-
        Create a reaction to a [commit
        comment](https://developer.github.com/v3/repos/comments/). A response
        with a `Status: 200 OK` means that you already added the reaction type
        to this commit comment.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"content\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}:
    delete:
      tags:
        - repos > {owner}/{repo} > comments > {comment id} > reactions
      summary: Delete a commit comment reaction
      description: >-
        **Note:** You can also specify a repository by `repository_id` using the
        route `DELETE
        /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.


        Delete a reaction to a [commit
        comment](https://developer.github.com/v3/repos/comments/).
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
        - name: reaction_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/comments/{comment_id}:
    get:
      tags:
        - repos > {owner}/{repo} > comments > {comment id}
      summary: Get a commit comment
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                html_url: >-
                  https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
                url: https://api.github.com/repos/octocat/Hello-World/comments/1
                id: 1
                node_id: MDEzOkNvbW1pdENvbW1lbnQx
                body: Great stuff
                path: file1.txt
                position: 4
                line: 14
                commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                author_association: collaborator
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > comments > {comment id}
      summary: Update a commit comment
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                html_url: >-
                  https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
                url: https://api.github.com/repos/octocat/Hello-World/comments/1
                id: 1
                node_id: MDEzOkNvbW1pdENvbW1lbnQx
                body: Nice change
                path: file1.txt
                position: 4
                line: 14
                commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                author_association: collaborator
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - repos > {owner}/{repo} > comments > {comment id}
      summary: Delete a commit comment
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/comments:
    get:
      tags:
        - repos > {owner}/{repo} > comments
      summary: List commit comments for a repository
      description: >-
        Commit Comments use [these custom media
        types](https://developer.github.com/v3/repos/comments/#custom-media-types).
        You can read more about the use of media types in the API
        [here](https://developer.github.com/v3/media/).


        Comments are ordered by ascending ID.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - html_url: >-
                    https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
                  url: https://api.github.com/repos/octocat/Hello-World/comments/1
                  id: 1
                  node_id: MDEzOkNvbW1pdENvbW1lbnQx
                  body: Great stuff
                  path: file1.txt
                  position: 4
                  line: 14
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-14T16:00:49Z'
                  updated_at: '2011-04-14T16:00:49Z'
                  author_association: collaborator
  /repos/{owner}/{repo}/commits/{commit_sha}/comments:
    get:
      tags:
        - repos > {owner}/{repo} > commits > {commit sha} > comments
      summary: List commit comments
      description: >-
        Use the `:commit_sha` to specify the commit that will have its comments
        listed.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: commit_sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) commit_sha+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - html_url: >-
                    https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
                  url: https://api.github.com/repos/octocat/Hello-World/comments/1
                  id: 1
                  node_id: MDEzOkNvbW1pdENvbW1lbnQx
                  body: Great stuff
                  path: file1.txt
                  position: 4
                  line: 14
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-14T16:00:49Z'
                  updated_at: '2011-04-14T16:00:49Z'
                  author_association: collaborator
    post:
      tags:
        - repos > {owner}/{repo} > commits > {commit sha} > comments
      summary: Create a commit comment
      description: >-
        Create a comment for a commit using its `:commit_sha`.


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"body\": \"<string>\",\n    \"path\":
                \"<string>\",\n    \"position\": \"<integer>\",\n    \"line\":
                \"<integer>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: commit_sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) commit_sha+ parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                html_url: >-
                  https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
                url: https://api.github.com/repos/octocat/Hello-World/comments/1
                id: 1
                node_id: MDEzOkNvbW1pdENvbW1lbnQx
                body: Great stuff
                path: file1.txt
                position: 4
                line: 14
                commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                author_association: collaborator
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head:
    get:
      tags:
        - repos > {owner}/{repo} > commits > {commit sha}
      summary: List branches for HEAD commit
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Returns all branches where the given commit SHA is the HEAD, or latest
        commit for the branch.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: commit_sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) commit_sha+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: branch_5
                  commit:
                    sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
                  protected: false
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/commits/{commit_sha}/pulls:
    get:
      tags:
        - repos > {owner}/{repo} > commits > {commit sha}
      summary: List pull requests associated with a commit
      description: >-
        Lists all pull requests containing the provided commit SHA, which can be
        from any point in the commit history. The results will include open and
        closed pull requests. Additional preview headers may be required to see
        certain details for associated pull requests, such as whether a pull
        request is in a draft state. For more information about previews that
        might affect this endpoint, see the [List pull
        requests](https://developer.github.com/v3/pulls/#list-pull-requests)
        endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: commit_sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) commit_sha+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  id: 1
                  node_id: MDExOlB1bGxSZXF1ZXN0MQ==
                  html_url: https://github.com/octocat/Hello-World/pull/1347
                  diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                  patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                  issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                  review_comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                  review_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  number: 1347
                  state: open
                  locked: true
                  title: Amazing new feature
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Please pull these awesome changes in!
                  labels:
                    - id: 208045946
                      node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels/bug
                      name: bug
                      description: Something isn't working
                      color: f29513
                      default: true
                  milestone:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1
                    html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                    id: 1002604
                    node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                    number: 1
                    state: open
                    title: v1.0
                    description: Tracking milestone for version 1.0
                    creator:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    open_issues: 4
                    closed_issues: 8
                    created_at: '2011-04-10T20:09:31Z'
                    updated_at: '2014-03-03T18:58:10Z'
                    closed_at: '2013-02-12T13:22:01Z'
                    due_on: '2012-10-09T23:39:01Z'
                  active_lock_reason: too heated
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:01:12Z'
                  closed_at: '2011-01-26T19:01:12Z'
                  merged_at: '2011-01-26T19:01:12Z'
                  merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
                  assignee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  assignees:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    - login: hubot
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/hubot_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/hubot
                      html_url: https://github.com/hubot
                      followers_url: https://api.github.com/users/hubot/followers
                      following_url: >-
                        https://api.github.com/users/hubot/following{/other_user}
                      gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/hubot/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/hubot/subscriptions
                      organizations_url: https://api.github.com/users/hubot/orgs
                      repos_url: https://api.github.com/users/hubot/repos
                      events_url: https://api.github.com/users/hubot/events{/privacy}
                      received_events_url: https://api.github.com/users/hubot/received_events
                      type: User
                      site_admin: true
                  requested_reviewers:
                    - login: other_user
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/other_user_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/other_user
                      html_url: https://github.com/other_user
                      followers_url: https://api.github.com/users/other_user/followers
                      following_url: >-
                        https://api.github.com/users/other_user/following{/other_user}
                      gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/other_user/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/other_user/subscriptions
                      organizations_url: https://api.github.com/users/other_user/orgs
                      repos_url: https://api.github.com/users/other_user/repos
                      events_url: https://api.github.com/users/other_user/events{/privacy}
                      received_events_url: https://api.github.com/users/other_user/received_events
                      type: User
                      site_admin: false
                  requested_teams:
                    - id: 1
                      node_id: MDQ6VGVhbTE=
                      url: https://api.github.com/teams/1
                      html_url: https://api.github.com/teams/justice-league
                      name: Justice League
                      slug: justice-league
                      description: A great team.
                      privacy: closed
                      permission: admin
                      members_url: https://api.github.com/teams/1/members{/member}
                      repositories_url: https://api.github.com/teams/1/repos
                  head:
                    label: octocat:new-topic
                    ref: new-topic
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                    user:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    repo:
                      id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      clone_url: https://github.com/octocat/Hello-World.git
                      mirror_url: git:git.example.com/octocat/Hello-World
                      hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                      svn_url: https://svn.github.com/octocat/Hello-World
                      homepage: https://github.com
                      language: null
                      forks_count: 9
                      stargazers_count: 80
                      watchers_count: 80
                      size: 108
                      default_branch: master
                      open_issues_count: 0
                      is_template: true
                      topics:
                        - octocat
                        - atom
                        - electron
                        - api
                      has_issues: true
                      has_projects: true
                      has_wiki: true
                      has_pages: false
                      has_downloads: true
                      archived: false
                      disabled: false
                      visibility: public
                      pushed_at: '2011-01-26T19:06:43Z'
                      created_at: '2011-01-26T19:01:12Z'
                      updated_at: '2011-01-26T19:14:43Z'
                      permissions:
                        admin: false
                        push: false
                        pull: true
                      allow_rebase_merge: true
                      template_repository: null
                      temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                      allow_squash_merge: true
                      delete_branch_on_merge: true
                      allow_merge_commit: true
                      subscribers_count: 42
                      network_count: 0
                      license:
                        key: mit
                        name: MIT License
                        url: https://api.github.com/licenses/mit
                        spdx_id: MIT
                        node_id: MDc6TGljZW5zZW1pdA==
                        html_url: https://github.com/licenses/mit
                      forks: 1
                      open_issues: 1
                      watchers: 1
                  base:
                    label: octocat:master
                    ref: master
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                    user:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    repo:
                      id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      clone_url: https://github.com/octocat/Hello-World.git
                      mirror_url: git:git.example.com/octocat/Hello-World
                      hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                      svn_url: https://svn.github.com/octocat/Hello-World
                      homepage: https://github.com
                      language: null
                      forks_count: 9
                      stargazers_count: 80
                      watchers_count: 80
                      size: 108
                      default_branch: master
                      open_issues_count: 0
                      is_template: true
                      topics:
                        - octocat
                        - atom
                        - electron
                        - api
                      has_issues: true
                      has_projects: true
                      has_wiki: true
                      has_pages: false
                      has_downloads: true
                      archived: false
                      disabled: false
                      visibility: public
                      pushed_at: '2011-01-26T19:06:43Z'
                      created_at: '2011-01-26T19:01:12Z'
                      updated_at: '2011-01-26T19:14:43Z'
                      permissions:
                        admin: false
                        push: false
                        pull: true
                      allow_rebase_merge: true
                      template_repository: null
                      temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                      allow_squash_merge: true
                      delete_branch_on_merge: true
                      allow_merge_commit: true
                      subscribers_count: 42
                      network_count: 0
                      license:
                        key: mit
                        name: MIT License
                        url: https://api.github.com/licenses/mit
                        spdx_id: MIT
                        node_id: MDc6TGljZW5zZW1pdA==
                        html_url: https://github.com/licenses/mit
                      forks: 1
                      open_issues: 1
                      watchers: 1
                  _links:
                    self:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/1347
                    html:
                      href: https://github.com/octocat/Hello-World/pull/1347
                    issue:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                    comments:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                    review_comments:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                    review_comment:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                    commits:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                    statuses:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  author_association: OWNER
                  draft: false
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /repos/{owner}/{repo}/commits/{ref}:
    get:
      tags:
        - repos > {owner}/{repo} > commits > {ref}
      summary: Get a commit
      description: >-
        Returns the contents of a single commit reference. You must have `read`
        access for the repository to use this endpoint.


        You can pass the appropriate [media
        type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests)
        to fetch `diff` and `patch` formats. Diffs with binary data will have no
        `patch` property.


        To return only the SHA-1 hash of the commit reference, you can provide
        the `sha` custom [media
        type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests)
        in the `Accept` header. You can use this endpoint to check if a remote
        reference's SHA-1 hash is the same as your local reference's SHA-1 hash
        by providing the local SHA-1 reference as the ETag.


        **Signature verification object**


        The response will include a `verification` object that describes the
        result of verifying the commit's signature. The following fields are
        included in the `verification` object:


        These are the possible values for `reason` in the `verification` object:


        | Value                    |
        Description                                                                                                                      
        |

        | ------------------------ |
        ---------------------------------------------------------------------------------------------------------------------------------
        |

        | `expired_key`            | The key that made the signature is
        expired.                                                                                      
        |

        | `not_signing_key`        | The "signing" flag is not among the usage
        flags in the GPG key that made the
        signature.                                           |

        | `gpgverify_error`        | There was an error communicating with the
        signature verification
        service.                                                         |

        | `gpgverify_unavailable`  | The signature verification service is
        currently
        unavailable.                                                                     
        |

        | `unsigned`               | The object does not include a
        signature.                                                                                         
        |

        | `unknown_signature_type` | A non-PGP signature was found in the
        commit.                                                                                     
        |

        | `no_user`                | No user was associated with the `committer`
        email address in the
        commit.                                                          |

        | `unverified_email`       | The `committer` email address in the commit
        was associated with a user, but the email address is not verified on
        her/his account. |

        | `bad_email`              | The `committer` email address in the commit
        is not included in the identities of the PGP key that made the
        signature.             |

        | `unknown_key`            | The key that made the signature has not
        been registered with any user's
        account.                                                  |

        | `malformed_signature`    | There was an error parsing the
        signature.                                                                                        
        |

        | `invalid`                | The signature could not be
        cryptographically verified using the key whose key-id was found in the
        signature.                      |

        | `valid`                  | None of the above errors applied, so the
        signature is considered to be
        verified.                                                  |
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                node_id: >-
                  MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
                html_url: >-
                  https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
                commit:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  author:
                    name: Monalisa Octocat
                    email: mona@github.com
                    date: '2011-04-14T16:00:49Z'
                  committer:
                    name: Monalisa Octocat
                    email: mona@github.com
                    date: '2011-04-14T16:00:49Z'
                  message: Fix all the bugs
                  tree:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  comment_count: 0
                  verification:
                    verified: false
                    reason: unsigned
                    signature: null
                    payload: null
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                committer:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                parents:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                stats:
                  additions: 104
                  deletions: 4
                  total: 108
                files:
                  - filename: file1.txt
                    additions: 10
                    deletions: 2
                    changes: 12
                    status: modified
                    raw_url: >-
                      https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
                    blob_url: >-
                      https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
                    patch: |-
                      @@ -29,7 +29,7 @@
                      .....
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/commits/{ref}/check-runs:
    get:
      tags:
        - repos > {owner}/{repo} > commits > {ref}
      summary: List check runs for a Git reference
      description: >-
        **Note:** The Checks API only looks for pushes in the repository where
        the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array.


        Lists check runs for a commit ref. The `ref` can be a SHA, branch name,
        or a tag name. GitHub Apps must have the `checks:read` permission on a
        private repository or pull access to a public repository to get check
        runs. OAuth Apps and authenticated users must have the `repo` scope to
        get check runs in a private repository.
      parameters:
        - name: check_name
          in: query
          schema:
            type: string
          description: Returns check runs with the specified `name`.
          example: <string>
        - name: status
          in: query
          schema:
            type: string
          description: >-
            Returns check runs with the specified `status`. Can be one of
            `queued`, `in_progress`, or `completed`.
          example: <string>
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Filters check runs by their `completed_at` timestamp. Can be one of
            `latest` (returning the most recent check runs) or `all`.
          example: latest
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                check_runs:
                  - id: 4
                    head_sha: ce587453ced02b1526dfb4cb910479d431683101
                    node_id: MDg6Q2hlY2tSdW40
                    external_id: ''
                    url: >-
                      https://api.github.com/repos/github/hello-world/check-runs/4
                    html_url: https://github.com/github/hello-world/runs/4
                    details_url: https://example.com
                    status: completed
                    conclusion: neutral
                    started_at: '2018-05-04T01:14:52Z'
                    completed_at: '2018-05-04T01:14:52Z'
                    output:
                      title: Mighty Readme report
                      summary: There are 0 failures, 2 warnings, and 1 notice.
                      text: >-
                        You may have some misspelled words on lines 2 and 4. You
                        also may want to add a section in your README about how
                        to install your app.
                      annotations_count: 2
                      annotations_url: >-
                        https://api.github.com/repos/github/hello-world/check-runs/4/annotations
                    name: mighty_readme
                    check_suite:
                      id: 5
                    app:
                      id: 1
                      slug: octoapp
                      node_id: MDExOkludGVncmF0aW9uMQ==
                      owner:
                        login: github
                        id: 1
                        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                        url: https://api.github.com/orgs/github
                        repos_url: https://api.github.com/orgs/github/repos
                        events_url: https://api.github.com/orgs/github/events
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: true
                      name: Octocat App
                      description: ''
                      external_url: https://example.com
                      html_url: https://github.com/apps/octoapp
                      created_at: '2017-07-08T16:18:44-04:00'
                      updated_at: '2017-07-08T16:18:44-04:00'
                      permissions:
                        metadata: read
                        contents: read
                        issues: write
                        single_file: write
                      events:
                        - push
                        - pull_request
                    pull_requests:
                      - url: >-
                          https://api.github.com/repos/github/hello-world/pulls/1
                        id: 1934
                        number: 3956
                        head:
                          ref: say-hello
                          sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
                          repo:
                            id: 526
                            url: https://api.github.com/repos/github/hello-world
                            name: hello-world
                        base:
                          ref: master
                          sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
                          repo:
                            id: 526
                            url: https://api.github.com/repos/github/hello-world
                            name: hello-world
  /repos/{owner}/{repo}/commits/{ref}/check-suites:
    get:
      tags:
        - repos > {owner}/{repo} > commits > {ref}
      summary: List check suites for a Git reference
      description: >-
        **Note:** The Checks API only looks for pushes in the repository where
        the check suite or check run were created. Pushes to a branch in a
        forked repository are not detected and return an empty `pull_requests`
        array and a `null` value for `head_branch`.


        Lists check suites for a commit `ref`. The `ref` can be a SHA, branch
        name, or a tag name. GitHub Apps must have the `checks:read` permission
        on a private repository or pull access to a public repository to list
        check suites. OAuth Apps and authenticated users must have the `repo`
        scope to get check suites in a private repository.
      parameters:
        - name: app_id
          in: query
          schema:
            type: string
          description: Filters check suites by GitHub App `id`.
          example: <integer>
        - name: check_name
          in: query
          schema:
            type: string
          description: Returns check runs with the specified `name`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                check_suites:
                  - id: 5
                    node_id: MDEwOkNoZWNrU3VpdGU1
                    head_branch: master
                    head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
                    status: completed
                    conclusion: neutral
                    url: >-
                      https://api.github.com/repos/github/hello-world/check-suites/5
                    before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
                    after: d6fde92930d4715a2b49857d24b940956b26d2d3
                    pull_requests: []
                    app:
                      id: 1
                      slug: octoapp
                      node_id: MDExOkludGVncmF0aW9uMQ==
                      owner:
                        login: github
                        id: 1
                        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                        url: https://api.github.com/orgs/github
                        repos_url: https://api.github.com/orgs/github/repos
                        events_url: https://api.github.com/orgs/github/events
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: true
                      name: Octocat App
                      description: ''
                      external_url: https://example.com
                      html_url: https://github.com/apps/octoapp
                      created_at: '2017-07-08T16:18:44-04:00'
                      updated_at: '2017-07-08T16:18:44-04:00'
                      permissions:
                        metadata: read
                        contents: read
                        issues: write
                        single_file: write
                      events:
                        - push
                        - pull_request
                    repository:
                      id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      clone_url: https://github.com/octocat/Hello-World.git
                      mirror_url: git:git.example.com/octocat/Hello-World
                      hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                      svn_url: https://svn.github.com/octocat/Hello-World
                      homepage: https://github.com
                      language: null
                      forks_count: 9
                      stargazers_count: 80
                      watchers_count: 80
                      size: 108
                      default_branch: master
                      open_issues_count: 0
                      is_template: true
                      topics:
                        - octocat
                        - atom
                        - electron
                        - api
                      has_issues: true
                      has_projects: true
                      has_wiki: true
                      has_pages: false
                      has_downloads: true
                      archived: false
                      disabled: false
                      visibility: public
                      pushed_at: '2011-01-26T19:06:43Z'
                      created_at: '2011-01-26T19:01:12Z'
                      updated_at: '2011-01-26T19:14:43Z'
                      permissions:
                        admin: false
                        push: false
                        pull: true
                      temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                      delete_branch_on_merge: true
                      subscribers_count: 42
                      network_count: 0
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    head_commit:
                      id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                      tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
                      message: |-
                        Merge pull request #6 from Spaceghost/patch-1

                        New line at end of file.
                      timestamp: '2016-10-10T00:00:00Z'
                      author:
                        name: The Octocat
                        email: octocat@nowhere.com
                      committer:
                        name: The Octocat
                        email: octocat@nowhere.com
                    latest_check_runs_count: 1
                    check_runs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
  /repos/{owner}/{repo}/commits/{ref}/status:
    get:
      tags:
        - repos > {owner}/{repo} > commits > {ref}
      summary: Get the combined status for a specific reference
      description: >-
        Users with pull access in a repository can access a combined view of
        commit statuses for a given ref. The ref can be a SHA, a branch name, or
        a tag name.


        The most recent status for each context is returned, up to 100. This
        field [paginates](https://developer.github.com/v3/#pagination) if there
        are over 100 contexts.


        Additionally, a combined `state` is returned. The `state` is one of:


        *   **failure** if any of the contexts report as `error` or `failure`

        *   **pending** if there are no statuses or a context is `pending`

        *   **success** if the latest status for all contexts is `success`
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                state: success
                statuses:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    avatar_url: https://github.com/images/error/hubot_happy.gif
                    id: 1
                    node_id: MDY6U3RhdHVzMQ==
                    state: success
                    description: Build has completed successfully
                    target_url: https://ci.example.com/1000/output
                    context: continuous-integration/jenkins
                    created_at: '2012-07-20T01:19:13Z'
                    updated_at: '2012-07-20T01:19:13Z'
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    id: 2
                    node_id: MDY6U3RhdHVzMg==
                    state: success
                    description: Testing has completed successfully
                    target_url: https://ci.example.com/2000/output
                    context: security/brakeman
                    created_at: '2012-08-20T01:19:13Z'
                    updated_at: '2012-08-20T01:19:13Z'
                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                total_count: 2
                repository:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                commit_url: >-
                  https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/commits/{ref}/statuses:
    get:
      tags:
        - repos > {owner}/{repo} > commits > {ref}
      summary: List commit statuses for a reference
      description: >-
        Users with pull access in a repository can view commit statuses for a
        given ref. The ref can be a SHA, a branch name, or a tag name. Statuses
        are returned in reverse chronological order. The first status in the
        list will be the latest one.


        This resource is also available via a legacy route: `GET
        /repos/:owner/:repo/statuses/:ref`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  avatar_url: https://github.com/images/error/hubot_happy.gif
                  id: 1
                  node_id: MDY6U3RhdHVzMQ==
                  state: success
                  description: Build has completed successfully
                  target_url: https://ci.example.com/1000/output
                  context: continuous-integration/jenkins
                  created_at: '2012-07-20T01:19:13Z'
                  updated_at: '2012-07-20T01:19:13Z'
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
        '301':
          description: Moved Permanently
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/commits:
    get:
      tags:
        - repos > {owner}/{repo} > commits
      summary: List commits
      description: >-
        **Signature verification object**


        The response will include a `verification` object that describes the
        result of verifying the commit's signature. The following fields are
        included in the `verification` object:


        These are the possible values for `reason` in the `verification` object:


        | Value                    |
        Description                                                                                                                      
        |

        | ------------------------ |
        ---------------------------------------------------------------------------------------------------------------------------------
        |

        | `expired_key`            | The key that made the signature is
        expired.                                                                                      
        |

        | `not_signing_key`        | The "signing" flag is not among the usage
        flags in the GPG key that made the
        signature.                                           |

        | `gpgverify_error`        | There was an error communicating with the
        signature verification
        service.                                                         |

        | `gpgverify_unavailable`  | The signature verification service is
        currently
        unavailable.                                                                     
        |

        | `unsigned`               | The object does not include a
        signature.                                                                                         
        |

        | `unknown_signature_type` | A non-PGP signature was found in the
        commit.                                                                                     
        |

        | `no_user`                | No user was associated with the `committer`
        email address in the
        commit.                                                          |

        | `unverified_email`       | The `committer` email address in the commit
        was associated with a user, but the email address is not verified on
        her/his account. |

        | `bad_email`              | The `committer` email address in the commit
        is not included in the identities of the PGP key that made the
        signature.             |

        | `unknown_key`            | The key that made the signature has not
        been registered with any user's
        account.                                                  |

        | `malformed_signature`    | There was an error parsing the
        signature.                                                                                        
        |

        | `invalid`                | The signature could not be
        cryptographically verified using the key whose key-id was found in the
        signature.                      |

        | `valid`                  | None of the above errors applied, so the
        signature is considered to be
        verified.                                                  |
      parameters:
        - name: sha
          in: query
          schema:
            type: string
          description: >-
            SHA or branch to start listing commits from. Default: the
            repository’s default branch (usually `master`).
          example: <string>
        - name: path
          in: query
          schema:
            type: string
          description: Only commits containing this file path will be returned.
          example: <string>
        - name: author
          in: query
          schema:
            type: string
          description: GitHub login or email address by which to filter by commit author.
          example: <string>
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: until
          in: query
          schema:
            type: string
          description: >-
            Only commits before this date will be returned. This is a timestamp
            in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
            `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  tree_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  message: Fix all the bugs
                  timestamp: '2016-10-10T00:00:00Z'
                  author:
                    name: Monalisa Octocat
                    email: mona@github.com
                  committer:
                    name: Monalisa Octocat
                    email: mona@github.com
                - id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  tree_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  message: Fix all the bugs
                  timestamp: '2016-10-10T00:00:00Z'
                  author:
                    name: Monalisa Octocat
                    email: mona@github.com
                  committer:
                    name: Monalisa Octocat
                    email: mona@github.com
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/community/code_of_conduct:
    get:
      tags:
        - repos > {owner}/{repo} > community
      summary: Get the code of conduct for a repository
      description: >-
        This method returns the contents of the repository's code of conduct
        file, if one is detected.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key: contributor_covenant
                name: Contributor Covenant
                url: >-
                  https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md
                body: >
                  # Contributor Covenant Code of Conduct


                  ## Our Pledge


                  In the interest of fostering an open and welcoming
                  environment, we as contributors and maintainers pledge to
                  making participation in our project and our community a
                  harassment-free experience for everyone, regardless of age,
                  body size, disability, ethnicity, gender identity and
                  expression, level of experience, nationality, personal
                  appearance, race, religion, or sexual identity and
                  orientation.


                  ## Our Standards


                  Examples of behavior that contributes to creating a positive
                  environment include=>


                  * Using welcoming and inclusive language

                  * Being respectful of differing viewpoints and experiences

                  * Gracefully accepting constructive criticism

                  * Focusing on what is best for the community

                  * Showing empathy towards other community members


                  Examples of unacceptable behavior by participants include=>


                  * The use of sexualized language or imagery and unwelcome
                  sexual attention or advances

                  * Trolling, insulting/derogatory comments, and personal or
                  political attacks

                  * Public or private harassment

                  * Publishing others' private information, such as a physical
                  or electronic address, without explicit permission

                  * Other conduct which could reasonably be considered
                  inappropriate in a professional setting


                  ## Our Responsibilities


                  Project maintainers are responsible for clarifying the
                  standards of acceptable behavior and are expected to take
                  appropriate and fair corrective action in response

                  to any instances of unacceptable behavior.


                  Project maintainers have the right and responsibility to
                  remove, edit, or reject comments, commits, code, wiki edits,
                  issues, and other contributions that are not aligned to this
                  Code of Conduct, or to ban temporarily or permanently any
                  contributor for other behaviors that they deem inappropriate,
                  threatening, offensive, or harmful.


                  ## Scope


                  This Code of Conduct applies both within project spaces and in
                  public spaces when an individual is representing the project
                  or its community. Examples of representing a project or
                  community include using an official project e-mail address,

                  posting via an official social media account, or acting as an
                  appointed representative at an online or offline event.
                  Representation of a project may be further defined and
                  clarified by project maintainers.


                  ## Enforcement


                  Instances of abusive, harassing, or otherwise unacceptable
                  behavior may be reported by contacting the project team at
                  lindseyb@github.com. The project team will review and
                  investigate all complaints, and will respond in a way that it
                  deems appropriate to the circumstances. The project team is
                  obligated to maintain confidentiality with regard to the
                  reporter of an incident. Further details of specific
                  enforcement policies may be posted separately.


                  Project maintainers who do not follow or enforce the Code of
                  Conduct in good faith may face temporary or permanent
                  repercussions as determined by other members of the project's
                  leadership.


                  ## Attribution


                  This Code of Conduct is adapted from the [Contributor
                  Covenant][homepage], version 1.4, available at
                  [http://contributor-covenant.org/version/1/4][version]


                  [homepage]: http://contributor-covenant.org

                  [version]: http://contributor-covenant.org/version/1/4/
                html_url: >-
                  https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md
  /repos/{owner}/{repo}/community/profile:
    get:
      tags:
        - repos > {owner}/{repo} > community
      summary: Get community profile metrics
      description: >-
        This endpoint will return all community profile metrics, including an
        overall health score, repository description, the presence of
        documentation, detected code of conduct, detected license, and the
        presence of ISSUE\_TEMPLATE, PULL\_REQUEST\_TEMPLATE, README, and
        CONTRIBUTING files.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                health_percentage: 100
                description: My first repository on GitHub!
                documentation: null
                files:
                  code_of_conduct:
                    name: Contributor Covenant
                    key: contributor_covenant
                    url: >-
                      https://api.github.com/codes_of_conduct/contributor_covenant
                    html_url: >-
                      https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md
                  contributing:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING
                    html_url: >-
                      https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING
                  issue_template:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE
                    html_url: >-
                      https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE
                  pull_request_template:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE
                    html_url: >-
                      https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE
                  license:
                    name: MIT License
                    key: mit
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    html_url: https://github.com/octocat/Hello-World/blob/master/LICENSE
                    node_id: MDc6TGljZW5zZW1pdA==
                  readme:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/README.md
                    html_url: >-
                      https://github.com/octocat/Hello-World/blob/master/README.md
                updated_at: '2017-02-28T19:09:29Z'
  /repos/{owner}/{repo}/contents/{path}:
    get:
      tags:
        - repos > {owner}/{repo} > contents/{path}
      summary: Get repository content
      description: >-
        Gets the contents of a file or directory in a repository. Specify the
        file path or directory in `:path`. If you omit

        `:path`, you will receive the contents of all files in the repository.


        Files and symlinks support [a custom media
        type](https://developer.github.com/v3/repos/contents/#custom-media-types)
        for

        retrieving the raw content or rendered HTML (when supported). All
        content types support [a custom media

        type](https://developer.github.com/v3/repos/contents/#custom-media-types)
        to ensure the content is returned in a consistent

        object format.


        **Note**:

        *   To get a repository's contents recursively, you can [recursively get
        the tree](https://developer.github.com/v3/git/trees/).

        *   This API has an upper limit of 1,000 files for a directory. If you
        need to retrieve more files, use the [Git Trees

        API](https://developer.github.com/v3/git/trees/#get-a-tree).

        *   This API supports files up to 1 megabyte in size.


        #### If the content is a directory

        The response will be an array of objects, one object for each item in
        the directory.

        When listing the contents of a directory, submodules have their "type"
        specified as "file". Logically, the value

        _should_ be "submodule". This behavior exists in API v3 [for backwards
        compatibility purposes](https://git.io/v1YCW).

        In the next major version of the API, the type will be returned as
        "submodule".


        #### If the content is a symlink 

        If the requested `:path` points to a symlink, and the symlink's target
        is a normal file in the repository, then the

        API responds with the content of the file (in the format shown in the
        example. Otherwise, the API responds with an object 

        describing the symlink itself.


        #### If the content is a submodule

        The `submodule_git_url` identifies the location of the submodule
        repository, and the `sha` identifies a specific

        commit within the submodule repository. Git uses the given URL when
        cloning the submodule repository, and checks out

        the submodule at that specific commit.


        If the submodule repository is not hosted on github.com, the Git URLs
        (`git_url` and `_links["git"]`) and the

        github.com URLs (`html_url` and `_links["html"]`) will have null values.
      parameters:
        - name: ref
          in: query
          schema:
            type: string
          description: >-
            The name of the commit/branch/tag. Default: the repository’s default
            branch (usually `master`)
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: path
          in: path
          schema:
            type: string
          required: true
          description: (Required) path+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: file
                encoding: base64
                size: 5362
                name: README.md
                path: README.md
                content: encoded content ...
                sha: 3d21ec53a331a6f037a91c368710b99387d012c1
                url: >-
                  https://api.github.com/repos/octokit/octokit.rb/contents/README.md
                git_url: >-
                  https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
                html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
                download_url: >-
                  https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
                _links:
                  git: >-
                    https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
                  self: >-
                    https://api.github.com/repos/octokit/octokit.rb/contents/README.md
                  html: https://github.com/octokit/octokit.rb/blob/master/README.md
        '302':
          description: Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - repos > {owner}/{repo} > contents/{path}
      summary: Create or update file contents
      description: Creates a new file or replaces an existing file in a repository.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"message\": \"<string>\",\n    \"content\":
                \"<string>\",\n    \"sha\": \"<string>\",\n    \"branch\":
                \"<string>\",\n    \"committer\": {\n        \"name\":
                \"<string>\",\n        \"email\": \"<string>\",\n       
                \"date\": \"<string>\"\n    },\n    \"author\": {\n       
                \"name\": \"<string>\",\n        \"email\":
                \"<string>\",\n        \"date\": \"<string>\"\n    }\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: path
          in: path
          schema:
            type: string
          required: true
          description: (Required) path+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  name: hello.txt
                  path: notes/hello.txt
                  sha: a56507ed892d05a37c6d6128c260937ea4d287bd
                  size: 9
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
                  html_url: >-
                    https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
                  git_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
                  download_url: >-
                    https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
                  type: file
                  _links:
                    self: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
                    git: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
                    html: >-
                      https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
                commit:
                  sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
                  node_id: >-
                    MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
                  html_url: >-
                    https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
                  author:
                    date: '2014-11-07T22:01:45Z'
                    name: Monalisa Octocat
                    email: octocat@github.com
                  committer:
                    date: '2014-11-07T22:01:45Z'
                    name: Monalisa Octocat
                    email: octocat@github.com
                  message: my commit message
                  tree:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
                    sha: 9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
                  parents:
                    - url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6
                      html_url: >-
                        https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6
                      sha: da5a433788da5c255edad7979b328b67d79f53f6
                  verification:
                    verified: false
                    reason: unsigned
                    signature: null
                    payload: null
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  name: hello.txt
                  path: notes/hello.txt
                  sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
                  size: 9
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
                  html_url: >-
                    https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
                  git_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
                  download_url: >-
                    https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
                  type: file
                  _links:
                    self: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
                    git: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
                    html: >-
                      https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
                commit:
                  sha: 7638417db6d59f3c431d3e1f261cc637155684cd
                  node_id: >-
                    MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
                  html_url: >-
                    https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
                  author:
                    date: '2014-11-07T22:01:45Z'
                    name: Monalisa Octocat
                    email: octocat@github.com
                  committer:
                    date: '2014-11-07T22:01:45Z'
                    name: Monalisa Octocat
                    email: octocat@github.com
                  message: my commit message
                  tree:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
                    sha: 691272480426f78a0138979dd3ce63b77f706feb
                  parents:
                    - url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
                      html_url: >-
                        https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
                      sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
                  verification:
                    verified: false
                    reason: unsigned
                    signature: null
                    payload: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo} > contents/{path}
      summary: Delete a file
      description: >-
        Deletes a file in a repository.


        You can provide an additional `committer` parameter, which is an object
        containing information about the committer. Or, you can provide an
        `author` parameter, which is an object containing information about the
        author.


        The `author` section is optional and is filled in with the `committer`
        information if omitted. If the `committer` information is omitted, the
        authenticated user's information is used.


        You must provide values for both `name` and `email`, whether you choose
        to use `author` or `committer`. Otherwise, you'll receive a `422` status
        code.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: path
          in: path
          schema:
            type: string
          required: true
          description: (Required) path+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content: null
                commit:
                  sha: 7638417db6d59f3c431d3e1f261cc637155684cd
                  node_id: >-
                    MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
                  html_url: >-
                    https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
                  author:
                    date: '2014-11-07T22:01:45Z'
                    name: Monalisa Octocat
                    email: octocat@github.com
                  committer:
                    date: '2014-11-07T22:01:45Z'
                    name: Monalisa Octocat
                    email: octocat@github.com
                  message: my commit message
                  tree:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
                    sha: 691272480426f78a0138979dd3ce63b77f706feb
                  parents:
                    - url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
                      html_url: >-
                        https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
                      sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
                  verification:
                    verified: false
                    reason: unsigned
                    signature: null
                    payload: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /repos/{owner}/{repo}/deployments/{deployment_id}/statuses:
    get:
      tags:
        - repos > {owner}/{repo} > deployments > {deployment id} > statuses
      summary: List deployment statuses
      description: 'Users with pull access can view deployment statuses for a deployment:'
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: deployment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) deployment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/repos/octocat/example/deployments/42/statuses/1
                  id: 1
                  node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
                  state: success
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  description: Deployment finished successfully.
                  environment: production
                  target_url: https://example.com/deployment/42/output
                  created_at: '2012-07-20T01:19:13Z'
                  updated_at: '2012-07-20T01:19:13Z'
                  deployment_url: https://api.github.com/repos/octocat/example/deployments/42
                  repository_url: https://api.github.com/repos/octocat/example
                  environment_url: https://test-branch.lab.acme.com
                  log_url: https://example.com/deployment/42/output
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > deployments > {deployment id} > statuses
      summary: Create a deployment status
      description: >-
        Users with `push` access can create deployment statuses for a given
        deployment.


        GitHub Apps require `read & write` access to "Deployments" and
        `read-only` access to "Repo contents" (for private repos). OAuth Apps
        require the `repo_deployment` scope.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"state\": \"<string>\",\n    \"target_url\": \"\",\n   
                \"log_url\": \"\",\n    \"description\": \"\",\n   
                \"environment\": \"<string>\",\n    \"environment_url\":
                \"\",\n    \"auto_inactive\": \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: deployment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) deployment_id parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/example/deployments/42/statuses/1
                id: 1
                node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
                state: success
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                description: Deployment finished successfully.
                environment: production
                target_url: https://example.com/deployment/42/output
                created_at: '2012-07-20T01:19:13Z'
                updated_at: '2012-07-20T01:19:13Z'
                deployment_url: https://api.github.com/repos/octocat/example/deployments/42
                repository_url: https://api.github.com/repos/octocat/example
                environment_url: https://test-branch.lab.acme.com
                log_url: https://example.com/deployment/42/output
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}:
    get:
      tags:
        - repos > {owner}/{repo} > deployments > {deployment id} > statuses
      summary: Get a deployment status
      description: 'Users with pull access can view a deployment status for a deployment:'
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: deployment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) deployment_id parameter
          example: <integer>
        - name: status_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) status_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/example/deployments/42/statuses/1
                id: 1
                node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
                state: success
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                description: Deployment finished successfully.
                environment: production
                target_url: https://example.com/deployment/42/output
                created_at: '2012-07-20T01:19:13Z'
                updated_at: '2012-07-20T01:19:13Z'
                deployment_url: https://api.github.com/repos/octocat/example/deployments/42
                repository_url: https://api.github.com/repos/octocat/example
                environment_url: https://test-branch.lab.acme.com
                log_url: https://example.com/deployment/42/output
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /repos/{owner}/{repo}/deployments/{deployment_id}:
    get:
      tags:
        - repos > {owner}/{repo} > deployments > {deployment id}
      summary: Get a deployment
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: deployment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) deployment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/example/deployments/1
                id: 1
                node_id: MDEwOkRlcGxveW1lbnQx
                sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
                ref: topic-branch
                task: deploy
                payload: {}
                original_environment: staging
                environment: production
                description: Deploy request from hubot
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2012-07-20T01:19:13Z'
                updated_at: '2012-07-20T01:19:13Z'
                statuses_url: >-
                  https://api.github.com/repos/octocat/example/deployments/1/statuses
                repository_url: https://api.github.com/repos/octocat/example
                transient_environment: false
                production_environment: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - repos > {owner}/{repo} > deployments > {deployment id}
      summary: Delete a deployment
      description: >-
        To ensure there can always be an active deployment, you can only delete
        an _inactive_ deployment. Anyone with `repo` or `repo_deployment` scopes
        can delete an inactive deployment.


        To set a deployment as inactive, you must:


        *   Create a new deployment that is active so that the system has a
        record of the current state, then delete the previously active
        deployment.

        *   Mark the active deployment as inactive by adding any non-successful
        deployment status.


        For more information, see "[Create a
        deployment](https://developer.github.com/v3/repos/deployments/#create-a-deployment)"
        and "[Create a deployment
        status](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status)."
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: deployment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) deployment_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /repos/{owner}/{repo}/deployments:
    get:
      tags:
        - repos > {owner}/{repo} > deployments
      summary: List deployments
      description: 'Simple filtering of deployments is available via query parameters:'
      parameters:
        - name: sha
          in: query
          schema:
            type: string
          description: The SHA recorded at creation time.
          example: none
        - name: ref
          in: query
          schema:
            type: string
          description: The name of the ref. This can be a branch, tag, or SHA.
          example: none
        - name: task
          in: query
          schema:
            type: string
          description: >-
            The name of the task for the deployment (e.g., `deploy` or
            `deploy:migrations`).
          example: none
        - name: environment
          in: query
          schema:
            type: string
          description: >-
            The name of the environment that was deployed to (e.g., `staging` or
            `production`).
          example: none
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/repos/octocat/example/deployments/1
                  id: 1
                  node_id: MDEwOkRlcGxveW1lbnQx
                  sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
                  ref: topic-branch
                  task: deploy
                  payload: {}
                  original_environment: staging
                  environment: production
                  description: Deploy request from hubot
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2012-07-20T01:19:13Z'
                  updated_at: '2012-07-20T01:19:13Z'
                  statuses_url: >-
                    https://api.github.com/repos/octocat/example/deployments/1/statuses
                  repository_url: https://api.github.com/repos/octocat/example
                  transient_environment: false
                  production_environment: true
    post:
      tags:
        - repos > {owner}/{repo} > deployments
      summary: Create a deployment
      description: >-
        Deployments offer a few configurable parameters with certain defaults.


        The `ref` parameter can be any named branch, tag, or SHA. At GitHub we
        often deploy branches and verify them

        before we merge a pull request.


        The `environment` parameter allows deployments to be issued to different
        runtime environments. Teams often have

        multiple environments for verifying their applications, such as
        `production`, `staging`, and `qa`. This parameter

        makes it easier to track which environments have requested deployments.
        The default environment is `production`.


        The `auto_merge` parameter is used to ensure that the requested ref is
        not behind the repository's default branch. If

        the ref _is_ behind the default branch for the repository, we will
        attempt to merge it for you. If the merge succeeds,

        the API will return a successful merge commit. If merge conflicts
        prevent the merge from succeeding, the API will

        return a failure response.


        By default, [commit
        statuses](https://developer.github.com/v3/repos/statuses) for every
        submitted context must be in a `success`

        state. The `required_contexts` parameter allows you to specify a subset
        of contexts that must be `success`, or to

        specify contexts that have not yet been submitted. You are not required
        to use commit statuses to deploy. If you do

        not require any contexts or create any commit statuses, the deployment
        will always succeed.


        The `payload` parameter is available for any extra information that a
        deployment system might need. It is a JSON text

        field that will be passed on when a deployment event is dispatched.


        The `task` parameter is used by the deployment system to allow different
        execution paths. In the web world this might

        be `deploy:migrations` to run schema changes on the system. In the
        compiled world this could be a flag to compile an

        application with debugging enabled.


        Users with `repo` or `repo_deployment` scopes can create a deployment
        for a given ref.


        #### Merged branch response

        You will see this response when GitHub automatically merges the base
        branch into the topic branch instead of creating

        a deployment. This auto-merge happens when:

        *   Auto-merge option is enabled in the repository

        *   Topic branch does not include the latest changes on the base branch,
        which is `master` in the response example

        *   There are no merge conflicts


        If there are no new commits in the base branch, a new request to create
        a deployment should give a successful

        response.


        #### Merge conflict response

        This error happens when the `auto_merge` option is enabled and when the
        default branch (in this case `master`), can't

        be merged into the branch that's being deployed (in this case
        `topic-branch`), due to merge conflicts.


        #### Failed commit status checks

        This error happens when the `required_contexts` parameter indicates that
        one or more contexts need to have a `success`

        status for the commit to be deployed, but one or more of the required
        contexts do not have a state of `success`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"ref\": \"<string>\",\n    \"task\": \"deploy\",\n   
                \"auto_merge\": true,\n    \"required_contexts\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"payload\":
                \"\",\n    \"environment\": \"production\",\n   
                \"description\": \"\",\n    \"transient_environment\":
                false,\n    \"production_environment\": \"<boolean>\",\n   
                \"created_at\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/example/deployments/1
                id: 1
                node_id: MDEwOkRlcGxveW1lbnQx
                sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
                ref: topic-branch
                task: deploy
                payload: {}
                original_environment: staging
                environment: production
                description: Deploy request from hubot
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2012-07-20T01:19:13Z'
                updated_at: '2012-07-20T01:19:13Z'
                statuses_url: >-
                  https://api.github.com/repos/octocat/example/deployments/1/statuses
                repository_url: https://api.github.com/repos/octocat/example
                transient_environment: false
                production_environment: true
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Auto-merged master into topic-branch on deployment.
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Conflict merging master into topic-branch
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/forks:
    get:
      tags:
        - repos > {owner}/{repo} > forks
      summary: List forks
      parameters:
        - name: sort
          in: query
          schema:
            type: string
          description: The sort order. Can be either `newest`, `oldest`, or `stargazers`.
          example: newest
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: true
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > forks
      summary: Create a fork
      description: >-
        Create a fork for the authenticated user.


        **Note**: Forking a Repository happens asynchronously. You may have to
        wait a short period of time before you can access the git objects. If
        this takes longer than 5 minutes, be sure to contact [GitHub
        Support](https://github.com/contact) or [GitHub Premium
        Support](https://premium.githubsupport.com).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"organization\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                language: null
                forks: 9
                forks_count: 9
                stargazers_count: 80
                watchers_count: 80
                watchers: 80
                size: 108
                default_branch: master
                open_issues: 0
                open_issues_count: 0
                is_template: true
                license:
                  key: mit
                  name: MIT License
                  url: https://api.github.com/licenses/mit
                  spdx_id: MIT
                  node_id: MDc6TGljZW5zZW1pdA==
                  html_url: https://api.github.com/licenses/mit
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  admin: false
                  push: false
                  pull: true
                allow_rebase_merge: true
                template_repository: null
                temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                allow_squash_merge: true
                delete_branch_on_merge: true
                allow_merge_commit: true
                subscribers_count: 42
                network_count: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/blobs:
    post:
      tags:
        - repos > {owner}/{repo} > git > blobs
      summary: Create a blob
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"content\": \"<string>\",\n    \"encoding\":
                \"utf-8\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
                sha: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/blobs/{file_sha}:
    get:
      tags:
        - repos > {owner}/{repo} > git > blobs
      summary: Get a blob
      description: |-
        The `content` in the response will always be Base64 encoded.

        _Note_: This API supports blobs up to 100 megabytes in size.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: file_sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) file_sha parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content: Q29udGVudCBvZiB0aGUgYmxvYg==
                encoding: base64
                url: >-
                  https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
                sha: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
                size: 19
                node_id: Q29udGVudCBvZiB0aGUgYmxvYg==
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/commits:
    post:
      tags:
        - repos > {owner}/{repo} > git > commits
      summary: Create a commit
      description: >-
        Creates a new Git [commit
        object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).


        In this example, the payload of the signature would be:




        **Signature verification object**


        The response will include a `verification` object that describes the
        result of verifying the commit's signature. The following fields are
        included in the `verification` object:


        These are the possible values for `reason` in the `verification` object:


        | Value                    |
        Description                                                                                                                      
        |

        | ------------------------ |
        ---------------------------------------------------------------------------------------------------------------------------------
        |

        | `expired_key`            | The key that made the signature is
        expired.                                                                                      
        |

        | `not_signing_key`        | The "signing" flag is not among the usage
        flags in the GPG key that made the
        signature.                                           |

        | `gpgverify_error`        | There was an error communicating with the
        signature verification
        service.                                                         |

        | `gpgverify_unavailable`  | The signature verification service is
        currently
        unavailable.                                                                     
        |

        | `unsigned`               | The object does not include a
        signature.                                                                                         
        |

        | `unknown_signature_type` | A non-PGP signature was found in the
        commit.                                                                                     
        |

        | `no_user`                | No user was associated with the `committer`
        email address in the
        commit.                                                          |

        | `unverified_email`       | The `committer` email address in the commit
        was associated with a user, but the email address is not verified on
        her/his account. |

        | `bad_email`              | The `committer` email address in the commit
        is not included in the identities of the PGP key that made the
        signature.             |

        | `unknown_key`            | The key that made the signature has not
        been registered with any user's
        account.                                                  |

        | `malformed_signature`    | There was an error parsing the
        signature.                                                                                        
        |

        | `invalid`                | The signature could not be
        cryptographically verified using the key whose key-id was found in the
        signature.                      |

        | `valid`                  | None of the above errors applied, so the
        signature is considered to be
        verified.                                                  |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"message\": \"<string>\",\n    \"tree\":
                \"<string>\",\n    \"parents\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"author\":
                {\n        \"name\": \"<string>\",\n        \"email\":
                \"<string>\",\n        \"date\": \"<string>\"\n    },\n   
                \"committer\": {\n        \"name\": \"<string>\",\n       
                \"email\": \"<string>\",\n        \"date\": \"<string>\"\n   
                },\n    \"signature\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sha: 7638417db6d59f3c431d3e1f261cc637155684cd
                node_id: >-
                  MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
                author:
                  date: '2014-11-07T22:01:45Z'
                  name: Monalisa Octocat
                  email: octocat@github.com
                committer:
                  date: '2014-11-07T22:01:45Z'
                  name: Monalisa Octocat
                  email: octocat@github.com
                message: my commit message
                tree:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132
                  sha: 827efc6d56897b048c772eb4087f854f46256132
                parents:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0
                    sha: 7d1b31e74ee336d15cbd21741bc88a537ed063a0
                verification:
                  verified: false
                  reason: unsigned
                  signature: null
                  payload: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/commits/{commit_sha}:
    get:
      tags:
        - repos > {owner}/{repo} > git > commits
      summary: Get a commit
      description: >-
        Gets a Git [commit
        object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).


        **Signature verification object**


        The response will include a `verification` object that describes the
        result of verifying the commit's signature. The following fields are
        included in the `verification` object:


        These are the possible values for `reason` in the `verification` object:


        | Value                    |
        Description                                                                                                                      
        |

        | ------------------------ |
        ---------------------------------------------------------------------------------------------------------------------------------
        |

        | `expired_key`            | The key that made the signature is
        expired.                                                                                      
        |

        | `not_signing_key`        | The "signing" flag is not among the usage
        flags in the GPG key that made the
        signature.                                           |

        | `gpgverify_error`        | There was an error communicating with the
        signature verification
        service.                                                         |

        | `gpgverify_unavailable`  | The signature verification service is
        currently
        unavailable.                                                                     
        |

        | `unsigned`               | The object does not include a
        signature.                                                                                         
        |

        | `unknown_signature_type` | A non-PGP signature was found in the
        commit.                                                                                     
        |

        | `no_user`                | No user was associated with the `committer`
        email address in the
        commit.                                                          |

        | `unverified_email`       | The `committer` email address in the commit
        was associated with a user, but the email address is not verified on
        her/his account. |

        | `bad_email`              | The `committer` email address in the commit
        is not included in the identities of the PGP key that made the
        signature.             |

        | `unknown_key`            | The key that made the signature has not
        been registered with any user's
        account.                                                  |

        | `malformed_signature`    | There was an error parsing the
        signature.                                                                                        
        |

        | `invalid`                | The signature could not be
        cryptographically verified using the key whose key-id was found in the
        signature.                      |

        | `valid`                  | None of the above errors applied, so the
        signature is considered to be
        verified.                                                  |
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: commit_sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) commit_sha+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sha: 7638417db6d59f3c431d3e1f261cc637155684cd
                node_id: >-
                  MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
                author:
                  date: '2014-11-07T22:01:45Z'
                  name: Monalisa Octocat
                  email: octocat@github.com
                committer:
                  date: '2014-11-07T22:01:45Z'
                  name: Monalisa Octocat
                  email: octocat@github.com
                message: added readme, because im a good github citizen
                tree:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
                  sha: 691272480426f78a0138979dd3ce63b77f706feb
                parents:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
                    sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
                verification:
                  verified: false
                  reason: unsigned
                  signature: null
                  payload: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/git/refs/{ref}:
    patch:
      tags:
        - repos > {owner}/{repo} > git > refs > {ref}
      summary: Update a reference
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"sha\": \"<string>\",\n    \"force\": false\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ref: refs/heads/featureA
                node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
                object:
                  type: commit
                  sha: aa218f56b14c9653891f9e74264a383fa43fefbd
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo} > git > refs > {ref}
      summary: Delete a reference
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/refs:
    post:
      tags:
        - repos > {owner}/{repo} > git > refs
      summary: Create a reference
      description: >-
        Creates a reference for your repository. You are unable to create new
        references for empty repositories, even if the commit SHA-1 hash used
        exists. Empty repositories are repositories without branches.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"ref\": \"<string>\",\n    \"sha\": \"<string>\",\n   
                \"key\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ref: refs/heads/featureA
                node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
                object:
                  type: commit
                  sha: aa218f56b14c9653891f9e74264a383fa43fefbd
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/tags:
    post:
      tags:
        - repos > {owner}/{repo} > git > tags
      summary: Create a tag object
      description: >-
        Note that creating a tag object does not create the reference that makes
        a tag in Git. If you want to create an annotated tag in Git, you have to
        do this call to create the tag object, and then
        [create](https://developer.github.com/v3/git/refs/#create-a-reference)
        the `refs/tags/[tag]` reference. If you want to create a lightweight
        tag, you only have to
        [create](https://developer.github.com/v3/git/refs/#create-a-reference)
        the tag reference - this call would be unnecessary.


        **Signature verification object**


        The response will include a `verification` object that describes the
        result of verifying the commit's signature. The following fields are
        included in the `verification` object:


        These are the possible values for `reason` in the `verification` object:


        | Value                    |
        Description                                                                                                                      
        |

        | ------------------------ |
        ---------------------------------------------------------------------------------------------------------------------------------
        |

        | `expired_key`            | The key that made the signature is
        expired.                                                                                      
        |

        | `not_signing_key`        | The "signing" flag is not among the usage
        flags in the GPG key that made the
        signature.                                           |

        | `gpgverify_error`        | There was an error communicating with the
        signature verification
        service.                                                         |

        | `gpgverify_unavailable`  | The signature verification service is
        currently
        unavailable.                                                                     
        |

        | `unsigned`               | The object does not include a
        signature.                                                                                         
        |

        | `unknown_signature_type` | A non-PGP signature was found in the
        commit.                                                                                     
        |

        | `no_user`                | No user was associated with the `committer`
        email address in the
        commit.                                                          |

        | `unverified_email`       | The `committer` email address in the commit
        was associated with a user, but the email address is not verified on
        her/his account. |

        | `bad_email`              | The `committer` email address in the commit
        is not included in the identities of the PGP key that made the
        signature.             |

        | `unknown_key`            | The key that made the signature has not
        been registered with any user's
        account.                                                  |

        | `malformed_signature`    | There was an error parsing the
        signature.                                                                                        
        |

        | `invalid`                | The signature could not be
        cryptographically verified using the key whose key-id was found in the
        signature.                      |

        | `valid`                  | None of the above errors applied, so the
        signature is considered to be
        verified.                                                  |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"tag\": \"<string>\",\n    \"message\":
                \"<string>\",\n    \"object\": \"<string>\",\n    \"type\":
                \"<string>\",\n    \"tagger\": {\n        \"name\":
                \"<string>\",\n        \"email\": \"<string>\",\n       
                \"date\": \"<string>\"\n    }\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                node_id: >-
                  MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
                tag: v0.0.1
                sha: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
                message: initial version
                tagger:
                  name: Monalisa Octocat
                  email: octocat@github.com
                  date: '2014-11-07T22:01:45Z'
                object:
                  type: commit
                  sha: c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
                verification:
                  verified: false
                  reason: unsigned
                  signature: null
                  payload: null
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/tags/{tag_sha}:
    get:
      tags:
        - repos > {owner}/{repo} > git > tags
      summary: Get a tag
      description: >-
        **Signature verification object**


        The response will include a `verification` object that describes the
        result of verifying the commit's signature. The following fields are
        included in the `verification` object:


        These are the possible values for `reason` in the `verification` object:


        | Value                    |
        Description                                                                                                                      
        |

        | ------------------------ |
        ---------------------------------------------------------------------------------------------------------------------------------
        |

        | `expired_key`            | The key that made the signature is
        expired.                                                                                      
        |

        | `not_signing_key`        | The "signing" flag is not among the usage
        flags in the GPG key that made the
        signature.                                           |

        | `gpgverify_error`        | There was an error communicating with the
        signature verification
        service.                                                         |

        | `gpgverify_unavailable`  | The signature verification service is
        currently
        unavailable.                                                                     
        |

        | `unsigned`               | The object does not include a
        signature.                                                                                         
        |

        | `unknown_signature_type` | A non-PGP signature was found in the
        commit.                                                                                     
        |

        | `no_user`                | No user was associated with the `committer`
        email address in the
        commit.                                                          |

        | `unverified_email`       | The `committer` email address in the commit
        was associated with a user, but the email address is not verified on
        her/his account. |

        | `bad_email`              | The `committer` email address in the commit
        is not included in the identities of the PGP key that made the
        signature.             |

        | `unknown_key`            | The key that made the signature has not
        been registered with any user's
        account.                                                  |

        | `malformed_signature`    | There was an error parsing the
        signature.                                                                                        
        |

        | `invalid`                | The signature could not be
        cryptographically verified using the key whose key-id was found in the
        signature.                      |

        | `valid`                  | None of the above errors applied, so the
        signature is considered to be
        verified.                                                  |
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: tag_sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) tag_sha parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                node_id: >-
                  MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
                tag: v0.0.1
                sha: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
                message: initial version
                tagger:
                  name: Monalisa Octocat
                  email: octocat@github.com
                  date: '2014-11-07T22:01:45Z'
                object:
                  type: commit
                  sha: c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
                verification:
                  verified: false
                  reason: unsigned
                  signature: null
                  payload: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/git/trees:
    post:
      tags:
        - repos > {owner}/{repo} > git > trees
      summary: Create a tree
      description: >-
        The tree creation API accepts nested entries. If you specify both a tree
        and a nested path modifying that tree, this endpoint will overwrite the
        contents of the tree with the new path contents, and create a new tree
        structure.


        If you use this endpoint to add, delete, or modify the file contents in
        a tree, you will need to commit the tree and then update a branch to
        point to the commit. For more information see "[Create a
        commit](https://developer.github.com/v3/git/commits/#create-a-commit)"
        and "[Update a
        reference](https://developer.github.com/v3/git/refs/#update-a-reference)."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"tree\": [\n        {\n            \"path\":
                \"<string>\",\n            \"mode\": \"<string>\",\n           
                \"type\": \"<string>\",\n            \"sha\":
                \"<string>\",\n            \"content\": \"<string>\"\n       
                },\n        {\n            \"path\": \"<string>\",\n           
                \"mode\": \"<string>\",\n            \"type\":
                \"<string>\",\n            \"sha\": \"<string>\",\n           
                \"content\": \"<string>\"\n        }\n    ],\n    \"base_tree\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sha: cd8274d15fa3ae2ab983129fb037999f264ba9a7
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7
                tree:
                  - path: file.rb
                    mode: '100644'
                    type: blob
                    size: 132
                    sha: 7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
                truncated: true
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/trees/{tree_sha}:
    get:
      tags:
        - repos > {owner}/{repo} > git > trees
      summary: Get a tree
      description: >-
        Returns a single tree using the SHA1 value for that tree.


        If `truncated` is `true` in the response then the number of items in the
        `tree` array exceeded our maximum limit. If you need to fetch more
        items, use the non-recursive method of fetching trees, and fetch one
        sub-tree at a time.
      parameters:
        - name: recursive
          in: query
          schema:
            type: string
          description: >-
            Setting this parameter to any value returns the objects or subtrees
            referenced by the tree specified in `:tree_sha`. For example,
            setting `recursive` to any of the following will enable returning
            objects or subtrees: `0`, `1`, `"true"`, and `"false"`. Omit this
            parameter to prevent recursively returning objects or subtrees.
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: tree_sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) tree_sha parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sha: 9fb037999f264ba9a7fc6274d15fa3ae2ab98312
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/trees/9fb037999f264ba9a7fc6274d15fa3ae2ab98312
                tree:
                  - path: file.rb
                    mode: '100644'
                    type: blob
                    size: 30
                    sha: 44b4fc6d56897b048c772eb4087f854f46256132
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132
                  - path: subdir
                    mode: '040000'
                    type: tree
                    sha: f484d249c660418515fb01c2b9662073663c242e
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs/f484d249c660418515fb01c2b9662073663c242e
                  - path: exec_file
                    mode: '100755'
                    type: blob
                    size: 75
                    sha: 45b983be36b73c0788dc9cbcb76cbb80fc7bb057
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs/45b983be36b73c0788dc9cbcb76cbb80fc7bb057
                truncated: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/git/matching-refs/{ref}:
    get:
      tags:
        - repos > {owner}/{repo} > git
      summary: List matching references
      description: >-
        Returns an array of references from your Git database that match the
        supplied name. The `:ref` in the URL must be formatted as `heads/<branch
        name>` for branches and `tags/<tag name>` for tags. If the `:ref`
        doesn't exist in the repository, but existing refs start with `:ref`,
        they will be returned as an array.


        When you use this endpoint without providing a `:ref`, it will return an
        array of all the references from your Git database, including notes and
        stashes if they exist on the server. Anything in the namespace is
        returned, not just `heads` and `tags`.


        **Note:** You need to explicitly [request a pull
        request](https://developer.github.com/v3/pulls/#get-a-pull-request) to
        trigger a test merge commit, which checks the mergeability of pull
        requests. For more information, see "[Checking mergeability of pull
        requests](https://developer.github.com/v3/git/#checking-mergeability-of-pull-requests)".


        If you request matching references for a branch named `feature` but the
        branch `feature` doesn't exist, the response can still include other
        matching head refs that start with the word `feature`, such as
        `featureA` and `featureB`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ref: refs/heads/feature-a
                  node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWE=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-a
                  object:
                    type: commit
                    sha: aa218f56b14c9653891f9e74264a383fa43fefbd
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
                - ref: refs/heads/feature-b
                  node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWI=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-b
                  object:
                    type: commit
                    sha: 612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits/612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac
  /repos/{owner}/{repo}/git/ref/{ref}:
    get:
      tags:
        - repos > {owner}/{repo} > git
      summary: Get a reference
      description: >-
        Returns a single reference from your Git database. The `:ref` in the URL
        must be formatted as `heads/<branch name>` for branches and `tags/<tag
        name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is
        returned.


        **Note:** You need to explicitly [request a pull
        request](https://developer.github.com/v3/pulls/#get-a-pull-request) to
        trigger a test merge commit, which checks the mergeability of pull
        requests. For more information, see "[Checking mergeability of pull
        requests](https://developer.github.com/v3/git/#checking-mergeability-of-pull-requests)".
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ref: refs/heads/featureA
                node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
                object:
                  type: commit
                  sha: aa218f56b14c9653891f9e74264a383fa43fefbd
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/hooks/{hook_id}:
    get:
      tags:
        - repos > {owner}/{repo} > hooks > {hook id}
      summary: Get a repository webhook
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: Repository
                id: 12345678
                name: web
                active: true
                events:
                  - push
                  - pull_request
                config:
                  content_type: json
                  insecure_ssl: '0'
                  url: https://example.com/webhook
                updated_at: '2019-06-03T00:57:16Z'
                created_at: '2019-06-03T00:57:16Z'
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678
                test_url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
                ping_url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
                last_response:
                  code: null
                  status: unused
                  message: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > hooks > {hook id}
      summary: Update a repository webhook
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"config\": {\n        \"url\": \"<string>\",\n       
                \"content_type\": \"<string>\",\n        \"secret\":
                \"<string>\",\n        \"insecure_ssl\": \"<string>\",\n       
                \"address\": \"<string>\",\n        \"room\": \"<string>\"\n   
                },\n    \"events\": [\n        \"push\"\n    ],\n   
                \"add_events\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"remove_events\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"active\":
                true\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: Repository
                id: 12345678
                name: web
                active: true
                events:
                  - push
                  - pull_request
                config:
                  content_type: json
                  insecure_ssl: '0'
                  url: https://example.com/webhook
                updated_at: '2019-06-03T00:57:16Z'
                created_at: '2019-06-03T00:57:16Z'
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678
                test_url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
                ping_url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
                last_response:
                  code: null
                  status: unused
                  message: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo} > hooks > {hook id}
      summary: Delete a repository webhook
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/hooks/{hook_id}/pings:
    post:
      tags:
        - repos > {owner}/{repo} > hooks > {hook id}
      summary: Ping a repository webhook
      description: >-
        This will trigger a [ping
        event](https://developer.github.com/webhooks/#ping-event) to be sent to
        the hook.
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/hooks/{hook_id}/tests:
    post:
      tags:
        - repos > {owner}/{repo} > hooks > {hook id}
      summary: Test the push repository webhook
      description: >-
        This will trigger the hook with the latest push to the current
        repository if the hook is subscribed to `push` events. If the hook is
        not subscribed to `push` events, the server will respond with 204 but no
        test POST will be generated.


        **Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/hooks:
    get:
      tags:
        - repos > {owner}/{repo} > hooks
      summary: List repository webhooks
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - type: Repository
                  id: 12345678
                  name: web
                  active: true
                  events:
                    - push
                    - pull_request
                  config:
                    content_type: json
                    insecure_ssl: '0'
                    url: https://example.com/webhook
                  updated_at: '2019-06-03T00:57:16Z'
                  created_at: '2019-06-03T00:57:16Z'
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/hooks/12345678
                  test_url: >-
                    https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
                  ping_url: >-
                    https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
                  last_response:
                    code: null
                    status: unused
                    message: null
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > hooks
      summary: Create a repository webhook
      description: >-
        Repositories can have multiple webhooks installed. Each webhook should
        have a unique `config`. Multiple webhooks can

        share the same `config` as long as those webhooks do not have any
        `events` that overlap.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"config\": {\n        \"url\": \"<string>\",\n       
                \"content_type\": \"<string>\",\n        \"secret\":
                \"<string>\",\n        \"insecure_ssl\": \"<string>\",\n       
                \"token\": \"<string>\",\n        \"digest\": \"<string>\"\n   
                },\n    \"name\": \"<string>\",\n    \"events\": [\n       
                \"push\"\n    ],\n    \"active\": true\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: Repository
                id: 12345678
                name: web
                active: true
                events:
                  - push
                  - pull_request
                config:
                  content_type: json
                  insecure_ssl: '0'
                  url: https://example.com/webhook
                updated_at: '2019-06-03T00:57:16Z'
                created_at: '2019-06-03T00:57:16Z'
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678
                test_url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
                ping_url: >-
                  https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
                last_response:
                  code: null
                  status: unused
                  message: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/import/authors:
    get:
      tags:
        - repos > {owner}/{repo} > import > authors
      summary: Get commit authors
      description: >-
        Each type of source control system represents authors in a different
        way. For example, a Git commit author has a display name and an email
        address, but a Subversion commit author just has a username. The GitHub
        Importer will make the author information valid, but the author might
        not be correct. For example, it will change the bare Subversion username
        `hubot` into something like `hubot
        <hubot@12341234-abab-fefe-8787-fedcba987654>`.


        This endpoint and the [Map a commit
        author](https://developer.github.com/v3/migrations/source_imports/#map-a-commit-author)
        endpoint allow you to provide correct Git author information.
      parameters:
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 2268557
                  remote_id: nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef
                  remote_name: nobody
                  email: hubot@github.com
                  name: Hubot
                  url: >-
                    https://api.github.com/repos/octocat/socm/import/authors/2268557
                  import_url: https://api.github.com/repos/octocat/socm/import
                - id: 2268558
                  remote_id: svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef
                  remote_name: svner
                  email: svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef
                  name: svner
                  url: >-
                    https://api.github.com/repos/octocat/socm/import/authors/2268558
                  import_url: https://api.github.com/repos/octocat/socm/import
                - id: 2268559
                  remote_id: svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef
                  remote_name: svner@example.com
                  email: svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef
                  name: svner@example.com
                  url: >-
                    https://api.github.com/repos/octocat/socm/import/authors/2268559
                  import_url: https://api.github.com/repos/octocat/socm/import
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/import/authors/{author_id}:
    patch:
      tags:
        - repos > {owner}/{repo} > import > authors
      summary: Map a commit author
      description: >-
        Update an author's identity for the import. Your application can
        continue updating authors any time before you push new commits to the
        repository.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"email\": \"<string>\",\n    \"name\":
                \"<string>\",\n    \"remote_id\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: author_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) author_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 2268557
                remote_id: nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef
                remote_name: nobody
                email: hubot@github.com
                name: Hubot
                url: >-
                  https://api.github.com/repos/octocat/socm/import/authors/2268557
                import_url: https://api.github.com/repos/octocat/socm/import
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/import:
    get:
      tags:
        - repos > {owner}/{repo} > import
      summary: Get an import status
      description: >-
        View the progress of an import.


        **Import status**


        This section includes details about the possible values of the `status`
        field of the Import Progress response.


        An import that does not have errors will progress through these steps:


        *   `detecting` - the "detection" step of the import is in progress
        because the request did not include a `vcs` parameter. The import is
        identifying the type of source control present at the URL.

        *   `importing` - the "raw" step of the import is in progress. This is
        where commit data is fetched from the original repository. The import
        progress response will include `commit_count` (the total number of raw
        commits that will be imported) and `percent` (0 - 100, the current
        progress through the import).

        *   `mapping` - the "rewrite" step of the import is in progress. This is
        where SVN branches are converted to Git branches, and where author
        updates are applied. The import progress response does not include
        progress information.

        *   `pushing` - the "push" step of the import is in progress. This is
        where the importer updates the repository on GitHub. The import progress
        response will include `push_percent`, which is the percent value
        reported by `git push` when it is "Writing objects".

        *   `complete` - the import is complete, and the repository is ready on
        GitHub.


        If there are problems, you will see one of these in the `status` field:


        *   `auth_failed` - the import requires authentication in order to
        connect to the original repository. To update authentication for the
        import, please see the [Update an
        import](https://developer.github.com/v3/migrations/source_imports/#update-an-import)
        section.

        *   `error` - the import encountered an error. The import progress
        response will include the `failed_step` and an error message. Contact
        [GitHub Support](https://github.com/contact) or [GitHub Premium
        Support](https://premium.githubsupport.com) for more information.

        *   `detection_needs_auth` - the importer requires authentication for
        the originating repository to continue detection. To update
        authentication for the import, please see the [Update an
        import](https://developer.github.com/v3/migrations/source_imports/#update-an-import)
        section.

        *   `detection_found_nothing` - the importer didn't recognize any source
        control at the URL. To resolve, [Cancel the
        import](https://developer.github.com/v3/migrations/source_imports/#cancel-an-import)
        and
        [retry](https://developer.github.com/v3/migrations/source_imports/#start-an-import)
        with the correct URL.

        *   `detection_found_multiple` - the importer found several projects or
        repositories at the provided URL. When this is the case, the Import
        Progress response will also include a `project_choices` field with the
        possible project choices as values. To update project choice, please see
        the [Update an
        import](https://developer.github.com/v3/migrations/source_imports/#update-an-import)
        section.


        **The project_choices field**


        When multiple projects are found at the provided URL, the response hash
        will include a `project_choices` field, the value of which is an array
        of hashes each representing a project choice. The exact key/value pairs
        of the project hashes will differ depending on the version control type.


        **Git LFS related fields**


        This section includes details about Git LFS related fields that may be
        present in the Import Progress response.


        *   `use_lfs` - describes whether the import has been opted in or out of
        using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if
        no action has been taken.

        *   `has_large_files` - the boolean value describing whether files
        larger than 100MB were found during the `importing` step.

        *   `large_files_size` - the total size in gigabytes of files larger
        than 100MB found in the originating repository.

        *   `large_files_count` - the total number of files larger than 100MB
        found in the originating repository. To see a list of these files, make
        a "Get Large Files" request.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                vcs: subversion
                use_lfs: opt_in
                vcs_url: http://svn.mycompany.com/svn/myproject
                status: complete
                status_text: Done
                has_large_files: true
                large_files_size: 132331036
                large_files_count: 1
                authors_count: 4
                url: https://api.github.com/repos/octocat/socm/import
                html_url: https://import.github.com/octocat/socm/import
                authors_url: https://api.github.com/repos/octocat/socm/import/authors
                repository_url: https://api.github.com/repos/octocat/socm
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - repos > {owner}/{repo} > import
      summary: Start an import
      description: Start a source import to a GitHub repository using GitHub Importer.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"vcs_url\": \"<string>\",\n    \"vcs\":
                \"<string>\",\n    \"vcs_username\": \"<string>\",\n   
                \"vcs_password\": \"<string>\",\n    \"tfvc_project\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                vcs: subversion
                use_lfs: undecided
                vcs_url: http://svn.mycompany.com/svn/myproject
                status: importing
                status_text: Importing...
                has_large_files: false
                large_files_size: 0
                large_files_count: 0
                authors_count: 0
                commit_count: 1042
                url: https://api.github.com/repos/octocat/socm/import
                html_url: https://import.github.com/octocat/socm/import
                authors_url: https://api.github.com/repos/octocat/socm/import/authors
                repository_url: https://api.github.com/repos/octocat/socm
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    patch:
      tags:
        - repos > {owner}/{repo} > import
      summary: Update an import
      description: >-
        An import can be updated with credentials or a project choice by passing
        in the appropriate parameters in this API

        request. If no parameters are provided, the import will be restarted.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"vcs_username\": \"<string>\",\n    \"vcs_password\":
                \"<string>\",\n    \"vcs\": \"<string>\",\n    \"tfvc_project\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                vcs: subversion
                use_lfs: undecided
                vcs_url: http://svn.mycompany.com/svn/myproject
                status: detecting
                url: https://api.github.com/repos/octocat/socm/import
                html_url: https://import.github.com/octocat/socm/import
                authors_url: https://api.github.com/repos/octocat/socm/import/authors
                repository_url: https://api.github.com/repos/octocat/socm
    delete:
      tags:
        - repos > {owner}/{repo} > import
      summary: Cancel an import
      description: Stop an import for a repository.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/import/large_files:
    get:
      tags:
        - repos > {owner}/{repo} > import
      summary: Get large files
      description: List files larger than 100MB found during the import
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ref_name: refs/heads/master
                  path: foo/bar/1
                  oid: d3d9446802a44259755d38e6d163e820
                  size: 10485760
                - ref_name: refs/heads/master
                  path: foo/bar/2
                  oid: 6512bd43d9caa6e02c990b0a82652dca
                  size: 11534336
                - ref_name: refs/heads/master
                  path: foo/bar/3
                  oid: c20ad4d76fe97759aa27a0c99bff6710
                  size: 12582912
  /repos/{owner}/{repo}/import/lfs:
    patch:
      tags:
        - repos > {owner}/{repo} > import
      summary: Update Git LFS preference
      description: >-
        You can import repositories from Subversion, Mercurial, and TFS that
        include files larger than 100MB. This ability is powered by [Git
        LFS](https://git-lfs.github.com). You can learn more about our LFS
        feature and working with large files [on our help
        site](https://help.github.com/articles/versioning-large-files/).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"use_lfs\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                vcs: subversion
                use_lfs: opt_in
                vcs_url: http://svn.mycompany.com/svn/myproject
                status: complete
                status_text: Done
                has_large_files: true
                large_files_size: 132331036
                large_files_count: 1
                authors_count: 4
                url: https://api.github.com/repos/octocat/socm/import
                html_url: https://import.github.com/octocat/socm/import
                authors_url: https://api.github.com/repos/octocat/socm/import/authors
                repository_url: https://api.github.com/repos/octocat/socm
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/interaction-limits:
    get:
      tags:
        - repos > {owner}/{repo} > interaction-limits
      summary: Get interaction restrictions for a repository
      description: >-
        Shows which group of GitHub users can interact with this repository and
        when the restriction expires. If there are no restrictions, you will see
        an empty response.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                limit: collaborators_only
                origin: repository
                expires_at: '2018-08-17T04:18:39Z'
    put:
      tags:
        - repos > {owner}/{repo} > interaction-limits
      summary: Set interaction restrictions for a repository
      description: >-
        Temporarily restricts interactions to certain GitHub users within the
        given repository. You must have owner or admin access to set
        restrictions.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"limit\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                limit: collaborators_only
                origin: repository
                expires_at: '2018-08-17T04:18:39Z'
    delete:
      tags:
        - repos > {owner}/{repo} > interaction-limits
      summary: Remove interaction restrictions for a repository
      description: >-
        Removes all interaction restrictions from the given repository. You must
        have owner or admin access to remove restrictions.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/invitations/{invitation_id}:
    patch:
      tags:
        - repos > {owner}/{repo} > invitations > {invitation id}
      summary: Update a repository invitation
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"permissions\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: invitation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) invitation_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                repository:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                invitee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                inviter:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                permissions: write
                created_at: '2016-06-13T14:52:50-05:00'
                url: https://api.github.com/user/repository_invitations/1296269
                html_url: https://github.com/octocat/Hello-World/invitations
    delete:
      tags:
        - repos > {owner}/{repo} > invitations > {invitation id}
      summary: Delete a repository invitation
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: invitation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) invitation_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/invitations:
    get:
      tags:
        - repos > {owner}/{repo} > invitations
      summary: List repository invitations
      description: >-
        When authenticating as a user with admin rights to a repository, this
        endpoint will list all currently open repository invitations.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  repository:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                  invitee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  inviter:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  permissions: write
                  created_at: '2016-06-13T14:52:50-05:00'
                  url: https://api.github.com/user/repository_invitations/1296269
                  html_url: https://github.com/octocat/Hello-World/invitations
                  node_id: MDQ6VXNlcjE=
  /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions:
    get:
      tags:
        - repos > {owner}/{repo} > issues > comments > {comment id} > reactions
      summary: List reactions for an issue comment
      description: >-
        List the reactions to an [issue
        comment](https://developer.github.com/v3/issues/comments/).
      parameters:
        - name: content
          in: query
          schema:
            type: string
          description: >-
            Returns a single [reaction
            type](https://developer.github.com/v3/reactions/#reaction-types).
            Omit this parameter to list all reactions to an issue comment.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDg6UmVhY3Rpb24x
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  content: heart
                  created_at: '2016-05-20T20:09:31Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
    post:
      tags:
        - repos > {owner}/{repo} > issues > comments > {comment id} > reactions
      summary: Create reaction for an issue comment
      description: >-
        Create a reaction to an [issue
        comment](https://developer.github.com/v3/issues/comments/). A response
        with a `Status: 200 OK` means that you already added the reaction type
        to this issue comment.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"content\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}:
    delete:
      tags:
        - repos > {owner}/{repo} > issues > comments > {comment id} > reactions
      summary: Delete an issue comment reaction
      description: >-
        **Note:** You can also specify a repository by `repository_id` using the
        route `DELETE delete
        /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.


        Delete a reaction to an [issue
        comment](https://developer.github.com/v3/issues/comments/).
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
        - name: reaction_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/issues/comments/{comment_id}:
    get:
      tags:
        - repos > {owner}/{repo} > issues > comments > {comment id}
      summary: Get an issue comment
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDEyOklzc3VlQ29tbWVudDE=
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments/1
                html_url: >-
                  https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
                body: Me too
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
                issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                author_association: collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > issues > comments > {comment id}
      summary: Update an issue comment
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDEyOklzc3VlQ29tbWVudDE=
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments/1
                html_url: >-
                  https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
                body: Me too
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
                issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                author_association: collaborator
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo} > issues > comments > {comment id}
      summary: Delete an issue comment
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/issues/comments:
    get:
      tags:
        - repos > {owner}/{repo} > issues > comments
      summary: List issue comments for a repository
      description: By default, Issue Comments are ordered by ascending ID.
      parameters:
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            One of `created` (when the repository was starred) or `updated`
            (when it was last pushed to).
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: Either `asc` or `desc`. Ignored without the `sort` parameter.
          example: <string>
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDEyOklzc3VlQ29tbWVudDE=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments/1
                  html_url: >-
                    https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
                  body: Me too
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-14T16:00:49Z'
                  updated_at: '2011-04-14T16:00:49Z'
                  issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  author_association: collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/issues/events:
    get:
      tags:
        - repos > {owner}/{repo} > issues > events
      summary: List issue events for a repository
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDEwOklzc3VlRXZlbnQx
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events/1
                  actor:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  event: closed
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  commit_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  created_at: '2011-04-14T16:00:49Z'
                  issue:
                    id: 1
                    node_id: MDU6SXNzdWUx
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347
                    repository_url: https://api.github.com/repos/octocat/Hello-World
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                    events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                    html_url: https://github.com/octocat/Hello-World/issues/1347
                    number: 1347
                    state: open
                    title: Found a bug
                    body: I'm having a problem with this.
                    user:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    labels:
                      - id: 208045946
                        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/labels/bug
                        name: bug
                        description: Something isn't working
                        color: f29513
                        default: true
                    assignee:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    assignees:
                      - login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                    milestone:
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones/1
                      html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                      id: 1002604
                      node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                      number: 1
                      state: open
                      title: v1.0
                      description: Tracking milestone for version 1.0
                      creator:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      open_issues: 4
                      closed_issues: 8
                      created_at: '2011-04-10T20:09:31Z'
                      updated_at: '2014-03-03T18:58:10Z'
                      closed_at: '2013-02-12T13:22:01Z'
                      due_on: '2012-10-09T23:39:01Z'
                    locked: true
                    active_lock_reason: too heated
                    comments: 0
                    pull_request:
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/1347
                      html_url: https://github.com/octocat/Hello-World/pull/1347
                      diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                      patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                    closed_at: null
                    created_at: '2011-04-22T13:33:48Z'
                    updated_at: '2011-04-22T13:33:48Z'
                    author_association: collaborator
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/issues/events/{event_id}:
    get:
      tags:
        - repos > {owner}/{repo} > issues > events
      summary: Get an issue event
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: event_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) event_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDEwOklzc3VlRXZlbnQx
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events/1
                actor:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                event: closed
                commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                commit_url: >-
                  https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                created_at: '2011-04-14T16:00:49Z'
                issue:
                  id: 1
                  node_id: MDU6SXNzdWUx
                  url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  repository_url: https://api.github.com/repos/octocat/Hello-World
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                  html_url: https://github.com/octocat/Hello-World/issues/1347
                  number: 1347
                  state: open
                  title: Found a bug
                  body: I'm having a problem with this.
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  labels:
                    - id: 208045946
                      node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels/bug
                      name: bug
                      description: Something isn't working
                      color: f29513
                      default: true
                  assignee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  assignees:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  milestone:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1
                    html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                    id: 1002604
                    node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                    number: 1
                    state: open
                    title: v1.0
                    description: Tracking milestone for version 1.0
                    creator:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    open_issues: 4
                    closed_issues: 8
                    created_at: '2011-04-10T20:09:31Z'
                    updated_at: '2014-03-03T18:58:10Z'
                    closed_at: '2013-02-12T13:22:01Z'
                    due_on: '2012-10-09T23:39:01Z'
                  locked: true
                  active_lock_reason: too heated
                  comments: 0
                  pull_request:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                    html_url: https://github.com/octocat/Hello-World/pull/1347
                    diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                    patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                  closed_at: null
                  created_at: '2011-04-22T13:33:48Z'
                  updated_at: '2011-04-22T13:33:48Z'
                  author_association: collaborator
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/issues/{issue_number}/assignees:
    post:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > assignees
      summary: Add assignees to an issue
      description: >-
        Adds up to 10 assignees to an issue. Users already assigned to an issue
        are not replaced.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"assignees\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDU6SXNzdWUx
                url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                repository_url: https://api.github.com/repos/octocat/Hello-World
                labels_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                html_url: https://github.com/octocat/Hello-World/issues/1347
                number: 1347
                state: open
                title: Found a bug
                body: I'm having a problem with this.
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  - login: hubot
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/hubot_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/hubot
                    html_url: https://github.com/hubot
                    followers_url: https://api.github.com/users/hubot/followers
                    following_url: https://api.github.com/users/hubot/following{/other_user}
                    gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                    starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/hubot/subscriptions
                    organizations_url: https://api.github.com/users/hubot/orgs
                    repos_url: https://api.github.com/users/hubot/repos
                    events_url: https://api.github.com/users/hubot/events{/privacy}
                    received_events_url: https://api.github.com/users/hubot/received_events
                    type: User
                    site_admin: true
                  - login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                locked: true
                active_lock_reason: too heated
                comments: 0
                pull_request:
                  url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html_url: https://github.com/octocat/Hello-World/pull/1347
                  diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                  patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                closed_at: null
                created_at: '2011-04-22T13:33:48Z'
                updated_at: '2011-04-22T13:33:48Z'
                author_association: collaborator
    delete:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > assignees
      summary: Remove assignees from an issue
      description: Removes one or more assignees from an issue.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDU6SXNzdWUx
                url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                repository_url: https://api.github.com/repos/octocat/Hello-World
                labels_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                html_url: https://github.com/octocat/Hello-World/issues/1347
                number: 1347
                state: open
                title: Found a bug
                body: I'm having a problem with this.
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  - login: hubot
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/hubot_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/hubot
                    html_url: https://github.com/hubot
                    followers_url: https://api.github.com/users/hubot/followers
                    following_url: https://api.github.com/users/hubot/following{/other_user}
                    gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                    starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/hubot/subscriptions
                    organizations_url: https://api.github.com/users/hubot/orgs
                    repos_url: https://api.github.com/users/hubot/repos
                    events_url: https://api.github.com/users/hubot/events{/privacy}
                    received_events_url: https://api.github.com/users/hubot/received_events
                    type: User
                    site_admin: true
                  - login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                locked: true
                active_lock_reason: too heated
                comments: 0
                pull_request:
                  url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html_url: https://github.com/octocat/Hello-World/pull/1347
                  diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                  patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                closed_at: null
                created_at: '2011-04-22T13:33:48Z'
                updated_at: '2011-04-22T13:33:48Z'
                author_association: collaborator
  /repos/{owner}/{repo}/issues/{issue_number}/comments:
    get:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > comments
      summary: List issue comments
      description: Issue Comments are ordered by ascending ID.
      parameters:
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDEyOklzc3VlQ29tbWVudDE=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments/1
                  html_url: >-
                    https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
                  body: Me too
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-14T16:00:49Z'
                  updated_at: '2011-04-14T16:00:49Z'
                  issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  author_association: collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > comments
      summary: Create an issue comment
      description: >-
        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDEyOklzc3VlQ29tbWVudDE=
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments/1
                html_url: >-
                  https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
                body: Me too
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
                issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                author_association: collaborator
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/issues/{issue_number}/labels:
    get:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > labels
      summary: List labels for an issue
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 208045946
                  node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                  url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                  name: bug
                  description: Something isn't working
                  color: f29513
                  default: true
                - id: 208045947
                  node_id: MDU6TGFiZWwyMDgwNDU5NDc=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels/enhancement
                  name: enhancement
                  description: New feature or request
                  color: a2eeef
                  default: false
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > labels
      summary: Add labels to an issue
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"labels\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 208045946
                  node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                  url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                  name: bug
                  description: Something isn't working
                  color: f29513
                  default: true
                - id: 208045947
                  node_id: MDU6TGFiZWwyMDgwNDU5NDc=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels/enhancement
                  name: enhancement
                  description: New feature or request
                  color: a2eeef
                  default: false
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    put:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > labels
      summary: Set labels for an issue
      description: Removes any previous labels and sets the new labels for an issue.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"labels\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 208045946
                  node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                  url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                  name: bug
                  description: Something isn't working
                  color: f29513
                  default: true
                - id: 208045947
                  node_id: MDU6TGFiZWwyMDgwNDU5NDc=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels/enhancement
                  name: enhancement
                  description: New feature or request
                  color: a2eeef
                  default: false
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > labels
      summary: Remove all labels from an issue
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}:
    delete:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > labels
      summary: Remove a label from an issue
      description: >-
        Removes the specified label from the issue, and returns the remaining
        labels on the issue. This endpoint returns a `404 Not Found` status if
        the label does not exist.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: (Required) name parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 208045946
                  node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                  url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                  name: bug
                  description: Something isn't working
                  color: f29513
                  default: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/issues/{issue_number}/lock:
    put:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > lock
      summary: Lock an issue
      description: >-
        Users with push access can lock an issue or pull request's conversation.


        Note that, if you choose not to pass any parameters, you'll need to set
        `Content-Length` to zero when calling out to this endpoint. For more
        information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"lock_reason\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > lock
      summary: Unlock an issue
      description: Users with push access can unlock an issue's conversation.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/issues/{issue_number}/reactions:
    get:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > reactions
      summary: List reactions for an issue
      description: >-
        List the reactions to an
        [issue](https://developer.github.com/v3/issues/).
      parameters:
        - name: content
          in: query
          schema:
            type: string
          description: >-
            Returns a single [reaction
            type](https://developer.github.com/v3/reactions/#reaction-types).
            Omit this parameter to list all reactions to an issue.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDg6UmVhY3Rpb24x
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  content: heart
                  created_at: '2016-05-20T20:09:31Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
    post:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > reactions
      summary: Create reaction for an issue
      description: >-
        Create a reaction to an
        [issue](https://developer.github.com/v3/issues/). A response with a
        `Status: 200 OK` means that you already added the reaction type to this
        issue.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"content\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}:
    delete:
      tags:
        - repos > {owner}/{repo} > issues > {issue number} > reactions
      summary: Delete an issue reaction
      description: >-
        **Note:** You can also specify a repository by `repository_id` using the
        route `DELETE
        /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.


        Delete a reaction to an
        [issue](https://developer.github.com/v3/issues/).
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
        - name: reaction_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/issues/{issue_number}:
    get:
      tags:
        - repos > {owner}/{repo} > issues > {issue number}
      summary: Get an issue
      description: >-
        The API returns a [`301 Moved Permanently`
        status](https://developer.github.com/v3/#http-redirects) if the issue
        was

        [transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/)
        to another repository. If

        the issue was transferred to or deleted from a repository where the
        authenticated user lacks read access, the API

        returns a `404 Not Found` status. If the issue was deleted from a
        repository where the authenticated user has read

        access, the API returns a `410 Gone` status. To receive webhook events
        for transferred and deleted issues, subscribe

        to the
        [`issues`](https://developer.github.com/webhooks/event-payloads/#issues)
        webhook.


        **Note**: GitHub's REST API v3 considers every pull request an issue,
        but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in
        the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request
        returned from "Issues" endpoints will be an _issue id_. To find out the
        pull

        request id, use the "[List pull
        requests](https://developer.github.com/v3/pulls/#list-pull-requests)"
        endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDU6SXNzdWUx
                url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                repository_url: https://api.github.com/repos/octocat/Hello-World
                labels_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                html_url: https://github.com/octocat/Hello-World/issues/1347
                number: 1347
                state: open
                title: Found a bug
                body: I'm having a problem with this.
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                locked: true
                active_lock_reason: too heated
                comments: 0
                pull_request:
                  url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html_url: https://github.com/octocat/Hello-World/pull/1347
                  diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                  patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                closed_at: null
                created_at: '2011-04-22T13:33:48Z'
                updated_at: '2011-04-22T13:33:48Z'
                closed_by:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                author_association: collaborator
        '301':
          description: Moved Permanently
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > issues > {issue number}
      summary: Update an issue
      description: Issue owners and users with push access can edit an issue.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"title\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"assignee\": \"<string>\",\n    \"state\":
                \"<string>\",\n    \"milestone\": \"<integer>\",\n   
                \"labels\": [\n        \"<string>\",\n        \"<string>\"\n   
                ],\n    \"assignees\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDU6SXNzdWUx
                url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                repository_url: https://api.github.com/repos/octocat/Hello-World
                labels_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                html_url: https://github.com/octocat/Hello-World/issues/1347
                number: 1347
                state: open
                title: Found a bug
                body: I'm having a problem with this.
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                locked: true
                active_lock_reason: too heated
                comments: 0
                pull_request:
                  url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html_url: https://github.com/octocat/Hello-World/pull/1347
                  diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                  patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                closed_at: null
                created_at: '2011-04-22T13:33:48Z'
                updated_at: '2011-04-22T13:33:48Z'
                closed_by:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                author_association: collaborator
        '301':
          description: Moved Permanently
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /repos/{owner}/{repo}/issues/{issue_number}/events:
    get:
      tags:
        - repos > {owner}/{repo} > issues > {issue number}
      summary: List issue events
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDEwOklzc3VlRXZlbnQx
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events/1
                  actor:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  event: closed
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  commit_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  created_at: '2011-04-14T16:00:49Z'
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/issues/{issue_number}/timeline:
    get:
      tags:
        - repos > {owner}/{repo} > issues > {issue number}
      summary: List timeline events for an issue
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: issue_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) issue_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDEwOklzc3VlRXZlbnQx
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events/1
                  actor:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  event: closed
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  commit_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  created_at: '2011-04-14T16:00:49Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /repos/{owner}/{repo}/issues:
    get:
      tags:
        - repos > {owner}/{repo} > issues
      summary: List repository issues
      description: >-
        List issues in a repository.


        **Note**: GitHub's REST API v3 considers every pull request an issue,
        but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in
        the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request
        returned from "Issues" endpoints will be an _issue id_. To find out the
        pull

        request id, use the "[List pull
        requests](https://developer.github.com/v3/pulls/#list-pull-requests)"
        endpoint.
      parameters:
        - name: milestone
          in: query
          schema:
            type: string
          description: >-
            If an `integer` is passed, it should refer to a milestone by its
            `number` field. If the string `*` is passed, issues with any
            milestone are accepted. If the string `none` is passed, issues
            without milestones are returned.
          example: <string>
        - name: state
          in: query
          schema:
            type: string
          description: >-
            Indicates the state of the issues to return. Can be either `open`,
            `closed`, or `all`.
          example: open
        - name: assignee
          in: query
          schema:
            type: string
          description: >-
            Can be the name of a user. Pass in `none` for issues with no
            assigned user, and `*` for issues assigned to any user.
          example: <string>
        - name: creator
          in: query
          schema:
            type: string
          description: The user that created the issue.
          example: <string>
        - name: mentioned
          in: query
          schema:
            type: string
          description: A user that's mentioned in the issue.
          example: <string>
        - name: labels
          in: query
          schema:
            type: string
          description: 'A list of comma separated label names. Example: `bug,ui,@high`'
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            What to sort results by. Can be either `created`, `updated`,
            `comments`.
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDU6SXNzdWUx
                  url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  repository_url: https://api.github.com/repos/octocat/Hello-World
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                  html_url: https://github.com/octocat/Hello-World/issues/1347
                  number: 1347
                  state: open
                  title: Found a bug
                  body: I'm having a problem with this.
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  labels:
                    - id: 208045946
                      node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels/bug
                      name: bug
                      description: Something isn't working
                      color: f29513
                      default: true
                  assignee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  assignees:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  milestone:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1
                    html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                    id: 1002604
                    node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                    number: 1
                    state: open
                    title: v1.0
                    description: Tracking milestone for version 1.0
                    creator:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    open_issues: 4
                    closed_issues: 8
                    created_at: '2011-04-10T20:09:31Z'
                    updated_at: '2014-03-03T18:58:10Z'
                    closed_at: '2013-02-12T13:22:01Z'
                    due_on: '2012-10-09T23:39:01Z'
                  locked: true
                  active_lock_reason: too heated
                  comments: 0
                  pull_request:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                    html_url: https://github.com/octocat/Hello-World/pull/1347
                    diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                    patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                  closed_at: null
                  created_at: '2011-04-22T13:33:48Z'
                  updated_at: '2011-04-22T13:33:48Z'
                  author_association: collaborator
        '301':
          description: Moved Permanently
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    post:
      tags:
        - repos > {owner}/{repo} > issues
      summary: Create an issue
      description: >-
        Any user with pull access to a repository can create an issue. If
        [issues are disabled in the
        repository](https://help.github.com/articles/disabling-issues/), the API
        returns a `410 Gone` status.


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"title\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"assignee\": \"<string>\",\n   
                \"milestone\": \"<integer>\",\n    \"labels\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"assignees\":
                [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDU6SXNzdWUx
                url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                repository_url: https://api.github.com/repos/octocat/Hello-World
                labels_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                html_url: https://github.com/octocat/Hello-World/issues/1347
                number: 1347
                state: open
                title: Found a bug
                body: I'm having a problem with this.
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                locked: true
                active_lock_reason: too heated
                comments: 0
                pull_request:
                  url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html_url: https://github.com/octocat/Hello-World/pull/1347
                  diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                  patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                closed_at: null
                created_at: '2011-04-22T13:33:48Z'
                updated_at: '2011-04-22T13:33:48Z'
                closed_by:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                author_association: collaborator
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /repos/{owner}/{repo}/keys/{key_id}:
    get:
      tags:
        - repos > {owner}/{repo} > keys > {key id}
      summary: Get a deploy key
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) key_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                key: ssh-rsa AAA...
                url: https://api.github.com/repos/octocat/Hello-World/keys/1
                title: octocat@octomac
                verified: true
                created_at: '2014-12-10T15:53:42Z'
                read_only: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - repos > {owner}/{repo} > keys > {key id}
      summary: Delete a deploy key
      description: >-
        Deploy keys are immutable. If you need to update a key, remove the key
        and create a new one instead.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) key_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/keys:
    get:
      tags:
        - repos > {owner}/{repo} > keys
      summary: List deploy keys
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  key: ssh-rsa AAA...
                  url: https://api.github.com/repos/octocat/Hello-World/keys/1
                  title: octocat@octomac
                  verified: true
                  created_at: '2014-12-10T15:53:42Z'
                  read_only: true
    post:
      tags:
        - repos > {owner}/{repo} > keys
      summary: Create a deploy key
      description: You can create a read-only deploy key.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"key\": \"<string>\",\n    \"title\":
                \"<string>\",\n    \"read_only\": \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                key: ssh-rsa AAA...
                url: https://api.github.com/repos/octocat/Hello-World/keys/1
                title: octocat@octomac
                verified: true
                created_at: '2014-12-10T15:53:42Z'
                read_only: true
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/labels/{name}:
    get:
      tags:
        - repos > {owner}/{repo} > labels > {name}
      summary: Get a label
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: (Required) name parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 208045946
                node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                name: bug
                description: Something isn't working
                color: f29513
                default: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > labels > {name}
      summary: Update a label
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"new_name\": \"<string>\",\n    \"color\":
                \"<string>\",\n    \"description\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: (Required) name parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 208045946
                node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:
                name: 'bug :bug:'
                description: Small bug fix required
                color: b01f26
                default: true
    delete:
      tags:
        - repos > {owner}/{repo} > labels > {name}
      summary: Delete a label
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: (Required) name parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/labels:
    get:
      tags:
        - repos > {owner}/{repo} > labels
      summary: List labels for a repository
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 208045946
                  node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                  url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                  name: bug
                  description: Something isn't working
                  color: f29513
                  default: true
                - id: 208045947
                  node_id: MDU6TGFiZWwyMDgwNDU5NDc=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels/enhancement
                  name: enhancement
                  description: New feature or request
                  color: a2eeef
                  default: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > labels
      summary: Create a label
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"color\":
                \"<string>\",\n    \"description\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 208045946
                node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                name: bug
                description: Something isn't working
                color: f29513
                default: true
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/milestones/{milestone_number}:
    get:
      tags:
        - repos > {owner}/{repo} > milestones > {milestone number}
      summary: Get a milestone
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: milestone_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) milestone_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/milestones/1
                html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                labels_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                id: 1002604
                node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                number: 1
                state: open
                title: v1.0
                description: Tracking milestone for version 1.0
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                open_issues: 4
                closed_issues: 8
                created_at: '2011-04-10T20:09:31Z'
                updated_at: '2014-03-03T18:58:10Z'
                closed_at: '2013-02-12T13:22:01Z'
                due_on: '2012-10-09T23:39:01Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > milestones > {milestone number}
      summary: Update a milestone
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"title\": \"<string>\",\n    \"state\": \"open\",\n   
                \"description\": \"<string>\",\n    \"due_on\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: milestone_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) milestone_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/milestones/1
                html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                labels_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                id: 1002604
                node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                number: 1
                state: open
                title: v1.0
                description: Tracking milestone for version 1.0
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                open_issues: 4
                closed_issues: 8
                created_at: '2011-04-10T20:09:31Z'
                updated_at: '2014-03-03T18:58:10Z'
                closed_at: '2013-02-12T13:22:01Z'
                due_on: '2012-10-09T23:39:01Z'
    delete:
      tags:
        - repos > {owner}/{repo} > milestones > {milestone number}
      summary: Delete a milestone
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: milestone_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) milestone_number parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/milestones/{milestone_number}/labels:
    get:
      tags:
        - repos > {owner}/{repo} > milestones > {milestone number}
      summary: List labels for issues in a milestone
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: milestone_number
          in: path
          schema:
            type: string
          required: true
          description: (Required) milestone_number parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 208045946
                  node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                  url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                  name: bug
                  description: Something isn't working
                  color: f29513
                  default: true
                - id: 208045947
                  node_id: MDU6TGFiZWwyMDgwNDU5NDc=
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels/enhancement
                  name: enhancement
                  description: New feature or request
                  color: a2eeef
                  default: false
  /repos/{owner}/{repo}/milestones:
    get:
      tags:
        - repos > {owner}/{repo} > milestones
      summary: List milestones
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: The state of the milestone. Either `open`, `closed`, or `all`.
          example: open
        - name: sort
          in: query
          schema:
            type: string
          description: What to sort results by. Either `due_on` or `completeness`.
          example: due_on
        - name: direction
          in: query
          schema:
            type: string
          description: The direction of the sort. Either `asc` or `desc`.
          example: asc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > milestones
      summary: Create a milestone
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"title\": \"<string>\",\n    \"state\": \"open\",\n   
                \"description\": \"<string>\",\n    \"due_on\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/milestones/1
                html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                labels_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                id: 1002604
                node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                number: 1
                state: open
                title: v1.0
                description: Tracking milestone for version 1.0
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                open_issues: 4
                closed_issues: 8
                created_at: '2011-04-10T20:09:31Z'
                updated_at: '2014-03-03T18:58:10Z'
                closed_at: '2013-02-12T13:22:01Z'
                due_on: '2012-10-09T23:39:01Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/notifications:
    get:
      tags:
        - repos > {owner}/{repo} > notifications
      summary: List repository notifications for the authenticated user
      description: List all notifications for the current user.
      parameters:
        - name: all
          in: query
          schema:
            type: boolean
          description: If `true`, show notifications marked as read.
          example: 'false'
        - name: participating
          in: query
          schema:
            type: boolean
          description: >-
            If `true`, only shows notifications in which the user is directly
            participating or mentioned.
          example: 'false'
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: before
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated before the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1'
                  repository:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                  subject:
                    title: Greetings
                    url: https://api.github.com/repos/octokit/octokit.rb/issues/123
                    latest_comment_url: >-
                      https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
                    type: Issue
                  reason: subscribed
                  unread: true
                  updated_at: '2014-11-07T22:01:45Z'
                  last_read_at: '2014-11-07T22:01:45Z'
                  url: https://api.github.com/notifications/threads/1
    put:
      tags:
        - repos > {owner}/{repo} > notifications
      summary: Mark repository notifications as read
      description: >-
        Marks all notifications in a repository as "read" removes them from the
        [default view on GitHub](https://github.com/notifications). If the
        number of notifications is too large to complete in one request, you
        will receive a `202 Accepted` status and GitHub will run an asynchronous
        process to mark notifications as "read." To check whether any "unread"
        notifications remain, you can use the [List repository notifications for
        the authenticated
        user](https://developer.github.com/v3/activity/notifications/#list-repository-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"last_read_at\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/pages/builds:
    get:
      tags:
        - repos > {owner}/{repo} > pages > builds
      summary: List GitHub Pages builds
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
                  status: built
                  error:
                    message: null
                  pusher:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
                  duration: 2104
                  created_at: '2014-02-10T19:00:49Z'
                  updated_at: '2014-02-10T19:00:51Z'
    post:
      tags:
        - repos > {owner}/{repo} > pages > builds
      summary: Request a GitHub Pages build
      description: >-
        You can request that your site be built from the latest revision on the
        default branch. This has the same effect as pushing a commit to your
        default branch, but does not require an additional commit. Manually
        triggering page builds can be helpful when diagnosing build warnings and
        failures.


        Build requests are limited to one concurrent build per repository and
        one concurrent build per requester. If you request a build while another
        is still in progress, the second request will be queued until the first
        completes.
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/github/developer.github.com/pages/builds/latest
                status: queued
  /repos/{owner}/{repo}/pages/builds/latest:
    get:
      tags:
        - repos > {owner}/{repo} > pages > builds
      summary: Get latest Pages build
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
                status: built
                error:
                  message: null
                pusher:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
                duration: 2104
                created_at: '2014-02-10T19:00:49Z'
                updated_at: '2014-02-10T19:00:51Z'
  /repos/{owner}/{repo}/pages/builds/{build_id}:
    get:
      tags:
        - repos > {owner}/{repo} > pages > builds
      summary: Get GitHub Pages build
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) build_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
                status: built
                error:
                  message: null
                pusher:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
                duration: 2104
                created_at: '2014-02-10T19:00:49Z'
                updated_at: '2014-02-10T19:00:51Z'
  /repos/{owner}/{repo}/pages:
    get:
      tags:
        - repos > {owner}/{repo} > pages
      summary: Get a GitHub Pages site
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/github/developer.github.com/pages
                status: built
                cname: developer.github.com
                custom_404: false
                html_url: https://developer.github.com
                source:
                  branch: master
                  path: /
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > pages
      summary: Create a GitHub Pages site
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"source\": {\n        \"branch\":
                \"<string>\",\n        \"path\": \"<string>\"\n    }\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/github/developer.github.com/pages
                status: built
                cname: developer.github.com
                custom_404: false
                html_url: https://developer.github.com
                source:
                  branch: master
                  path: /
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    put:
      tags:
        - repos > {owner}/{repo} > pages
      summary: Update information about a GitHub Pages site
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"cname\": \"<string>\",\n    \"source\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo} > pages
      summary: Delete a GitHub Pages site
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/projects:
    get:
      tags:
        - repos > {owner}/{repo} > projects
      summary: List repository projects
      description: >-
        Lists the projects in a repository. Returns a `404 Not Found` status if
        projects are disabled in the repository. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone`
        status is returned.
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: >-
            Indicates the state of the projects to return. Can be either `open`,
            `closed`, or `all`.
          example: open
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - owner_url: https://api.github.com/repos/api-playground/projects-test
                  url: https://api.github.com/projects/1002604
                  html_url: https://github.com/api-playground/projects-test/projects/1
                  columns_url: https://api.github.com/projects/1002604/columns
                  id: 1002604
                  node_id: MDc6UHJvamVjdDEwMDI2MDQ=
                  name: Projects Documentation
                  body: Developer documentation project for the developer site.
                  number: 1
                  state: open
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
    post:
      tags:
        - repos > {owner}/{repo} > projects
      summary: Create a repository project
      description: >-
        Creates a repository project board. Returns a `404 Not Found` status if
        projects are disabled in the repository. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone`
        status is returned.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\",\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                owner_url: https://api.github.com/repos/api-playground/projects-test
                url: https://api.github.com/projects/1002604
                html_url: https://github.com/api-playground/projects-test/projects/1
                columns_url: https://api.github.com/projects/1002604/columns
                id: 1002604
                node_id: MDc6UHJvamVjdDEwMDI2MDQ=
                name: Projects Documentation
                body: Developer documentation project for the developer site.
                number: 1
                state: open
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-10T20:09:31Z'
                updated_at: '2014-03-03T18:58:10Z'
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > comments > {comment id} > reactions
      summary: List reactions for a pull request review comment
      description: >-
        List the reactions to a [pull request review
        comment](https://developer.github.com/v3/pulls/comments/).
      parameters:
        - name: content
          in: query
          schema:
            type: string
          description: >-
            Returns a single [reaction
            type](https://developer.github.com/v3/reactions/#reaction-types).
            Omit this parameter to list all reactions to a pull request review
            comment.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDg6UmVhY3Rpb24x
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  content: heart
                  created_at: '2016-05-20T20:09:31Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
    post:
      tags:
        - repos > {owner}/{repo} > pulls > comments > {comment id} > reactions
      summary: Create reaction for a pull request review comment
      description: >-
        Create a reaction to a [pull request review
        comment](https://developer.github.com/v3/pulls/comments/). A response
        with a `Status: 200 OK` means that you already added the reaction type
        to this pull request review comment.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"content\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}:
    delete:
      tags:
        - repos > {owner}/{repo} > pulls > comments > {comment id} > reactions
      summary: Delete a pull request comment reaction
      description: >-
        **Note:** You can also specify a repository by `repository_id` using the
        route `DELETE
        /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`


        Delete a reaction to a [pull request review
        comment](https://developer.github.com/v3/pulls/comments/).
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
        - name: reaction_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/pulls/comments/{comment_id}:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > comments > {comment id}
      summary: Get a review comment for a pull request
      description: >-
        **Note:** Multi-line comments on pull requests are currently in public
        beta and subject to change.


        Provides details for a review comment.


        **Multi-line comment summary**


        **Note:** New parameters and response fields are available for
        developers to preview. During the preview period, these response fields
        may change without advance notice. Please see the [blog
        post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
        for full details.


        Use the `comfort-fade` preview header and the `line` parameter to show
        multi-line comment-supported fields in the response.


        If you use the `comfort-fade` preview header, your response will show:


        *   For multi-line comments, values for `start_line`,
        `original_start_line`, `start_side`, `line`, `original_line`, and
        `side`.

        *   For single-line comments, values for `line`, `original_line`, and
        `side` and a `null` value for `start_line`, `original_start_line`, and
        `start_side`.


        If you don't use the `comfort-fade` preview header, multi-line and
        single-line comments will appear the same way in the response with a
        single `position` attribute. Your response will show:


        *   For multi-line comments, the last line of the comment range for the
        `position` attribute.

        *   For single-line comments, the diff-positioned way of referencing
        comments for the `position` attribute. For more information, see
        `position` in the [input
        parameters](https://developer.github.com/v3/pulls/comments/#parameters-2)
        table.


        The `reactions` key will have the following payload where `url` can be
        used to construct the API location for [listing and
        creating](https://developer.github.com/v3/reactions) reactions.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                pull_request_review_id: 42
                id: 10
                node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
                diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
                path: file1.txt
                position: 1
                original_position: 4
                commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
                in_reply_to_id: 8
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Great stuff!
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
                author_association: NONE
                _links:
                  self:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/1
                start_line: 1
                original_start_line: 1
                start_side: RIGHT
                line: 2
                original_line: 2
                side: RIGHT
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > pulls > comments > {comment id}
      summary: Update a review comment for a pull request
      description: >-
        **Note:** Multi-line comments on pull requests are currently in public
        beta and subject to change.


        Enables you to edit a review comment.


        **Multi-line comment summary**


        **Note:** New parameters and response fields are available for
        developers to preview. During the preview period, these response fields
        may change without advance notice. Please see the [blog
        post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
        for full details.


        Use the `comfort-fade` preview header and the `line` parameter to show
        multi-line comment-supported fields in the response.


        If you use the `comfort-fade` preview header, your response will show:


        *   For multi-line comments, values for `start_line`,
        `original_start_line`, `start_side`, `line`, `original_line`, and
        `side`.

        *   For single-line comments, values for `line`, `original_line`, and
        `side` and a `null` value for `start_line`, `original_start_line`, and
        `start_side`.


        If you don't use the `comfort-fade` preview header, multi-line and
        single-line comments will appear the same way in the response with a
        single `position` attribute. Your response will show:


        *   For multi-line comments, the last line of the comment range for the
        `position` attribute.

        *   For single-line comments, the diff-positioned way of referencing
        comments for the `position` attribute. For more information, see
        `position` in the [input
        parameters](https://developer.github.com/v3/pulls/comments/#parameters-2)
        table.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                pull_request_review_id: 42
                id: 10
                node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
                diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
                path: file1.txt
                position: 1
                original_position: 4
                commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
                in_reply_to_id: 8
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Great stuff!
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
                author_association: NONE
                _links:
                  self:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/1
                start_line: 1
                original_start_line: 1
                start_side: RIGHT
                line: 2
                original_line: 2
                side: RIGHT
    delete:
      tags:
        - repos > {owner}/{repo} > pulls > comments > {comment id}
      summary: Delete a review comment for a pull request
      description: Deletes a review comment.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/pulls/comments:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > comments
      summary: List review comments in a repository
      description: >-
        **Note:** Multi-line comments on pull requests are currently in public
        beta and subject to change.


        Lists review comments for all pull requests in a repository. By default,
        review comments are in ascending order by ID.


        **Multi-line comment summary**


        **Note:** New parameters and response fields are available for
        developers to preview. During the preview period, these response fields
        may change without advance notice. Please see the [blog
        post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
        for full details.


        Use the `comfort-fade` preview header and the `line` parameter to show
        multi-line comment-supported fields in the response.


        If you use the `comfort-fade` preview header, your response will show:


        *   For multi-line comments, values for `start_line`,
        `original_start_line`, `start_side`, `line`, `original_line`, and
        `side`.

        *   For single-line comments, values for `line`, `original_line`, and
        `side` and a `null` value for `start_line`, `original_start_line`, and
        `start_side`.


        If you don't use the `comfort-fade` preview header, multi-line and
        single-line comments will appear the same way in the response with a
        single `position` attribute. Your response will show:


        *   For multi-line comments, the last line of the comment range for the
        `position` attribute.

        *   For single-line comments, the diff-positioned way of referencing
        comments for the `position` attribute. For more information, see
        `position` in the [input
        parameters](https://developer.github.com/v3/pulls/comments/#parameters-2)
        table.


        The `reactions` key will have the following payload where `url` can be
        used to construct the API location for [listing and
        creating](https://developer.github.com/v3/reactions) reactions.
      parameters:
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            One of `created` (when the repository was starred) or `updated`
            (when it was last pushed to).
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: Can be either `asc` or `desc`. Ignored without `sort` parameter.
          example: <string>
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                  pull_request_review_id: 42
                  id: 10
                  node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
                  diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
                  path: file1.txt
                  position: 1
                  original_position: 4
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
                  in_reply_to_id: 8
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Great stuff!
                  created_at: '2011-04-14T16:00:49Z'
                  updated_at: '2011-04-14T16:00:49Z'
                  html_url: >-
                    https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                  pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
                  author_association: NONE
                  _links:
                    self:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                    html:
                      href: >-
                        https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                    pull_request:
                      href: https://api.github.com/repos/octocat/Hello-World/pulls/1
                  start_line: 1
                  original_start_line: 1
                  start_side: RIGHT
                  line: 2
                  original_line: 2
                  side: RIGHT
  /repos/{owner}/{repo}/pulls/{pull_number}/comments:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > comments
      summary: List review comments on a pull request
      description: >-
        **Note:** Multi-line comments on pull requests are currently in public
        beta and subject to change.


        Lists all review comments for a pull request. By default, review
        comments are in ascending order by ID.


        **Multi-line comment summary**


        **Note:** New parameters and response fields are available for
        developers to preview. During the preview period, these response fields
        may change without advance notice. Please see the [blog
        post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
        for full details.


        Use the `comfort-fade` preview header and the `line` parameter to show
        multi-line comment-supported fields in the response.


        If you use the `comfort-fade` preview header, your response will show:


        *   For multi-line comments, values for `start_line`,
        `original_start_line`, `start_side`, `line`, `original_line`, and
        `side`.

        *   For single-line comments, values for `line`, `original_line`, and
        `side` and a `null` value for `start_line`, `original_start_line`, and
        `start_side`.


        If you don't use the `comfort-fade` preview header, multi-line and
        single-line comments will appear the same way in the response with a
        single `position` attribute. Your response will show:


        *   For multi-line comments, the last line of the comment range for the
        `position` attribute.

        *   For single-line comments, the diff-positioned way of referencing
        comments for the `position` attribute. For more information, see
        `position` in the [input
        parameters](https://developer.github.com/v3/pulls/comments/#parameters-2)
        table.


        The `reactions` key will have the following payload where `url` can be
        used to construct the API location for [listing and
        creating](https://developer.github.com/v3/reactions) reactions.
      parameters:
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            One of `created` (when the repository was starred) or `updated`
            (when it was last pushed to).
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: Can be either `asc` or `desc`. Ignored without `sort` parameter.
          example: <string>
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                  pull_request_review_id: 42
                  id: 10
                  node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
                  diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
                  path: file1.txt
                  position: 1
                  original_position: 4
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
                  in_reply_to_id: 8
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Great stuff!
                  created_at: '2011-04-14T16:00:49Z'
                  updated_at: '2011-04-14T16:00:49Z'
                  html_url: >-
                    https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                  pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
                  author_association: NONE
                  _links:
                    self:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                    html:
                      href: >-
                        https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                    pull_request:
                      href: https://api.github.com/repos/octocat/Hello-World/pulls/1
                  start_line: 1
                  original_start_line: 1
                  start_side: RIGHT
                  line: 2
                  original_line: 2
                  side: RIGHT
    post:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > comments
      summary: Create a review comment for a pull request
      description: >-
        **Note:** Multi-line comments on pull requests are currently in public
        beta and subject to change.


        Creates a review comment in the pull request diff. To add a regular
        comment to a pull request timeline, see "[Create an issue
        comment](https://developer.github.com/v3/issues/comments/#create-an-issue-comment)."
        We recommend creating a review comment using `line`, `side`, and
        optionally `start_line` and `start_side` if your comment applies to more
        than one line in the pull request diff.


        You can still create a review comment using the `position` parameter.
        When you use `position`, the `line`, `side`, `start_line`, and
        `start_side` parameters are not required. For more information, see
        [Multi-line comment
        summary](https://developer.github.com/v3/pulls/comments/#multi-line-comment-summary-3).


        **Note:** The position value equals the number of lines down from the
        first "@@" hunk header in the file you want to add a comment. The line
        just below the "@@" line is position 1, the next line is position 2, and
        so on. The position in the diff continues to increase through lines of
        whitespace and additional hunks until the beginning of a new file.


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.


        **Multi-line comment summary**


        **Note:** New parameters and response fields are available for
        developers to preview. During the preview period, these response fields
        may change without advance notice. Please see the [blog
        post](https://developer.github.com/changes/2019-10-03-multi-line-comments)
        for full details.


        Use the `comfort-fade` preview header and the `line` parameter to show
        multi-line comment-supported fields in the response.


        If you use the `comfort-fade` preview header, your response will show:


        *   For multi-line comments, values for `start_line`,
        `original_start_line`, `start_side`, `line`, `original_line`, and
        `side`.

        *   For single-line comments, values for `line`, `original_line`, and
        `side` and a `null` value for `start_line`, `original_start_line`, and
        `start_side`.


        If you don't use the `comfort-fade` preview header, multi-line and
        single-line comments will appear the same way in the response with a
        single `position` attribute. Your response will show:


        *   For multi-line comments, the last line of the comment range for the
        `position` attribute.

        *   For single-line comments, the diff-positioned way of referencing
        comments for the `position` attribute. For more information, see
        `position` in the [input
        parameters](https://developer.github.com/v3/pulls/comments/#parameters-2)
        table.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"body\": \"<string>\",\n    \"path\":
                \"<string>\",\n    \"commit_id\": \"<string>\",\n   
                \"position\": \"<integer>\",\n    \"side\": \"<string>\",\n   
                \"line\": \"<integer>\",\n    \"start_line\":
                \"<integer>\",\n    \"start_side\": \"<string>\",\n   
                \"in_reply_to\": \"<integer>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                pull_request_review_id: 42
                id: 10
                node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
                diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
                path: file1.txt
                position: 1
                original_position: 4
                commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
                in_reply_to_id: 8
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Great stuff!
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
                author_association: NONE
                _links:
                  self:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/1
                start_line: 1
                original_start_line: 1
                start_side: RIGHT
                line: 2
                original_line: 2
                side: RIGHT
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies:
    post:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > comments
      summary: Create a reply for a review comment
      description: >-
        Creates a reply to a review comment for a pull request. For the
        `comment_id`, provide the ID of the review comment you are replying to.
        This must be the ID of a _top-level review comment_, not a reply to that
        comment. Replies to replies are not supported.


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment_id parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                pull_request_review_id: 42
                id: 10
                node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
                diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
                path: file1.txt
                position: 1
                original_position: 4
                commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
                in_reply_to_id: 426899381
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Great stuff!
                created_at: '2011-04-14T16:00:49Z'
                updated_at: '2011-04-14T16:00:49Z'
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
                author_association: NONE
                _links:
                  self:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/1
                start_line: 1
                original_start_line: 1
                start_side: RIGHT
                line: 2
                original_line: 2
                side: RIGHT
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/pulls/{pull_number}/merge:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > merge
      summary: Check if a pull request has been merged
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > merge
      summary: Merge a pull request
      description: >-
        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"commit_title\": \"<string>\",\n    \"commit_message\":
                \"<string>\",\n    \"sha\": \"<string>\",\n    \"merge_method\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                merged: true
                message: Pull Request successfully merged
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '405':
          description: Method Not Allowed
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Pull Request is not mergeable
                documentation_url: >-
                  https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Head branch was modified. Review and try the merge again.
                documentation_url: >-
                  https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > requested reviewers
      summary: List requested reviewers for a pull request
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                users:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                teams:
                  - id: 1
                    node_id: MDQ6VGVhbTE=
                    url: https://api.github.com/teams/1
                    html_url: https://api.github.com/teams/justice-league
                    name: Justice League
                    slug: justice-league
                    description: A great team.
                    privacy: closed
                    permission: admin
                    members_url: https://api.github.com/teams/1/members{/member}
                    repositories_url: https://api.github.com/teams/1/repos
                    parent: null
    post:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > requested reviewers
      summary: Request reviewers for a pull request
      description: >-
        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"reviewers\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"team_reviewers\": [\n       
                \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                id: 1
                node_id: MDExOlB1bGxSZXF1ZXN0MQ==
                html_url: https://github.com/octocat/Hello-World/pull/1347
                diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                review_comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                review_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                number: 1347
                state: open
                locked: true
                title: Amazing new feature
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Please pull these awesome changes in!
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                active_lock_reason: too heated
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:01:12Z'
                closed_at: '2011-01-26T19:01:12Z'
                merged_at: '2011-01-26T19:01:12Z'
                merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  - login: hubot
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/hubot_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/hubot
                    html_url: https://github.com/hubot
                    followers_url: https://api.github.com/users/hubot/followers
                    following_url: https://api.github.com/users/hubot/following{/other_user}
                    gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                    starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/hubot/subscriptions
                    organizations_url: https://api.github.com/users/hubot/orgs
                    repos_url: https://api.github.com/users/hubot/repos
                    events_url: https://api.github.com/users/hubot/events{/privacy}
                    received_events_url: https://api.github.com/users/hubot/received_events
                    type: User
                    site_admin: true
                requested_reviewers:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  - login: hubot
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/hubot_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/hubot
                    html_url: https://github.com/hubot
                    followers_url: https://api.github.com/users/hubot/followers
                    following_url: https://api.github.com/users/hubot/following{/other_user}
                    gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                    starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/hubot/subscriptions
                    organizations_url: https://api.github.com/users/hubot/orgs
                    repos_url: https://api.github.com/users/hubot/repos
                    events_url: https://api.github.com/users/hubot/events{/privacy}
                    received_events_url: https://api.github.com/users/hubot/received_events
                    type: User
                    site_admin: true
                  - login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                requested_teams:
                  - id: 1
                    node_id: MDQ6VGVhbTE=
                    url: https://api.github.com/teams/1
                    html_url: https://api.github.com/teams/justice-league
                    name: Justice League
                    slug: justice-league
                    description: A great team.
                    privacy: closed
                    permission: admin
                    members_url: https://api.github.com/teams/1/members{/member}
                    repositories_url: https://api.github.com/teams/1/repos
                head:
                  label: octocat:new-topic
                  ref: new-topic
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  repo:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                base:
                  label: octocat:master
                  ref: master
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  repo:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://api.github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                _links:
                  self:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html:
                    href: https://github.com/octocat/Hello-World/pull/1347
                  issue:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347
                  comments:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  review_comments:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                  review_comment:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                  commits:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                  statuses:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                author_association: OWNER
                draft: false
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > requested reviewers
      summary: Remove requested reviewers from a pull request
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > reviews > {review id}
      summary: Get a review for a pull request
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: review_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) review_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 80
                node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Here is the body for the review.
                state: APPROVED
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
                _links:
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/12
                submitted_at: '2019-11-17T17:43:43Z'
                commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                author_association: collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > reviews > {review id}
      summary: Update a review for a pull request
      description: Update the review summary comment with new text.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: review_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) review_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 80
                node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: >-
                  This is close to perfect! Please address the suggested inline
                  change. And add more about this.
                state: CHANGES_REQUESTED
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
                _links:
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/12
                submitted_at: '2019-11-17T17:43:43Z'
                commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                author_association: collaborator
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
    delete:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > reviews > {review id}
      summary: Delete a pending review for a pull request
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: review_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) review_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 80
                node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: >-
                  This is close to perfect! Please address the suggested inline
                  change.
                state: CHANGES_REQUESTED
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
                _links:
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/12
                submitted_at: '2019-11-17T17:43:43Z'
                commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                author_association: collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > reviews > {review id}
      summary: List comments for a pull request review
      description: List comments for a specific pull request review.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: review_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) review_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                  pull_request_review_id: 42
                  id: 10
                  node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
                  diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
                  path: file1.txt
                  position: 1
                  original_position: 4
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
                  in_reply_to_id: 8
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Great stuff!
                  created_at: '2011-04-14T16:00:49Z'
                  updated_at: '2011-04-14T16:00:49Z'
                  html_url: >-
                    https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                  pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
                  author_association: NONE
                  _links:
                    self:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
                    html:
                      href: >-
                        https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
                    pull_request:
                      href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals:
    put:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > reviews > {review id}
      summary: Dismiss a review for a pull request
      description: >-
        **Note:** To dismiss a pull request review on a [protected
        branch](https://developer.github.com/v3/repos/branches/), you must be a
        repository administrator or be included in the list of people or teams
        who can dismiss pull request reviews.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"message\": \"<string>\",\n    \"event\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: review_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) review_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 80
                node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Here is the body for the review.
                state: DISMISSED
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
                _links:
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/12
                submitted_at: '2019-11-17T17:43:43Z'
                commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                author_association: collaborator
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events:
    post:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > reviews > {review id}
      summary: Submit a review for a pull request
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"event\": \"<string>\",\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: review_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) review_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 80
                node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Here is the body for the review.
                state: APPROVED
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
                _links:
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/12
                submitted_at: '2019-11-17T17:43:43Z'
                commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                author_association: collaborator
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > reviews
      summary: List reviews for a pull request
      description: The list of reviews returns in chronological order.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 80
                  node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Here is the body for the review.
                  state: APPROVED
                  html_url: >-
                    https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                  pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
                  _links:
                    html:
                      href: >-
                        https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                    pull_request:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/12
                  submitted_at: '2019-11-17T17:43:43Z'
                  commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                  author_association: collaborator
    post:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number} > reviews
      summary: Create a review for a pull request
      description: >-
        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.


        Pull request reviews created in the `PENDING` state do not include the
        `submitted_at` property in the response.


        **Note:** To comment on a specific line in a file, you need to first
        determine the _position_ of that line in the diff. The GitHub REST API
        v3 offers the `application/vnd.github.v3.diff` [media
        type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests).
        To see a pull request diff, add this media type to the `Accept` header
        of a call to the [single pull
        request](https://developer.github.com/v3/pulls/#get-a-pull-request)
        endpoint.


        The `position` value equals the number of lines down from the first "@@"
        hunk header in the file you want to add a comment. The line just below
        the "@@" line is position 1, the next line is position 2, and so on. The
        position in the diff continues to increase through lines of whitespace
        and additional hunks until the beginning of a new file.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"commit_id\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"event\": \"<string>\",\n    \"comments\":
                [\n        {\n            \"path\": \"<string>\",\n           
                \"body\": \"<string>\",\n            \"position\":
                \"<integer>\",\n            \"line\":
                \"<integer>\",\n            \"side\": \"<string>\",\n           
                \"start_line\": \"<integer>\",\n            \"start_side\":
                \"<string>\"\n        },\n        {\n            \"path\":
                \"<string>\",\n            \"body\": \"<string>\",\n           
                \"position\": \"<integer>\",\n            \"line\":
                \"<integer>\",\n            \"side\": \"<string>\",\n           
                \"start_line\": \"<integer>\",\n            \"start_side\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 80
                node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: >-
                  This is close to perfect! Please address the suggested inline
                  change.
                state: CHANGES_REQUESTED
                html_url: >-
                  https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
                _links:
                  html:
                    href: >-
                      https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
                  pull_request:
                    href: https://api.github.com/repos/octocat/Hello-World/pulls/12
                submitted_at: '2019-11-17T17:43:43Z'
                commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                author_association: collaborator
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /repos/{owner}/{repo}/pulls/{pull_number}:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number}
      summary: Get a pull request
      description: >-
        Draft pull requests are available in public repositories with GitHub
        Free and GitHub Free for organizations, GitHub Pro, and legacy
        per-repository billing plans, and in public and private repositories
        with GitHub Team and GitHub Enterprise Cloud. For more information, see
        [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists details of a pull request by providing its number.


        When you get,
        [create](https://developer.github.com/v3/pulls/#create-a-pull-request),
        or [edit](https://developer.github.com/v3/pulls/#update-a-pull-request)
        a pull request, GitHub creates a merge commit to test whether the pull
        request can be automatically merged into the base branch. This test
        commit is not added to the base branch or the head branch. You can
        review the status of the test commit using the `mergeable` key. For more
        information, see "[Checking mergeability of pull
        requests](https://developer.github.com/v3/git/#checking-mergeability-of-pull-requests)".


        The value of the `mergeable` attribute can be `true`, `false`, or
        `null`. If the value is `null`, then GitHub has started a background job
        to compute the mergeability. After giving the job time to complete,
        resubmit the request. When the job finishes, you will see a non-`null`
        value for the `mergeable` attribute in the response. If `mergeable` is
        `true`, then `merge_commit_sha` will be the SHA of the _test_ merge
        commit.


        The value of the `merge_commit_sha` attribute changes depending on the
        state of the pull request. Before merging a pull request, the
        `merge_commit_sha` attribute holds the SHA of the _test_ merge commit.
        After merging a pull request, the `merge_commit_sha` attribute changes
        depending on how you merged the pull request:


        *   If merged as a [merge
        commit](https://help.github.com/articles/about-merge-methods-on-github/),
        `merge_commit_sha` represents the SHA of the merge commit.

        *   If merged via a
        [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits),
        `merge_commit_sha` represents the SHA of the squashed commit on the base
        branch.

        *   If
        [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits),
        `merge_commit_sha` represents the commit that the base branch was
        updated to.


        Pass the appropriate [media
        type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests)
        to fetch diff and patch formats.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                id: 1
                node_id: MDExOlB1bGxSZXF1ZXN0MQ==
                html_url: https://github.com/octocat/Hello-World/pull/1347
                diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                review_comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                review_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                number: 1347
                state: open
                locked: true
                title: Amazing new feature
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Please pull these awesome changes in!
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                active_lock_reason: too heated
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:01:12Z'
                closed_at: '2011-01-26T19:01:12Z'
                merged_at: '2011-01-26T19:01:12Z'
                merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  - login: hubot
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/hubot_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/hubot
                    html_url: https://github.com/hubot
                    followers_url: https://api.github.com/users/hubot/followers
                    following_url: https://api.github.com/users/hubot/following{/other_user}
                    gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                    starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/hubot/subscriptions
                    organizations_url: https://api.github.com/users/hubot/orgs
                    repos_url: https://api.github.com/users/hubot/repos
                    events_url: https://api.github.com/users/hubot/events{/privacy}
                    received_events_url: https://api.github.com/users/hubot/received_events
                    type: User
                    site_admin: true
                requested_reviewers:
                  - login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                requested_teams:
                  - id: 1
                    node_id: MDQ6VGVhbTE=
                    url: https://api.github.com/teams/1
                    html_url: https://api.github.com/teams/justice-league
                    name: Justice League
                    slug: justice-league
                    description: A great team.
                    privacy: closed
                    permission: admin
                    members_url: https://api.github.com/teams/1/members{/member}
                    repositories_url: https://api.github.com/teams/1/repos
                head:
                  label: octocat:new-topic
                  ref: new-topic
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  repo:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    allow_merge_commit: true
                    forks: 123
                    open_issues: 123
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                    watchers: 123
                base:
                  label: octocat:master
                  ref: master
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  repo:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    allow_merge_commit: true
                    forks: 123
                    open_issues: 123
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                    watchers: 123
                _links:
                  self:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html:
                    href: https://github.com/octocat/Hello-World/pull/1347
                  issue:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347
                  comments:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  review_comments:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                  review_comment:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                  commits:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                  statuses:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                author_association: OWNER
                draft: false
                merged: false
                mergeable: true
                rebaseable: true
                mergeable_state: clean
                merged_by:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                comments: 10
                review_comments: 0
                maintainer_can_modify: true
                commits: 3
                additions: 100
                deletions: 3
                changed_files: 5
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number}
      summary: Update a pull request
      description: >-
        Draft pull requests are available in public repositories with GitHub
        Free and GitHub Free for organizations, GitHub Pro, and legacy
        per-repository billing plans, and in public and private repositories
        with GitHub Team and GitHub Enterprise Cloud. For more information, see
        [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        To open or update a pull request in a public repository, you must have
        write access to the head or the source branch. For organization-owned
        repositories, you must be a member of the organization that owns the
        repository to open or update a pull request.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"title\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"state\": \"<string>\",\n    \"base\":
                \"<string>\",\n    \"maintainer_can_modify\": \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                id: 1
                node_id: MDExOlB1bGxSZXF1ZXN0MQ==
                html_url: https://github.com/octocat/Hello-World/pull/1347
                diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                review_comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                review_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                number: 1347
                state: open
                locked: true
                title: Amazing new feature
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Please pull these awesome changes in!
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                active_lock_reason: too heated
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:01:12Z'
                closed_at: '2011-01-26T19:01:12Z'
                merged_at: '2011-01-26T19:01:12Z'
                merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  - login: hubot
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/hubot_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/hubot
                    html_url: https://github.com/hubot
                    followers_url: https://api.github.com/users/hubot/followers
                    following_url: https://api.github.com/users/hubot/following{/other_user}
                    gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                    starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/hubot/subscriptions
                    organizations_url: https://api.github.com/users/hubot/orgs
                    repos_url: https://api.github.com/users/hubot/repos
                    events_url: https://api.github.com/users/hubot/events{/privacy}
                    received_events_url: https://api.github.com/users/hubot/received_events
                    type: User
                    site_admin: true
                requested_reviewers:
                  - login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                requested_teams:
                  - id: 1
                    node_id: MDQ6VGVhbTE=
                    url: https://api.github.com/teams/1
                    html_url: https://api.github.com/teams/justice-league
                    name: Justice League
                    slug: justice-league
                    description: A great team.
                    privacy: closed
                    permission: admin
                    members_url: https://api.github.com/teams/1/members{/member}
                    repositories_url: https://api.github.com/teams/1/repos
                head:
                  label: octocat:new-topic
                  ref: new-topic
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  repo:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    allow_merge_commit: true
                    forks: 123
                    open_issues: 123
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                    watchers: 123
                base:
                  label: octocat:master
                  ref: master
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  repo:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    allow_merge_commit: true
                    forks: 123
                    open_issues: 123
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                    watchers: 123
                _links:
                  self:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html:
                    href: https://github.com/octocat/Hello-World/pull/1347
                  issue:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347
                  comments:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  review_comments:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                  review_comment:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                  commits:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                  statuses:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                author_association: OWNER
                draft: false
                merged: false
                mergeable: true
                rebaseable: true
                mergeable_state: clean
                merged_by:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                comments: 10
                review_comments: 0
                maintainer_can_modify: true
                commits: 3
                additions: 100
                deletions: 3
                changed_files: 5
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/pulls/{pull_number}/commits:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number}
      summary: List commits on a pull request
      description: >-
        Lists a maximum of 250 commits for a pull request. To receive a complete
        commit list for pull requests with more than 250 commits, use the [List
        commits](https://developer.github.com/v3/repos/commits/#list-commits)
        endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  tree_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  message: Fix all the bugs
                  timestamp: '2016-10-10T00:00:00Z'
                  author:
                    name: Monalisa Octocat
                    email: mona@github.com
                  committer:
                    name: Monalisa Octocat
                    email: mona@github.com
                - id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  tree_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  message: Fix all the bugs
                  timestamp: '2016-10-10T00:00:00Z'
                  author:
                    name: Monalisa Octocat
                    email: mona@github.com
                  committer:
                    name: Monalisa Octocat
                    email: mona@github.com
  /repos/{owner}/{repo}/pulls/{pull_number}/files:
    get:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number}
      summary: List pull requests files
      description: >-
        **Note:** Responses include a maximum of 3000 files. The paginated
        response returns 30 files per page by default.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - sha: bbcd538c8e72b8c175046e27cc8f907076331401
                  filename: file1.txt
                  status: added
                  additions: 103
                  deletions: 21
                  changes: 124
                  blob_url: >-
                    https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
                  raw_url: >-
                    https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
                  patch: >-
                    @@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module
                    Test
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/pulls/{pull_number}/update-branch:
    put:
      tags:
        - repos > {owner}/{repo} > pulls > {pull number}
      summary: Update a pull request branch
      description: >-
        Updates the pull request branch with the latest upstream changes by
        merging HEAD from the base branch into the pull request branch.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"expected_head_sha\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: pull_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Updating pull request branch.
                url: https://github.com/repos/octocat/Hello-World/pulls/53
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/pulls:
    get:
      tags:
        - repos > {owner}/{repo} > pulls
      summary: List pull requests
      description: >-
        Draft pull requests are available in public repositories with GitHub
        Free and GitHub Free for organizations, GitHub Pro, and legacy
        per-repository billing plans, and in public and private repositories
        with GitHub Team and GitHub Enterprise Cloud. For more information, see
        [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: Either `open`, `closed`, or `all` to filter by state.
          example: open
        - name: head
          in: query
          schema:
            type: string
          description: >-
            Filter pulls by head user or head organization and branch name in
            the format of `user:ref-name` or `organization:ref-name`. For
            example: `github:new-script-format` or `octocat:test-branch`.
          example: <string>
        - name: base
          in: query
          schema:
            type: string
          description: 'Filter pulls by base branch name. Example: `gh-pages`.'
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            What to sort results by. Can be either `created`, `updated`,
            `popularity` (comment count) or `long-running` (age, filtering by
            pulls updated in the last month).
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: >-
            The direction of the sort. Can be either `asc` or `desc`. Default:
            `desc` when sort is `created` or sort is not specified, otherwise
            `asc`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  id: 1
                  node_id: MDExOlB1bGxSZXF1ZXN0MQ==
                  html_url: https://github.com/octocat/Hello-World/pull/1347
                  diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                  patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                  issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                  review_comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                  review_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  number: 1347
                  state: open
                  locked: true
                  title: Amazing new feature
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Please pull these awesome changes in!
                  labels:
                    - id: 208045946
                      node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels/bug
                      name: bug
                      description: Something isn't working
                      color: f29513
                      default: true
                  milestone:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1
                    html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                    id: 1002604
                    node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                    number: 1
                    state: open
                    title: v1.0
                    description: Tracking milestone for version 1.0
                    creator:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    open_issues: 4
                    closed_issues: 8
                    created_at: '2011-04-10T20:09:31Z'
                    updated_at: '2014-03-03T18:58:10Z'
                    closed_at: '2013-02-12T13:22:01Z'
                    due_on: '2012-10-09T23:39:01Z'
                  active_lock_reason: too heated
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:01:12Z'
                  closed_at: '2011-01-26T19:01:12Z'
                  merged_at: '2011-01-26T19:01:12Z'
                  merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
                  assignee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  assignees:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    - login: hubot
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/hubot_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/hubot
                      html_url: https://github.com/hubot
                      followers_url: https://api.github.com/users/hubot/followers
                      following_url: >-
                        https://api.github.com/users/hubot/following{/other_user}
                      gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/hubot/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/hubot/subscriptions
                      organizations_url: https://api.github.com/users/hubot/orgs
                      repos_url: https://api.github.com/users/hubot/repos
                      events_url: https://api.github.com/users/hubot/events{/privacy}
                      received_events_url: https://api.github.com/users/hubot/received_events
                      type: User
                      site_admin: true
                  requested_reviewers:
                    - login: other_user
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/other_user_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/other_user
                      html_url: https://github.com/other_user
                      followers_url: https://api.github.com/users/other_user/followers
                      following_url: >-
                        https://api.github.com/users/other_user/following{/other_user}
                      gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/other_user/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/other_user/subscriptions
                      organizations_url: https://api.github.com/users/other_user/orgs
                      repos_url: https://api.github.com/users/other_user/repos
                      events_url: https://api.github.com/users/other_user/events{/privacy}
                      received_events_url: https://api.github.com/users/other_user/received_events
                      type: User
                      site_admin: false
                  requested_teams:
                    - id: 1
                      node_id: MDQ6VGVhbTE=
                      url: https://api.github.com/teams/1
                      html_url: https://api.github.com/teams/justice-league
                      name: Justice League
                      slug: justice-league
                      description: A great team.
                      privacy: closed
                      permission: admin
                      members_url: https://api.github.com/teams/1/members{/member}
                      repositories_url: https://api.github.com/teams/1/repos
                  head:
                    label: octocat:new-topic
                    ref: new-topic
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                    user:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    repo:
                      id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      clone_url: https://github.com/octocat/Hello-World.git
                      mirror_url: git:git.example.com/octocat/Hello-World
                      hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                      svn_url: https://svn.github.com/octocat/Hello-World
                      homepage: https://github.com
                      language: null
                      forks_count: 9
                      stargazers_count: 80
                      watchers_count: 80
                      size: 108
                      default_branch: master
                      open_issues_count: 0
                      is_template: true
                      topics:
                        - octocat
                        - atom
                        - electron
                        - api
                      has_issues: true
                      has_projects: true
                      has_wiki: true
                      has_pages: false
                      has_downloads: true
                      archived: false
                      disabled: false
                      visibility: public
                      pushed_at: '2011-01-26T19:06:43Z'
                      created_at: '2011-01-26T19:01:12Z'
                      updated_at: '2011-01-26T19:14:43Z'
                      permissions:
                        admin: false
                        push: false
                        pull: true
                      allow_rebase_merge: true
                      template_repository: null
                      temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                      allow_squash_merge: true
                      delete_branch_on_merge: true
                      allow_merge_commit: true
                      subscribers_count: 42
                      network_count: 0
                      license:
                        key: mit
                        name: MIT License
                        url: https://api.github.com/licenses/mit
                        spdx_id: MIT
                        node_id: MDc6TGljZW5zZW1pdA==
                        html_url: https://github.com/licenses/mit
                      forks: 1
                      open_issues: 1
                      watchers: 1
                  base:
                    label: octocat:master
                    ref: master
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                    user:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    repo:
                      id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      clone_url: https://github.com/octocat/Hello-World.git
                      mirror_url: git:git.example.com/octocat/Hello-World
                      hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                      svn_url: https://svn.github.com/octocat/Hello-World
                      homepage: https://github.com
                      language: null
                      forks_count: 9
                      stargazers_count: 80
                      watchers_count: 80
                      size: 108
                      default_branch: master
                      open_issues_count: 0
                      is_template: true
                      topics:
                        - octocat
                        - atom
                        - electron
                        - api
                      has_issues: true
                      has_projects: true
                      has_wiki: true
                      has_pages: false
                      has_downloads: true
                      archived: false
                      disabled: false
                      visibility: public
                      pushed_at: '2011-01-26T19:06:43Z'
                      created_at: '2011-01-26T19:01:12Z'
                      updated_at: '2011-01-26T19:14:43Z'
                      permissions:
                        admin: false
                        push: false
                        pull: true
                      allow_rebase_merge: true
                      template_repository: null
                      temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                      allow_squash_merge: true
                      delete_branch_on_merge: true
                      allow_merge_commit: true
                      subscribers_count: 42
                      network_count: 0
                      license:
                        key: mit
                        name: MIT License
                        url: https://api.github.com/licenses/mit
                        spdx_id: MIT
                        node_id: MDc6TGljZW5zZW1pdA==
                        html_url: https://github.com/licenses/mit
                      forks: 1
                      open_issues: 1
                      watchers: 1
                  _links:
                    self:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/1347
                    html:
                      href: https://github.com/octocat/Hello-World/pull/1347
                    issue:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                    comments:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                    review_comments:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                    review_comment:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                    commits:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                    statuses:
                      href: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  author_association: OWNER
                  draft: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    post:
      tags:
        - repos > {owner}/{repo} > pulls
      summary: Create a pull request
      description: >-
        Draft pull requests are available in public repositories with GitHub
        Free and GitHub Free for organizations, GitHub Pro, and legacy
        per-repository billing plans, and in public and private repositories
        with GitHub Team and GitHub Enterprise Cloud. For more information, see
        [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        To open or update a pull request in a public repository, you must have
        write access to the head or the source branch. For organization-owned
        repositories, you must be a member of the organization that owns the
        repository to open or update a pull request.


        You can create a new pull request.


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"head\": \"<string>\",\n    \"base\":
                \"<string>\",\n    \"title\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"maintainer_can_modify\":
                \"<boolean>\",\n    \"draft\": \"<boolean>\",\n    \"issue\":
                \"<integer>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
                id: 1
                node_id: MDExOlB1bGxSZXF1ZXN0MQ==
                html_url: https://github.com/octocat/Hello-World/pull/1347
                diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                review_comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                review_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                number: 1347
                state: open
                locked: true
                title: Amazing new feature
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Please pull these awesome changes in!
                labels:
                  - id: 208045946
                    node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels/bug
                    name: bug
                    description: Something isn't working
                    color: f29513
                    default: true
                milestone:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1
                  html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                  id: 1002604
                  node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                  number: 1
                  state: open
                  title: v1.0
                  description: Tracking milestone for version 1.0
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  open_issues: 4
                  closed_issues: 8
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
                  closed_at: '2013-02-12T13:22:01Z'
                  due_on: '2012-10-09T23:39:01Z'
                active_lock_reason: too heated
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:01:12Z'
                closed_at: '2011-01-26T19:01:12Z'
                merged_at: '2011-01-26T19:01:12Z'
                merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
                assignee:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assignees:
                  - login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  - login: hubot
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/hubot_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/hubot
                    html_url: https://github.com/hubot
                    followers_url: https://api.github.com/users/hubot/followers
                    following_url: https://api.github.com/users/hubot/following{/other_user}
                    gists_url: https://api.github.com/users/hubot/gists{/gist_id}
                    starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/hubot/subscriptions
                    organizations_url: https://api.github.com/users/hubot/orgs
                    repos_url: https://api.github.com/users/hubot/repos
                    events_url: https://api.github.com/users/hubot/events{/privacy}
                    received_events_url: https://api.github.com/users/hubot/received_events
                    type: User
                    site_admin: true
                requested_reviewers:
                  - login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                requested_teams:
                  - id: 1
                    node_id: MDQ6VGVhbTE=
                    url: https://api.github.com/teams/1
                    html_url: https://api.github.com/teams/justice-league
                    name: Justice League
                    slug: justice-league
                    description: A great team.
                    privacy: closed
                    permission: admin
                    members_url: https://api.github.com/teams/1/members{/member}
                    repositories_url: https://api.github.com/teams/1/repos
                head:
                  label: octocat:new-topic
                  ref: new-topic
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  repo:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    allow_merge_commit: true
                    forks: 123
                    open_issues: 123
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                    watchers: 123
                base:
                  label: octocat:master
                  ref: master
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  repo:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    allow_merge_commit: true
                    forks: 123
                    open_issues: 123
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                    watchers: 123
                _links:
                  self:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                  html:
                    href: https://github.com/octocat/Hello-World/pull/1347
                  issue:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347
                  comments:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  review_comments:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
                  review_comment:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
                  commits:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
                  statuses:
                    href: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                author_association: OWNER
                draft: false
                merged: false
                mergeable: true
                rebaseable: true
                mergeable_state: clean
                merged_by:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                comments: 10
                review_comments: 0
                maintainer_can_modify: true
                commits: 3
                additions: 100
                deletions: 3
                changed_files: 5
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/releases/assets/{asset_id}:
    get:
      tags:
        - repos > {owner}/{repo} > releases > assets/{asset id}
      summary: Get a release asset
      description: >-
        To download the asset's binary content, set the `Accept` header of the
        request to
        [`application/octet-stream`](https://developer.github.com/v3/media/#media-types).
        The API will either redirect the client to the location, or stream it
        directly if possible. API clients should handle both a `200` or `302`
        response.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: asset_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) asset_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                browser_download_url: >-
                  https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                id: 1
                node_id: MDEyOlJlbGVhc2VBc3NldDE=
                name: example.zip
                label: short description
                state: uploaded
                content_type: application/zip
                size: 1024
                download_count: 42
                created_at: '2013-02-27T19:35:32Z'
                updated_at: '2013-02-27T19:35:32Z'
                uploader:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '302':
          description: Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
    patch:
      tags:
        - repos > {owner}/{repo} > releases > assets/{asset id}
      summary: Update a release asset
      description: Users with push access to the repository can edit a release asset.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"label\":
                \"<string>\",\n    \"state\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: asset_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) asset_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                browser_download_url: >-
                  https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                id: 1
                node_id: MDEyOlJlbGVhc2VBc3NldDE=
                name: example.zip
                label: short description
                state: uploaded
                content_type: application/zip
                size: 1024
                download_count: 42
                created_at: '2013-02-27T19:35:32Z'
                updated_at: '2013-02-27T19:35:32Z'
                uploader:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
    delete:
      tags:
        - repos > {owner}/{repo} > releases > assets/{asset id}
      summary: Delete a release asset
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: asset_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) asset_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/releases/{release_id}/assets:
    get:
      tags:
        - repos > {owner}/{repo} > releases > {release id} > assets
      summary: List release assets
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: release_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) release_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                  browser_download_url: >-
                    https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                  id: 1
                  node_id: MDEyOlJlbGVhc2VBc3NldDE=
                  name: example.zip
                  label: short description
                  state: uploaded
                  content_type: application/zip
                  size: 1024
                  download_count: 42
                  created_at: '2013-02-27T19:35:32Z'
                  updated_at: '2013-02-27T19:35:32Z'
                  uploader:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
    post:
      tags:
        - repos > {owner}/{repo} > releases > {release id} > assets
      summary: Upload a release asset
      description: >-
        This endpoint makes use of [a Hypermedia
        relation](https://developer.github.com/v3/#hypermedia) to determine
        which URL to access. The endpoint you call to upload release assets is
        specific to your release. Use the `upload_url` returned in

        the response of the [Create a release
        endpoint](https://developer.github.com/v3/repos/releases/#create-a-release)
        to upload a release asset.


        You need to use an HTTP client which supports
        [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls
        to this endpoint.


        Most libraries will set the required `Content-Length` header
        automatically. Use the required `Content-Type` header to provide the
        media type of the asset. For a list of media types, see [Media
        Types](https://www.iana.org/assignments/media-types/media-types.xhtml).
        For example: 


        `application/zip`


        GitHub expects the asset data in its raw binary form, rather than JSON.
        You will send the raw binary content of the asset as the request body.
        Everything else about the endpoint is the same as the rest of the API.
        For example,

        you'll still need to pass your authentication to be able to upload an
        asset.


        When an upstream failure occurs, you will receive a `502 Bad Gateway`
        status. This may leave an empty asset with a state of `starter`. It can
        be safely deleted.


        **Notes:**

        *   GitHub renames asset filenames that have special characters,
        non-alphanumeric characters, and leading or trailing periods. The "[List
        assets for a
        release](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release)"

        endpoint lists the renamed filenames. For more information and help,
        contact [GitHub Support](https://github.com/contact).

        *   If you upload an asset with the same filename as another uploaded
        asset, you'll receive an error and must delete the old file before you
        can re-upload the new asset.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"\"<string>\""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: '*/*'
        - name: name
          in: query
          schema:
            type: string
          description: name parameter
          example: <string>
        - name: label
          in: query
          schema:
            type: string
          description: label parameter
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: release_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) release_id parameter
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                browser_download_url: >-
                  https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                id: 1
                node_id: MDEyOlJlbGVhc2VBc3NldDE=
                name: example.zip
                label: short description
                state: uploaded
                content_type: application/zip
                size: 1024
                download_count: 42
                created_at: '2013-02-27T19:35:32Z'
                updated_at: '2013-02-27T19:35:32Z'
                uploader:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
  /repos/{owner}/{repo}/releases/{release_id}:
    get:
      tags:
        - repos > {owner}/{repo} > releases > {release id}
      summary: Get a release
      description: >-
        **Note:** This returns an `upload_url` key corresponding to the endpoint
        for uploading release assets. This key is a [hypermedia
        resource](https://developer.github.com/v3/#hypermedia).
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: release_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) release_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/releases/1
                html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
                assets_url: >-
                  https://api.github.com/repos/octocat/Hello-World/releases/1/assets
                upload_url: >-
                  https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
                tarball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
                zipball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
                id: 1
                node_id: MDc6UmVsZWFzZTE=
                tag_name: v1.0.0
                target_commitish: master
                name: v1.0.0
                body: Description of the release
                draft: false
                prerelease: false
                created_at: '2013-02-27T19:35:32Z'
                published_at: '2013-02-27T19:35:32Z'
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assets:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                    browser_download_url: >-
                      https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                    id: 1
                    node_id: MDEyOlJlbGVhc2VBc3NldDE=
                    name: example.zip
                    label: short description
                    state: uploaded
                    content_type: application/zip
                    size: 1024
                    download_count: 42
                    created_at: '2013-02-27T19:35:32Z'
                    updated_at: '2013-02-27T19:35:32Z'
                    uploader:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo} > releases > {release id}
      summary: Update a release
      description: Users with push access to the repository can edit a release.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"tag_name\": \"<string>\",\n    \"target_commitish\":
                \"<string>\",\n    \"name\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"draft\": \"<boolean>\",\n   
                \"prerelease\": \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: release_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) release_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/releases/1
                html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
                assets_url: >-
                  https://api.github.com/repos/octocat/Hello-World/releases/1/assets
                upload_url: >-
                  https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
                tarball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
                zipball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
                id: 1
                node_id: MDc6UmVsZWFzZTE=
                tag_name: v1.0.0
                target_commitish: master
                name: v1.0.0
                body: Description of the release
                draft: false
                prerelease: false
                created_at: '2013-02-27T19:35:32Z'
                published_at: '2013-02-27T19:35:32Z'
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assets:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                    browser_download_url: >-
                      https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                    id: 1
                    node_id: MDEyOlJlbGVhc2VBc3NldDE=
                    name: example.zip
                    label: short description
                    state: uploaded
                    content_type: application/zip
                    size: 1024
                    download_count: 42
                    created_at: '2013-02-27T19:35:32Z'
                    updated_at: '2013-02-27T19:35:32Z'
                    uploader:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
    delete:
      tags:
        - repos > {owner}/{repo} > releases > {release id}
      summary: Delete a release
      description: Users with push access to the repository can delete a release.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: release_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) release_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/releases:
    get:
      tags:
        - repos > {owner}/{repo} > releases
      summary: List releases
      description: >-
        This returns a list of releases, which does not include regular Git tags
        that have not been associated with a release. To get a list of Git tags,
        use the [Repository Tags
        API](https://developer.github.com/v3/repos/#list-repository-tags).


        Information about published releases are available to everyone. Only
        users with push access will receive listings for draft releases.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/repos/octocat/Hello-World/releases/1
                  html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
                  assets_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases/1/assets
                  upload_url: >-
                    https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
                  tarball_url: >-
                    https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
                  zipball_url: >-
                    https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
                  id: 1
                  node_id: MDc6UmVsZWFzZTE=
                  tag_name: v1.0.0
                  target_commitish: master
                  name: v1.0.0
                  body: Description of the release
                  draft: false
                  prerelease: false
                  created_at: '2013-02-27T19:35:32Z'
                  published_at: '2013-02-27T19:35:32Z'
                  author:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  assets:
                    - url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                      browser_download_url: >-
                        https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                      id: 1
                      node_id: MDEyOlJlbGVhc2VBc3NldDE=
                      name: example.zip
                      label: short description
                      state: uploaded
                      content_type: application/zip
                      size: 1024
                      download_count: 42
                      created_at: '2013-02-27T19:35:32Z'
                      updated_at: '2013-02-27T19:35:32Z'
                      uploader:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - repos > {owner}/{repo} > releases
      summary: Create a release
      description: >-
        Users with push access to the repository can create a release.


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"tag_name\": \"<string>\",\n    \"target_commitish\":
                \"<string>\",\n    \"name\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"draft\": false,\n    \"prerelease\":
                false\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/releases/1
                html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
                assets_url: >-
                  https://api.github.com/repos/octocat/Hello-World/releases/1/assets
                upload_url: >-
                  https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
                tarball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
                zipball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
                id: 1
                node_id: MDc6UmVsZWFzZTE=
                tag_name: v1.0.0
                target_commitish: master
                name: v1.0.0
                body: Description of the release
                draft: false
                prerelease: false
                created_at: '2013-02-27T19:35:32Z'
                published_at: '2013-02-27T19:35:32Z'
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assets:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                    browser_download_url: >-
                      https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                    id: 1
                    node_id: MDEyOlJlbGVhc2VBc3NldDE=
                    name: example.zip
                    label: short description
                    state: uploaded
                    content_type: application/zip
                    size: 1024
                    download_count: 42
                    created_at: '2013-02-27T19:35:32Z'
                    updated_at: '2013-02-27T19:35:32Z'
                    uploader:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/releases/latest:
    get:
      tags:
        - repos > {owner}/{repo} > releases
      summary: Get the latest release
      description: >-
        View the latest published full release for the repository.


        The latest release is the most recent non-prerelease, non-draft release,
        sorted by the `created_at` attribute. The `created_at` attribute is the
        date of the commit used for the release, and not the date when the
        release was drafted or published.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/releases/1
                html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
                assets_url: >-
                  https://api.github.com/repos/octocat/Hello-World/releases/1/assets
                upload_url: >-
                  https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
                tarball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
                zipball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
                id: 1
                node_id: MDc6UmVsZWFzZTE=
                tag_name: v1.0.0
                target_commitish: master
                name: v1.0.0
                body: Description of the release
                draft: false
                prerelease: false
                created_at: '2013-02-27T19:35:32Z'
                published_at: '2013-02-27T19:35:32Z'
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assets:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                    browser_download_url: >-
                      https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                    id: 1
                    node_id: MDEyOlJlbGVhc2VBc3NldDE=
                    name: example.zip
                    label: short description
                    state: uploaded
                    content_type: application/zip
                    size: 1024
                    download_count: 42
                    created_at: '2013-02-27T19:35:32Z'
                    updated_at: '2013-02-27T19:35:32Z'
                    uploader:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
  /repos/{owner}/{repo}/releases/tags/{tag}:
    get:
      tags:
        - repos > {owner}/{repo} > releases
      summary: Get a release by tag name
      description: Get a published release with the specified tag.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: tag
          in: path
          schema:
            type: string
          required: true
          description: (Required) tag+ parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/repos/octocat/Hello-World/releases/1
                html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
                assets_url: >-
                  https://api.github.com/repos/octocat/Hello-World/releases/1/assets
                upload_url: >-
                  https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
                tarball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
                zipball_url: >-
                  https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
                id: 1
                node_id: MDc6UmVsZWFzZTE=
                tag_name: v1.0.0
                target_commitish: master
                name: v1.0.0
                body: Description of the release
                draft: false
                prerelease: false
                created_at: '2013-02-27T19:35:32Z'
                published_at: '2013-02-27T19:35:32Z'
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                assets:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases/assets/1
                    browser_download_url: >-
                      https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
                    id: 1
                    node_id: MDEyOlJlbGVhc2VBc3NldDE=
                    name: example.zip
                    label: short description
                    state: uploaded
                    content_type: application/zip
                    size: 1024
                    download_count: 42
                    created_at: '2013-02-27T19:35:32Z'
                    updated_at: '2013-02-27T19:35:32Z'
                    uploader:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/stats/code_frequency:
    get:
      tags:
        - repos > {owner}/{repo} > stats
      summary: Get the weekly commit activity
      description: >-
        Returns a weekly aggregate of the number of additions and deletions
        pushed to a repository.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - - 1302998400
                  - 1124
                  - -435
  /repos/{owner}/{repo}/stats/commit_activity:
    get:
      tags:
        - repos > {owner}/{repo} > stats
      summary: Get the last year of commit activity
      description: >-
        Returns the last year of commit activity grouped by week. The `days`
        array is a group of commits per day, starting on `Sunday`.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - days:
                    - 0
                    - 3
                    - 26
                    - 20
                    - 39
                    - 1
                    - 0
                  total: 89
                  week: 1336280400
  /repos/{owner}/{repo}/stats/contributors:
    get:
      tags:
        - repos > {owner}/{repo} > stats
      summary: Get all contributor commit activity
      description: >-

        Returns the `total` number of commits authored by the contributor. In
        addition, the response includes a Weekly Hash (`weeks` array) with the
        following information:


        *   `w` - Start of the week, given as a [Unix
        timestamp](http://en.wikipedia.org/wiki/Unix_time).

        *   `a` - Number of additions

        *   `d` - Number of deletions

        *   `c` - Number of commits
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - author:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  total: 135
                  weeks:
                    - w: '1367712000'
                      a: 6898
                      d: 77
                      c: 10
  /repos/{owner}/{repo}/stats/participation:
    get:
      tags:
        - repos > {owner}/{repo} > stats
      summary: Get the weekly commit count
      description: >-
        Returns the total commit counts for the `owner` and total commit counts
        in `all`. `all` is everyone combined, including the `owner` in the last
        52 weeks. If you'd like to get the commit counts for non-owners, you can
        subtract `owner` from `all`.


        The array order is oldest week (index 0) to most recent week.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                all:
                  - 11
                  - 21
                  - 15
                  - 2
                  - 8
                  - 1
                  - 8
                  - 23
                  - 17
                  - 21
                  - 11
                  - 10
                  - 33
                  - 91
                  - 38
                  - 34
                  - 22
                  - 23
                  - 32
                  - 3
                  - 43
                  - 87
                  - 71
                  - 18
                  - 13
                  - 5
                  - 13
                  - 16
                  - 66
                  - 27
                  - 12
                  - 45
                  - 110
                  - 117
                  - 13
                  - 8
                  - 18
                  - 9
                  - 19
                  - 26
                  - 39
                  - 12
                  - 20
                  - 31
                  - 46
                  - 91
                  - 45
                  - 10
                  - 24
                  - 9
                  - 29
                  - 7
                owner:
                  - 3
                  - 2
                  - 3
                  - 0
                  - 2
                  - 0
                  - 5
                  - 14
                  - 7
                  - 9
                  - 1
                  - 5
                  - 0
                  - 48
                  - 19
                  - 2
                  - 0
                  - 1
                  - 10
                  - 2
                  - 23
                  - 40
                  - 35
                  - 8
                  - 8
                  - 2
                  - 10
                  - 6
                  - 30
                  - 0
                  - 2
                  - 9
                  - 53
                  - 104
                  - 3
                  - 3
                  - 10
                  - 4
                  - 7
                  - 11
                  - 21
                  - 4
                  - 4
                  - 22
                  - 26
                  - 63
                  - 11
                  - 2
                  - 14
                  - 1
                  - 10
                  - 3
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/stats/punch_card:
    get:
      tags:
        - repos > {owner}/{repo} > stats
      summary: Get the hourly commit count for each day
      description: >-
        Each array contains the day number, hour number, and number of commits:


        *   `0-6`: Sunday - Saturday

        *   `0-23`: Hour of day

        *   Number of commits


        For example, `[2, 14, 25]` indicates that there were 25 total commits,
        during the 2:00pm hour on Tuesdays. All times are based on the time zone
        of individual commits.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - - 0
                  - 0
                  - 5
                - - 0
                  - 1
                  - 43
                - - 0
                  - 2
                  - 21
  /repos/{owner}/{repo}/subscription:
    get:
      tags:
        - repos > {owner}/{repo} > subscription
      summary: Get a repository subscription
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                subscribed: true
                ignored: false
                reason: null
                created_at: '2012-10-06T21:34:12Z'
                url: https://api.github.com/repos/octocat/example/subscription
                repository_url: https://api.github.com/repos/octocat/example
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - repos > {owner}/{repo} > subscription
      summary: Set a repository subscription
      description: >-
        If you would like to watch a repository, set `subscribed` to `true`. If
        you would like to ignore notifications made within a repository, set
        `ignored` to `true`. If you would like to stop watching a repository,
        [delete the repository's
        subscription](https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription)
        completely.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"subscribed\": \"<boolean>\",\n    \"ignored\":
                \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                subscribed: true
                ignored: false
                reason: null
                created_at: '2012-10-06T21:34:12Z'
                url: https://api.github.com/repos/octocat/example/subscription
                repository_url: https://api.github.com/repos/octocat/example
    delete:
      tags:
        - repos > {owner}/{repo} > subscription
      summary: Delete a repository subscription
      description: >-
        This endpoint should only be used to stop watching a repository. To
        control whether or not you wish to receive notifications from a
        repository, [set the repository's subscription
        manually](https://developer.github.com/v3/activity/watching/#set-a-repository-subscription).
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/topics:
    get:
      tags:
        - repos > {owner}/{repo} > topics
      summary: Get all repository topics
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                names:
                  - octocat
                  - atom
                  - electron
                  - api
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
    put:
      tags:
        - repos > {owner}/{repo} > topics
      summary: Replace all repository topics
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"names\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                names:
                  - octocat
                  - atom
                  - electron
                  - api
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /repos/{owner}/{repo}/traffic/popular/paths:
    get:
      tags:
        - repos > {owner}/{repo} > traffic > popular
      summary: Get top referral paths
      description: Get the top 10 popular contents over the last 14 days.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - path: /github/hubot
                  title: 'github/hubot: A customizable life embetterment robot.'
                  count: 3542
                  uniques: 2225
                - path: /github/hubot/blob/master/docs/scripting.md
                  title: hubot/scripting.md at master · github/hubot · GitHub
                  count: 1707
                  uniques: 804
                - path: /github/hubot/tree/master/docs
                  title: hubot/docs at master · github/hubot · GitHub
                  count: 685
                  uniques: 435
                - path: /github/hubot/tree/master/src
                  title: hubot/src at master · github/hubot · GitHub
                  count: 577
                  uniques: 347
                - path: /github/hubot/blob/master/docs/index.md
                  title: hubot/index.md at master · github/hubot · GitHub
                  count: 379
                  uniques: 259
                - path: /github/hubot/blob/master/docs/adapters.md
                  title: hubot/adapters.md at master · github/hubot · GitHub
                  count: 354
                  uniques: 201
                - path: /github/hubot/tree/master/examples
                  title: hubot/examples at master · github/hubot · GitHub
                  count: 340
                  uniques: 260
                - path: /github/hubot/blob/master/docs/deploying/heroku.md
                  title: hubot/heroku.md at master · github/hubot · GitHub
                  count: 324
                  uniques: 217
                - path: /github/hubot/blob/master/src/robot.coffee
                  title: hubot/robot.coffee at master · github/hubot · GitHub
                  count: 293
                  uniques: 191
                - path: /github/hubot/blob/master/LICENSE.md
                  title: hubot/LICENSE.md at master · github/hubot · GitHub
                  count: 281
                  uniques: 222
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/traffic/popular/referrers:
    get:
      tags:
        - repos > {owner}/{repo} > traffic > popular
      summary: Get top referral sources
      description: Get the top 10 referrers over the last 14 days.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - referrer: Google
                  count: 4
                  uniques: 3
                - referrer: stackoverflow.com
                  count: 2
                  uniques: 2
                - referrer: eggsonbread.com
                  count: 1
                  uniques: 1
                - referrer: yandex.ru
                  count: 1
                  uniques: 1
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/traffic/clones:
    get:
      tags:
        - repos > {owner}/{repo} > traffic
      summary: Get repository clones
      description: >-
        Get the total number of clones and breakdown per day or week for the
        last 14 days. Timestamps are aligned to UTC midnight of the beginning of
        the day or week. Week begins on Monday.
      parameters:
        - name: per
          in: query
          schema:
            type: string
          description: 'Must be one of: `day`, `week`.'
          example: day
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                count: 173
                uniques: 128
                clones:
                  - timestamp: '2016-10-10T00:00:00Z'
                    count: 2
                    uniques: 1
                  - timestamp: '2016-10-11T00:00:00Z'
                    count: 17
                    uniques: 16
                  - timestamp: '2016-10-12T00:00:00Z'
                    count: 21
                    uniques: 15
                  - timestamp: '2016-10-13T00:00:00Z'
                    count: 8
                    uniques: 7
                  - timestamp: '2016-10-14T00:00:00Z'
                    count: 5
                    uniques: 5
                  - timestamp: '2016-10-15T00:00:00Z'
                    count: 2
                    uniques: 2
                  - timestamp: '2016-10-16T00:00:00Z'
                    count: 8
                    uniques: 7
                  - timestamp: '2016-10-17T00:00:00Z'
                    count: 26
                    uniques: 15
                  - timestamp: '2016-10-18T00:00:00Z'
                    count: 19
                    uniques: 17
                  - timestamp: '2016-10-19T00:00:00Z'
                    count: 19
                    uniques: 14
                  - timestamp: '2016-10-20T00:00:00Z'
                    count: 19
                    uniques: 15
                  - timestamp: '2016-10-21T00:00:00Z'
                    count: 9
                    uniques: 7
                  - timestamp: '2016-10-22T00:00:00Z'
                    count: 5
                    uniques: 5
                  - timestamp: '2016-10-23T00:00:00Z'
                    count: 6
                    uniques: 5
                  - timestamp: '2016-10-24T00:00:00Z'
                    count: 7
                    uniques: 5
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/traffic/views:
    get:
      tags:
        - repos > {owner}/{repo} > traffic
      summary: Get page views
      description: >-
        Get the total number of views and breakdown per day or week for the last
        14 days. Timestamps are aligned to UTC midnight of the beginning of the
        day or week. Week begins on Monday.
      parameters:
        - name: per
          in: query
          schema:
            type: string
          description: 'Must be one of: `day`, `week`.'
          example: day
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                count: 14850
                uniques: 3782
                views:
                  - timestamp: '2016-10-10T00:00:00Z'
                    count: 440
                    uniques: 143
                  - timestamp: '2016-10-11T00:00:00Z'
                    count: 1308
                    uniques: 414
                  - timestamp: '2016-10-12T00:00:00Z'
                    count: 1486
                    uniques: 452
                  - timestamp: '2016-10-13T00:00:00Z'
                    count: 1170
                    uniques: 401
                  - timestamp: '2016-10-14T00:00:00Z'
                    count: 868
                    uniques: 266
                  - timestamp: '2016-10-15T00:00:00Z'
                    count: 495
                    uniques: 157
                  - timestamp: '2016-10-16T00:00:00Z'
                    count: 524
                    uniques: 175
                  - timestamp: '2016-10-17T00:00:00Z'
                    count: 1263
                    uniques: 412
                  - timestamp: '2016-10-18T00:00:00Z'
                    count: 1402
                    uniques: 417
                  - timestamp: '2016-10-19T00:00:00Z'
                    count: 1394
                    uniques: 424
                  - timestamp: '2016-10-20T00:00:00Z'
                    count: 1492
                    uniques: 448
                  - timestamp: '2016-10-21T00:00:00Z'
                    count: 1153
                    uniques: 332
                  - timestamp: '2016-10-22T00:00:00Z'
                    count: 566
                    uniques: 168
                  - timestamp: '2016-10-23T00:00:00Z'
                    count: 675
                    uniques: 184
                  - timestamp: '2016-10-24T00:00:00Z'
                    count: 614
                    uniques: 237
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/vulnerability-alerts:
    get:
      tags:
        - repos > {owner}/{repo} > vulnerability-alerts
      summary: Check if vulnerability alerts are enabled for a repository
      description: >-
        Shows whether dependency alerts are enabled or disabled for a
        repository. The authenticated user must have admin access to the
        repository. For more information, see "[About security alerts for
        vulnerable
        dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)".
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - repos > {owner}/{repo} > vulnerability-alerts
      summary: Enable vulnerability alerts
      description: >-
        Enables dependency alerts and the dependency graph for a repository. The
        authenticated user must have admin access to the repository. For more
        information, see "[About security alerts for vulnerable
        dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)".
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - repos > {owner}/{repo} > vulnerability-alerts
      summary: Disable vulnerability alerts
      description: >-
        Disables dependency alerts and the dependency graph for a repository.
        The authenticated user must have admin access to the repository. For
        more information, see "[About security alerts for vulnerable
        dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)".
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: Get a repository
      description: >-
        When you pass the `scarlet-witch-preview` media type, requests to get a
        repository will also return the repository's code of conduct if it can
        be detected from the repository's code of conduct file.


        The `parent` and `source` objects are present when the repository is a
        fork. `parent` is the repository this repository was forked from,
        `source` is the ultimate source for the network.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                language: null
                forks_count: 9
                forks: 9
                stargazers_count: 80
                watchers_count: 80
                watchers: 80
                size: 108
                default_branch: master
                open_issues_count: 0
                open_issues: 0
                is_template: true
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  pull: true
                  push: false
                  admin: false
                allow_rebase_merge: true
                template_repository: null
                temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                allow_squash_merge: true
                delete_branch_on_merge: true
                allow_merge_commit: true
                subscribers_count: 42
                network_count: 0
                license:
                  key: mit
                  name: MIT License
                  spdx_id: MIT
                  url: https://api.github.com/licenses/mit
                  node_id: MDc6TGljZW5zZW1pdA==
                organization:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: Organization
                  site_admin: false
                parent:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  allow_rebase_merge: true
                  template_repository: null
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  allow_squash_merge: true
                  delete_branch_on_merge: true
                  allow_merge_commit: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    url: https://api.github.com/licenses/mit
                    spdx_id: MIT
                    node_id: MDc6TGljZW5zZW1pdA==
                    html_url: https://api.github.com/licenses/mit
                  forks: 1
                  open_issues: 1
                  watchers: 1
                source:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  allow_rebase_merge: true
                  template_repository: null
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  allow_squash_merge: true
                  delete_branch_on_merge: true
                  allow_merge_commit: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    url: https://api.github.com/licenses/mit
                    spdx_id: MIT
                    node_id: MDc6TGljZW5zZW1pdA==
                    html_url: https://api.github.com/licenses/mit
                  forks: 1
                  open_issues: 1
                  watchers: 1
        '301':
          description: Moved Permanently
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - repos > {owner}/{repo}
      summary: Update a repository
      description: >-
        **Note**: To edit a repository's topics, use the [Replace all repository
        topics](https://developer.github.com/v3/repos/#replace-all-repository-topics)
        endpoint.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"description\":
                \"<string>\",\n    \"homepage\": \"<string>\",\n    \"private\":
                false,\n    \"visibility\": \"<string>\",\n    \"has_issues\":
                true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n   
                \"is_template\": false,\n    \"default_branch\":
                \"<string>\",\n    \"allow_squash_merge\": true,\n   
                \"allow_merge_commit\": true,\n    \"allow_rebase_merge\":
                true,\n    \"delete_branch_on_merge\": false,\n    \"archived\":
                false\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                license:
                  key: mit
                  name: MIT License
                  url: https://api.github.com/licenses/mit
                  spdx_id: MIT
                  node_id: MDc6TGljZW5zZW1pdA==
                  html_url: https://github.com/licenses/mit
                language: null
                forks_count: 9
                forks: 9
                stargazers_count: 80
                watchers_count: 80
                watchers: 80
                size: 108
                default_branch: master
                open_issues_count: 0
                open_issues: 0
                is_template: true
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  pull: true
                  push: false
                  admin: false
                allow_rebase_merge: true
                template_repository: null
                temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                allow_squash_merge: true
                delete_branch_on_merge: true
                allow_merge_commit: true
                subscribers_count: 42
                network_count: 0
                organization:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: Organization
                  site_admin: false
                parent:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  allow_rebase_merge: true
                  template_repository: null
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  allow_squash_merge: true
                  delete_branch_on_merge: true
                  allow_merge_commit: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    url: https://api.github.com/licenses/mit
                    spdx_id: MIT
                    node_id: MDc6TGljZW5zZW1pdA==
                    html_url: https://api.github.com/licenses/mit
                  forks: 1
                  open_issues: 1
                  watchers: 1
                source:
                  id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  allow_rebase_merge: true
                  template_repository: null
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  allow_squash_merge: true
                  delete_branch_on_merge: true
                  allow_merge_commit: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    url: https://api.github.com/licenses/mit
                    spdx_id: MIT
                    node_id: MDc6TGljZW5zZW1pdA==
                    html_url: https://api.github.com/licenses/mit
                  forks: 1
                  open_issues: 1
                  watchers: 1
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - repos > {owner}/{repo}
      summary: Delete a repository
      description: >-
        Deleting a repository requires admin access. If OAuth is used, the
        `delete_repo` scope is required.


        If an organization owner has configured the organization to prevent
        members from deleting organization-owned

        repositories, you will get a `403 Forbidden` response.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Organization members cannot delete repositories.
                documentation_url: https://developer.github.com/v3/repos/#delete-a-repository
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/compare/{base}...{head}:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: Compare two commits
      description: >-
        Both `:base` and `:head` must be branch names in `:repo`. To compare
        branches across other repositories in the same network as `:repo`, use
        the format `<USERNAME>:branch`.


        The response from the API is equivalent to running the `git log
        base..head` command; however, commits are returned in chronological
        order. Pass the appropriate [media
        type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests)
        to fetch diff and patch formats.


        The response also includes details on the files that were changed
        between the two commits. This includes the status of the change (for
        example, if a file was added, removed, modified, or renamed), and
        details of the change itself. For example, files with a `renamed` status
        have a `previous_filename` field showing the previous filename of the
        file, and files with a `modified` status have a `patch` field showing
        the changes made to the file.


        **Working with large comparisons**


        The response will include a comparison of up to 250 commits. If you are
        working with a larger commit range, you can use the [List
        commits](https://developer.github.com/v3/repos/commits/#list-commits) to
        enumerate all commits in the range.


        For comparisons with extremely large diffs, you may receive an error
        response indicating that the diff took too long to generate. You can
        typically resolve this error by using a smaller commit range.


        **Signature verification object**


        The response will include a `verification` object that describes the
        result of verifying the commit's signature. The following fields are
        included in the `verification` object:


        These are the possible values for `reason` in the `verification` object:


        | Value                    |
        Description                                                                                                                      
        |

        | ------------------------ |
        ---------------------------------------------------------------------------------------------------------------------------------
        |

        | `expired_key`            | The key that made the signature is
        expired.                                                                                      
        |

        | `not_signing_key`        | The "signing" flag is not among the usage
        flags in the GPG key that made the
        signature.                                           |

        | `gpgverify_error`        | There was an error communicating with the
        signature verification
        service.                                                         |

        | `gpgverify_unavailable`  | The signature verification service is
        currently
        unavailable.                                                                     
        |

        | `unsigned`               | The object does not include a
        signature.                                                                                         
        |

        | `unknown_signature_type` | A non-PGP signature was found in the
        commit.                                                                                     
        |

        | `no_user`                | No user was associated with the `committer`
        email address in the
        commit.                                                          |

        | `unverified_email`       | The `committer` email address in the commit
        was associated with a user, but the email address is not verified on
        her/his account. |

        | `bad_email`              | The `committer` email address in the commit
        is not included in the identities of the PGP key that made the
        signature.             |

        | `unknown_key`            | The key that made the signature has not
        been registered with any user's
        account.                                                  |

        | `malformed_signature`    | There was an error parsing the
        signature.                                                                                        
        |

        | `invalid`                | The signature could not be
        cryptographically verified using the key whose key-id was found in the
        signature.                      |

        | `valid`                  | None of the above errors applied, so the
        signature is considered to be
        verified.                                                  |
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: base
          in: path
          schema:
            type: string
          required: true
        - name: head
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/master...topic
                html_url: https://github.com/octocat/Hello-World/compare/master...topic
                permalink_url: >-
                  https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
                diff_url: >-
                  https://github.com/octocat/Hello-World/compare/master...topic.diff
                patch_url: >-
                  https://github.com/octocat/Hello-World/compare/master...topic.patch
                base_commit:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  node_id: >-
                    MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
                  html_url: >-
                    https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
                  commit:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    author:
                      name: Monalisa Octocat
                      email: mona@github.com
                      date: '2011-04-14T16:00:49Z'
                    committer:
                      name: Monalisa Octocat
                      email: mona@github.com
                      date: '2011-04-14T16:00:49Z'
                    message: Fix all the bugs
                    tree:
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
                      sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                    comment_count: 0
                    verification:
                      verified: false
                      reason: unsigned
                      signature: null
                      payload: null
                  author:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  committer:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  parents:
                    - url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                      sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                merge_base_commit:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  node_id: >-
                    MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
                  html_url: >-
                    https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
                  commit:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    author:
                      name: Monalisa Octocat
                      email: mona@github.com
                      date: '2011-04-14T16:00:49Z'
                    committer:
                      name: Monalisa Octocat
                      email: mona@github.com
                      date: '2011-04-14T16:00:49Z'
                    message: Fix all the bugs
                    tree:
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
                      sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                    comment_count: 0
                    verification:
                      verified: false
                      reason: unsigned
                      signature: null
                      payload: null
                  author:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  committer:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  parents:
                    - url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                      sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                status: behind
                ahead_by: 1
                behind_by: 2
                total_commits: 1
                commits:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                    node_id: >-
                      MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
                    html_url: >-
                      https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
                    commit:
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                      author:
                        name: Monalisa Octocat
                        email: mona@github.com
                        date: '2011-04-14T16:00:49Z'
                      committer:
                        name: Monalisa Octocat
                        email: mona@github.com
                        date: '2011-04-14T16:00:49Z'
                      message: Fix all the bugs
                      tree:
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
                        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                      comment_count: 0
                      verification:
                        verified: false
                        reason: unsigned
                        signature: null
                        payload: null
                    author:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    committer:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    parents:
                      - url: >-
                          https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                files:
                  - sha: bbcd538c8e72b8c175046e27cc8f907076331401
                    filename: file1.txt
                    status: added
                    additions: 103
                    deletions: 21
                    changes: 124
                    blob_url: >-
                      https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
                    raw_url: >-
                      https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
                    patch: >-
                      @@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@
                      module Test
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/contributors:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: List repository contributors
      description: >-
        Lists contributors to the specified repository and sorts them by the
        number of commits per contributor in descending order. This endpoint may
        return information that is a few hours old because the GitHub REST API
        v3 caches contributor data to improve performance.


        GitHub identifies contributors by author email address. This endpoint
        groups contribution counts by GitHub user, which includes all associated
        email addresses. To improve performance, only the first 500 author email
        addresses in the repository link to GitHub users. The rest will appear
        as anonymous contributors without associated GitHub user information.
      parameters:
        - name: anon
          in: query
          schema:
            type: string
          description: Set to `1` or `true` to include anonymous contributors in results.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                  contributions: 32
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/dispatches:
    post:
      tags:
        - repos > {owner}/{repo}
      summary: Create a repository dispatch event
      description: >-
        You can use this endpoint to trigger a webhook event called
        `repository_dispatch` when you want activity that happens outside of
        GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You
        must configure your GitHub Actions workflow or GitHub App to run when
        the `repository_dispatch` event occurs. For an example
        `repository_dispatch` webhook payload, see
        "[RepositoryDispatchEvent](https://developer.github.com/webhooks/event-payloads/#repository_dispatch)."


        The `client_payload` parameter is available for any extra information
        that your workflow might need. This parameter is a JSON payload that
        will be passed on when the webhook event is dispatched. For example, the
        `client_payload` can include a message that a user would like to send
        using a GitHub Actions workflow. Or the `client_payload` can be used as
        a test to debug your workflow. For a test example, see the [input
        example](https://developer.github.com/v3/repos/#example-4).


        To give you write access to the repository, you must use a personal
        access token with the `repo` scope. For more information, see "[Creating
        a personal access token for the command
        line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line)"
        in the GitHub Help documentation.


        This input example shows how you can use the `client_payload` as a test
        to debug your workflow.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"event_type\": \"<string>\",\n    \"client_payload\":
                \"<object>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/events:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: List repository events
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
  /repos/{owner}/{repo}/installation:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: Get a repository installation for the authenticated app
      description: >-
        Enables an authenticated GitHub App to find the repository's
        installation information. The installation's account type will be either
        an organization or a user account, depending which account the
        repository belongs to.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                account:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  avatar_url: https://github.com/images/error/hubot_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/orgs/github
                  html_url: https://github.com/github
                  followers_url: https://api.github.com/users/github/followers
                  following_url: https://api.github.com/users/github/following{/other_user}
                  gists_url: https://api.github.com/users/github/gists{/gist_id}
                  starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/github/subscriptions
                  organizations_url: https://api.github.com/users/github/orgs
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  received_events_url: https://api.github.com/users/github/received_events
                  type: Organization
                  site_admin: false
                repository_selection: all
                access_tokens_url: https://api.github.com/installations/1/access_tokens
                repositories_url: https://api.github.com/installation/repositories
                html_url: >-
                  https://github.com/organizations/github/settings/installations/1
                app_id: 1
                target_id: 1
                target_type: Organization
                permissions:
                  checks: write
                  metadata: read
                  contents: read
                events:
                  - push
                  - pull_request
                created_at: '2018-02-09T20:51:14Z'
                updated_at: '2018-02-09T20:51:14Z'
                single_file_name: null
                app_slug: github-actions
        '301':
          description: Moved Permanently
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /repos/{owner}/{repo}/languages:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: List repository languages
      description: >-
        Lists languages for the specified repository. The value shown for each
        language is the number of bytes of code written in that language.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                C: 78769
                Python: 7769
  /repos/{owner}/{repo}/license:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: Get the license for a repository
      description: >-
        This method returns the contents of the repository's license file, if
        one is detected.


        Similar to [Get repository
        content](https://developer.github.com/v3/repos/contents/#get-repository-content),
        this method also supports [custom media
        types](https://developer.github.com/v3/repos/contents/#custom-media-types)
        for retrieving the raw license content or rendered license HTML.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: LICENSE
                path: LICENSE
                sha: 401c59dcc4570b954dd6d345e76199e1f4e76266
                size: 1077
                url: >-
                  https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master
                html_url: https://github.com/benbalter/gman/blob/master/LICENSE
                git_url: >-
                  https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266
                download_url: >-
                  https://raw.githubusercontent.com/benbalter/gman/master/LICENSE?lab=true
                type: file
                content: |
                  VGhlIE1JVCBMaWNlbnNlIChNSVQpCgpDb3B5cmlnaHQgKGMpIDIwMTMgQmVu
                  IEJhbHRlcgoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv
                  ZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZgp0
                  aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmls
                  ZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbgp0aGUgU29mdHdhcmUg
                  d2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh
                  dGlvbiB0aGUgcmlnaHRzIHRvCnVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwg
                  cHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwg
                  Y29waWVzIG9mCnRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25z
                  IHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywK
                  c3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJv
                  dmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGlj
                  ZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1YnN0YW50
                  aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJ
                  UyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBL
                  SU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJ
                  TUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBG
                  SVRORVNTCkZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklO
                  R0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUgpDT1BZ
                  UklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdF
                  UyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIKSU4gQU4gQUNUSU9OIE9G
                  IENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBP
                  VVQgT0YgT1IgSU4KQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBU
                  SEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4K
                encoding: base64
                _links:
                  self: >-
                    https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master
                  git: >-
                    https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266
                  html: https://github.com/benbalter/gman/blob/master/LICENSE
                license:
                  key: mit
                  name: MIT License
                  spdx_id: MIT
                  url: https://api.github.com/licenses/mit
                  node_id: MDc6TGljZW5zZW1pdA==
  /repos/{owner}/{repo}/merges:
    post:
      tags:
        - repos > {owner}/{repo}
      summary: Merge a branch
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"base\": \"<string>\",\n    \"head\":
                \"<string>\",\n    \"commit_message\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                node_id: >-
                  MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
                html_url: >-
                  https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
                commit:
                  url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                  author:
                    name: Monalisa Octocat
                    email: mona@github.com
                    date: '2011-04-14T16:00:49Z'
                  committer:
                    name: Monalisa Octocat
                    email: mona@github.com
                    date: '2011-04-14T16:00:49Z'
                  message: Fix all the bugs
                  tree:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  comment_count: 0
                  verification:
                    verified: false
                    reason: unsigned
                    signature: null
                    payload: null
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                committer:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                parents:
                  - url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                    sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                stats:
                  additions: 104
                  deletions: 4
                  total: 108
                files:
                  - filename: file1.txt
                    additions: 10
                    deletions: 2
                    changes: 12
                    status: modified
                    raw_url: >-
                      https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
                    blob_url: >-
                      https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
                    patch: |-
                      @@ -29,7 +29,7 @@
                      .....
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Base does not exist
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Merge Conflict
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/readme:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: Get a repository README
      description: >-
        Gets the preferred README for a repository.


        READMEs support [custom media
        types](https://developer.github.com/v3/repos/contents/#custom-media-types)
        for retrieving the raw content or rendered HTML.
      parameters:
        - name: ref
          in: query
          schema:
            type: string
          description: >-
            The name of the commit/branch/tag. Default: the repository’s default
            branch (usually `master`)
          example: <string>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: file
                encoding: base64
                size: 5362
                name: README.md
                path: README.md
                content: encoded content ...
                sha: 3d21ec53a331a6f037a91c368710b99387d012c1
                url: >-
                  https://api.github.com/repos/octokit/octokit.rb/contents/README.md
                git_url: >-
                  https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
                html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
                download_url: >-
                  https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
                _links:
                  git: >-
                    https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
                  self: >-
                    https://api.github.com/repos/octokit/octokit.rb/contents/README.md
                  html: https://github.com/octokit/octokit.rb/blob/master/README.md
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/stargazers:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: List stargazers
      description: >-
        Lists the people that have starred the repository.


        You can also find out _when_ stars were created by passing the following
        custom [media type](https://developer.github.com/v3/media/) via the
        `Accept` header:
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /repos/{owner}/{repo}/statuses/{sha}:
    post:
      tags:
        - repos > {owner}/{repo}
      summary: Create a commit status
      description: >-
        Users with push access in a repository can create commit statuses for a
        given SHA.


        Note: there is a limit of 1000 statuses per `sha` and `context` within a
        repository. Attempts to create more than 1000 statuses will result in a
        validation error.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"state\": \"<string>\",\n    \"target_url\":
                \"<string>\",\n    \"description\": \"<string>\",\n   
                \"context\": \"default\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: (Required) sha parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
                avatar_url: https://github.com/images/error/hubot_happy.gif
                id: 1
                node_id: MDY6U3RhdHVzMQ==
                state: success
                description: Build has completed successfully
                target_url: https://ci.example.com/1000/output
                context: continuous-integration/jenkins
                created_at: '2012-07-20T01:19:13Z'
                updated_at: '2012-07-20T01:19:13Z'
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
  /repos/{owner}/{repo}/subscribers:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: List watchers
      description: Lists the people watching the specified repository.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
  /repos/{owner}/{repo}/tags:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: List repository tags
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: v0.1
                  commit:
                    sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
                  zipball_url: https://github.com/octocat/Hello-World/zipball/v0.1
                  tarball_url: https://github.com/octocat/Hello-World/tarball/v0.1
                  node_id: MDQ6VXNlcjE=
  /repos/{owner}/{repo}/tarball/{ref}:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: Download a repository archive (tar)
      description: >-
        Gets a redirect URL to download a tar archive for a repository. If you
        omit `:ref`, the repository’s default branch (usually

        `master`) will be used. Please make sure your HTTP framework is
        configured to follow redirects or you will need to use

        the `Location` header to make a second `GET` request.

        **Note**: For private repositories, these links are temporary and expire
        after five minutes.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref parameter
          example: <string>
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{owner}/{repo}/teams:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: List repository teams
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://api.github.com/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
  /repos/{owner}/{repo}/transfer:
    post:
      tags:
        - repos > {owner}/{repo}
      summary: Transfer a repository
      description: >-
        A transfer request will need to be accepted by the new owner when
        transferring a personal repository to another user. The response will
        contain the original `owner`, and the transfer will continue
        asynchronously. For more details on the requirements to transfer
        personal and organization-owned repositories, see [about repository
        transfers](https://help.github.com/articles/about-repository-transfers/).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"new_owner\": \"<string>\",\n    \"team_ids\":
                [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                language: null
                forks: 9
                forks_count: 9
                stargazers_count: 80
                watchers_count: 80
                watchers: 80
                size: 108
                default_branch: master
                open_issues: 0
                open_issues_count: 0
                is_template: true
                license:
                  key: mit
                  name: MIT License
                  url: https://api.github.com/licenses/mit
                  spdx_id: MIT
                  node_id: MDc6TGljZW5zZW1pdA==
                  html_url: https://api.github.com/licenses/mit
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  admin: false
                  push: false
                  pull: true
                allow_rebase_merge: true
                template_repository: null
                temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                allow_squash_merge: true
                delete_branch_on_merge: true
                allow_merge_commit: true
                subscribers_count: 42
                network_count: 0
  /repos/{owner}/{repo}/zipball/{ref}:
    get:
      tags:
        - repos > {owner}/{repo}
      summary: Download a repository archive (zip)
      description: >-
        Gets a redirect URL to download a zip archive for a repository. If you
        omit `:ref`, the repository’s default branch (usually

        `master`) will be used. Please make sure your HTTP framework is
        configured to follow redirects or you will need to use

        the `Location` header to make a second `GET` request.

        **Note**: For private repositories, these links are temporary and expire
        after five minutes.
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: (Required) ref parameter
          example: <string>
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /repos/{template_owner}/{template_repo}/generate:
    post:
      tags:
        - repos
      summary: Create a repository using a template
      description: >-
        Creates a new repository using a repository template. Use the
        `template_owner` and `template_repo` route parameters to specify the
        repository to use as the template. The authenticated user must own or be
        a member of an organization that owns the repository. To check if a
        repository is available to use as a template, get the repository's
        information using the [Get a
        repository](https://developer.github.com/v3/repos/#get-a-repository)
        endpoint and check that the `is_template` key is `true`.


        **OAuth scope requirements**


        When using
        [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/),
        authorizations must include:


        *   `public_repo` scope or `repo` scope to create a public repository

        *   `repo` scope to create a private repository
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"owner\":
                \"<string>\",\n    \"description\": \"<string>\",\n   
                \"private\": false\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: template_owner
          in: path
          schema:
            type: string
          required: true
          description: (Required) template_owner parameter
          example: <string>
        - name: template_repo
          in: path
          schema:
            type: string
          required: true
          description: (Required) template_repo parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                language: null
                forks_count: 9
                forks: 9
                stargazers_count: 80
                watchers_count: 80
                watchers: 80
                size: 108
                default_branch: master
                open_issues_count: 0
                open_issues: 0
                is_template: false
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  admin: false
                  push: false
                  pull: true
                allow_rebase_merge: true
                license:
                  key: mit
                  name: MIT License
                  url: https://api.github.com/licenses/mit
                  spdx_id: MIT
                  node_id: MDc6TGljZW5zZW1pdA==
                  html_url: https://github.com/licenses/mit
  /scim/v2/organizations/{org}/Users/{scim_user_id}:
    get:
      tags:
        - scim/v2/organizations/{org}/Users > {scim user id}
      summary: Get SCIM provisioning information for a user
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: scim_user_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) scim_user_id parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/scim+json
          content:
            application/json:
              schema:
                type: object
              example:
                schemas:
                  - urn:ietf:params:scim:schemas:core:2.0:User
                id: edefdfedf-050c-11e7-8d32
                externalId: a7d0f98382
                userName: mona.octocat@okta.example.com
                displayName: Monalisa Octocat
                name:
                  givenName: Monalisa
                  familyName: Octocat
                  formatted: Monalisa Octocat
                emails:
                  - value: mona.octocat@okta.example.com
                    primary: true
                  - value: monalisa@octocat.github.com
                active: true
                meta:
                  resourceType: User
                  created: '2017-03-09T16:11:13-05:00'
                  lastModified: '2017-03-09T16:11:13-05:00'
                  location: >-
                    https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
    put:
      tags:
        - scim/v2/organizations/{org}/Users > {scim user id}
      summary: Update a provisioned organization membership
      description: >-
        Replaces an existing provisioned user's information. You must provide
        all the information required for the user as if you were provisioning
        them for the first time. Any existing user information that you don't
        provide will be removed. If you want to only update a specific
        attribute, use the [Update an attribute for a SCIM
        user](https://developer.github.com/v3/scim/#update-an-attribute-for-a-scim-user)
        endpoint instead.


        You must at least provide the required values for the user: `userName`,
        `name`, and `emails`.


        **Warning:** Setting `active: false` removes the user from the
        organization, deletes the external identity, and deletes the associated
        `{scim_user_id}`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"userName\": \"<string>\",\n    \"name\": {\n       
                \"givenName\": \"<string>\",\n        \"familyName\":
                \"<string>\",\n        \"formatted\": \"<string>\"\n    },\n   
                \"emails\": [\n        {\n            \"value\":
                \"<string>\",\n            \"type\": \"<string>\",\n           
                \"primary\": \"<boolean>\"\n        }\n    ],\n    \"schemas\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"displayName\": \"<string>\",\n    \"externalId\":
                \"<string>\",\n    \"groups\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"active\": \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: scim_user_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) scim_user_id parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/scim+json
          content:
            application/json:
              schema:
                type: object
              example:
                schemas:
                  - urn:ietf:params:scim:schemas:core:2.0:User
                id: edefdfedf-050c-11e7-8d32
                externalId: a7d0f98382
                userName: mona.octocat@okta.example.com
                displayName: Monalisa Octocat
                name:
                  givenName: Monalisa
                  familyName: Octocat
                  formatted: Monalisa Octocat
                emails:
                  - value: mona.octocat@okta.example.com
                    primary: true
                  - value: monalisa@octocat.github.com
                active: true
                meta:
                  resourceType: User
                  created: '2017-03-09T16:11:13-05:00'
                  lastModified: '2017-03-09T16:11:13-05:00'
                  location: >-
                    https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
    patch:
      tags:
        - scim/v2/organizations/{org}/Users > {scim user id}
      summary: Update an attribute for a SCIM user
      description: >-
        Allows you to change a provisioned user's individual attributes. To
        change a user's values, you must provide a specific `Operations` JSON
        format that contains at least one of the `add`, `remove`, or `replace`
        operations. For examples and more information on the SCIM operations
        format, see the [SCIM
        specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).


        **Note:** Complicated SCIM `path` selectors that include filters are not
        supported. For example, a `path` selector defined as `"path":
        "emails[type eq \"work\"]"` will not work.


        **Warning:** If you set `active:false` using the `replace` operation (as
        shown in the JSON example below), it removes the user from the
        organization, deletes the external identity, and deletes the associated
        `:scim_user_id`.


        ```

        {
          "Operations":[{
            "op":"replace",
            "value":{
              "active":false
            }
          }]
        }

        ```
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"Operations\": [\n        {\n            \"op\":
                \"<string>\",\n            \"path\": \"<string>\",\n           
                \"value\": {\n                \"active\":
                \"<boolean>\",\n                \"userName\":
                \"<string>\",\n                \"externalId\":
                \"<string>\",\n                \"givenName\":
                \"<string>\",\n                \"familyName\":
                \"<string>\"\n            }\n        }\n    ],\n    \"schemas\":
                [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: scim_user_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) scim_user_id parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/scim+json
          content:
            application/json:
              schema:
                type: object
              example:
                schemas:
                  - urn:ietf:params:scim:schemas:core:2.0:User
                id: edefdfedf-050c-11e7-8d32
                externalId: a7d0f98382
                userName: mona.octocat@okta.example.com
                displayName: Monalisa Octocat
                name:
                  givenName: Monalisa
                  familyName: Octocat
                  formatted: Monalisa Octocat
                emails:
                  - value: mona.octocat@okta.example.com
                    primary: true
                  - value: monalisa@octocat.github.com
                active: true
                meta:
                  resourceType: User
                  created: '2017-03-09T16:11:13-05:00'
                  lastModified: '2017-03-09T16:11:13-05:00'
                  location: >-
                    https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - scim/v2/organizations/{org}/Users > {scim user id}
      summary: Delete a SCIM user from an organization
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: scim_user_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) scim_user_id parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
  /scim/v2/organizations/{org}/Users:
    get:
      tags:
        - scim/v2/organizations/{org}/Users
      summary: List SCIM provisioned identities
      description: >-
        Retrieves a paginated list of all provisioned organization members,
        including pending invitations. If you provide the `filter` parameter,
        the resources for all matching provisions members are returned.


        When a user with a SAML-provisioned external identity leaves (or is
        removed from) an organization, the account's metadata is immediately
        removed. However, the returned list of user accounts might not always
        match the organization or enterprise member list you see on GitHub. This
        can happen in certain cases where an external identity associated with
        an organization will not match an organization member:
          - When a user with a SCIM-provisioned external identity is removed from an organization, the account's metadata is preserved to allow the user to re-join the organization in the future.
          - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).
          - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.

        The returned list of external identities can include an entry for a
        `null` user. These are unlinked SAML identities that are created when a
        user goes through the following Single Sign-On (SSO) process but does
        not sign in to their GitHub account after completing SSO:


        1. The user is granted access by the IdP and is not a member of the
        GitHub organization.


        1. The user attempts to access the GitHub organization and initiates the
        SAML SSO process, and is not currently signed in to their GitHub
        account.


        1. After successfully authenticating with the SAML SSO IdP, the `null`
        external identity entry is created and the user is prompted to sign in
        to their GitHub account:
           - If the user signs in, their GitHub account is linked to this entry.
           - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub organization, and the external identity `null` entry remains in place.
      parameters:
        - name: startIndex
          in: query
          schema:
            type: string
          description: 'Used for pagination: the index of the first result to return.'
          example: <integer>
        - name: count
          in: query
          schema:
            type: string
          description: 'Used for pagination: the number of results to return.'
          example: <integer>
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Filters results using the equals query parameter operator (`eq`).
            You can filter results that are equal to `id`, `userName`, `emails`,
            and `external_id`. For example, to search for an identity with the
            `userName` Octocat, you would use this query:


            `?filter=userName%20eq%20\"Octocat\"`.


            To filter results for for the identity with the email
            `octocat@github.com`, you would use this query:


            `?filter=emails%20eq%20\"octocat@github.com\"`.
          example: <string>
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/scim+json
          content:
            application/json:
              schema:
                type: object
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:ListResponse
                totalResults: 1
                itemsPerPage: 1
                startIndex: 1
                Resources:
                  - schemas:
                      - urn:ietf:params:scim:schemas:core:2.0:User
                    id: 5fc0c238-1112-11e8-8e45-920c87bdbd75
                    externalId: 00u1dhhb1fkIGP7RL1d8
                    userName: octocat@github.com
                    displayName: Mona Octocat
                    name:
                      givenName: Mona
                      familyName: Octocat
                      formatted: Mona Octocat
                    emails:
                      - value: octocat@github.com
                        primary: true
                    active: true
                    meta:
                      resourceType: User
                      created: '2018-02-13T15:05:24.000-08:00'
                      lastModified: '2018-02-13T15:05:55.000-08:00'
                      location: >-
                        https://api.github.com/scim/v2/organizations/octo-org/Users/5fc0c238-1112-11e8-8e45-920c87bdbd75
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: cillum est consequat fugiat quis
                documentation_url: deserunt quis
                detail: anim cupidatat cillum incididunt
                status: -38038469
                scimType: in Lorem id voluptate
                schemas:
                  - nulla anim
                  - id est ea
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
    post:
      tags:
        - scim/v2/organizations/{org}/Users
      summary: Provision and invite a SCIM user
      description: >-
        Provision organization membership for a user, and send an activation
        email to the email address.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"userName\": \"<string>\",\n    \"name\": {\n       
                \"givenName\": \"<string>\",\n        \"familyName\":
                \"<string>\",\n        \"formatted\": \"<string>\"\n    },\n   
                \"emails\": [\n        {\n            \"value\":
                \"<string>\",\n            \"primary\":
                \"<boolean>\",\n            \"type\": \"<string>\"\n       
                }\n    ],\n    \"displayName\": \"<string>\",\n    \"schemas\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"externalId\": \"<string>\",\n    \"groups\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"active\":
                \"<boolean>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/scim+json
          content:
            application/json:
              schema:
                type: object
              example:
                schemas:
                  - urn:ietf:params:scim:schemas:core:2.0:User
                id: edefdfedf-050c-11e7-8d32
                externalId: a7d0f98382
                userName: mona.octocat@okta.example.com
                displayName: Monalisa Octocat
                name:
                  givenName: Monalisa
                  familyName: Octocat
                  formatted: Monalisa Octocat
                emails:
                  - value: mona.octocat@okta.example.com
                    primary: true
                  - value: monalisa@octocat.github.com
                active: true
                meta:
                  resourceType: User
                  created: '2017-03-09T16:11:13-05:00'
                  lastModified: '2017-03-09T16:11:13-05:00'
                  location: >-
                    https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in laborum sit ad dolor
                documentation_url: Excepteur dolor
                detail: Excepteur dolor aliqua ipsum
                status: -87592654
                scimType: dolore ut
                schemas:
                  - exercitation
                  - occaecat aliqua consequat esse
  /search/code:
    get:
      tags:
        - search
      summary: Search code
      description: >-
        Searches for query terms inside of a file. This method returns up to 100
        results [per page](https://developer.github.com/v3/#pagination).


        When searching for code, you can get text match metadata for the file
        **content** and file **path** fields when you pass the `text-match`
        media type. For more details about how to receive highlighted search
        results, see [Text match
        metadata](https://developer.github.com/v3/search/#text-match-metadata).


        For example, if you want to find the definition of the `addClass`
        function inside [jQuery](https://github.com/jquery/jquery) repository,
        your query would look something like this:


        `q=addClass+in:file+language:js+repo:jquery/jquery`


        This query searches for the keyword `addClass` within a file's contents.
        The query limits the search to files where the language is JavaScript in
        the `jquery/jquery` repository.


        #### Considerations for code search


        Due to the complexity of searching code, there are a few restrictions on
        how searches are performed:


        *   Only the _default branch_ is considered. In most cases, this will be
        the `master` branch.

        *   Only files smaller than 384 KB are searchable.

        *   You must always include at least one search term when searching
        source code. For example, searching for
        [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code)
        is not valid, while [`amazing

        language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code)
        is.
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) The query contains one or more search keywords and
            qualifiers. Qualifiers allow you to limit your search to specific
            areas of GitHub. The REST API supports the same qualifiers as
            GitHub.com. To learn more about the format of the query, see
            [Constructing a search
            query](https://developer.github.com/v3/search/#constructing-a-search-query).
            See "[Searching
            code](https://help.github.com/articles/searching-code/)" for a
            detailed list of qualifiers.
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Sorts the results of your query. Can only be `indexed`, which
            indicates how recently a file has been indexed by the GitHub search
            infrastructure. Default: [best
            match](https://developer.github.com/v3/search/#ranking-search-results)
          example: <string>
        - name: order
          in: query
          schema:
            type: string
          description: >-
            Determines whether the first search result returned is the highest
            number of matches (`desc`) or lowest number of matches (`asc`). This
            parameter is ignored unless you provide `sort`.
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 7
                incomplete_results: false
                items:
                  - name: classes.js
                    path: src/attributes/classes.js
                    sha: d7212f9dee2dcc18f084d7df8f417b80846ded5a
                    url: >-
                      https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4
                    git_url: >-
                      https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a
                    html_url: >-
                      https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js
                    repository:
                      id: 167174
                      node_id: MDEwOlJlcG9zaXRvcnkxNjcxNzQ=
                      name: jquery
                      full_name: jquery/jquery
                      owner:
                        login: jquery
                        id: 70142
                        node_id: MDQ6VXNlcjcwMTQy
                        avatar_url: >-
                          https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png
                        gravatar_id: ''
                        url: https://api.github.com/users/jquery
                        html_url: https://github.com/jquery
                        followers_url: https://api.github.com/users/jquery/followers
                        following_url: >-
                          https://api.github.com/users/jquery/following{/other_user}
                        gists_url: https://api.github.com/users/jquery/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/jquery/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/jquery/subscriptions
                        organizations_url: https://api.github.com/users/jquery/orgs
                        repos_url: https://api.github.com/users/jquery/repos
                        events_url: https://api.github.com/users/jquery/events{/privacy}
                        received_events_url: https://api.github.com/users/jquery/received_events
                        type: Organization
                        site_admin: false
                      private: false
                      html_url: https://github.com/jquery/jquery
                      description: jQuery JavaScript Library
                      fork: false
                      url: https://api.github.com/repos/jquery/jquery
                      forks_url: https://api.github.com/repos/jquery/jquery/forks
                      keys_url: https://api.github.com/repos/jquery/jquery/keys{/key_id}
                      collaborators_url: >-
                        https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}
                      teams_url: https://api.github.com/repos/jquery/jquery/teams
                      hooks_url: https://api.github.com/repos/jquery/jquery/hooks
                      issue_events_url: >-
                        https://api.github.com/repos/jquery/jquery/issues/events{/number}
                      events_url: https://api.github.com/repos/jquery/jquery/events
                      assignees_url: >-
                        https://api.github.com/repos/jquery/jquery/assignees{/user}
                      branches_url: >-
                        https://api.github.com/repos/jquery/jquery/branches{/branch}
                      tags_url: https://api.github.com/repos/jquery/jquery/tags
                      blobs_url: >-
                        https://api.github.com/repos/jquery/jquery/git/blobs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/jquery/jquery/git/tags{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/jquery/jquery/git/refs{/sha}
                      trees_url: >-
                        https://api.github.com/repos/jquery/jquery/git/trees{/sha}
                      statuses_url: >-
                        https://api.github.com/repos/jquery/jquery/statuses/{sha}
                      languages_url: https://api.github.com/repos/jquery/jquery/languages
                      stargazers_url: https://api.github.com/repos/jquery/jquery/stargazers
                      contributors_url: https://api.github.com/repos/jquery/jquery/contributors
                      subscribers_url: https://api.github.com/repos/jquery/jquery/subscribers
                      subscription_url: https://api.github.com/repos/jquery/jquery/subscription
                      commits_url: https://api.github.com/repos/jquery/jquery/commits{/sha}
                      git_commits_url: >-
                        https://api.github.com/repos/jquery/jquery/git/commits{/sha}
                      comments_url: >-
                        https://api.github.com/repos/jquery/jquery/comments{/number}
                      issue_comment_url: >-
                        https://api.github.com/repos/jquery/jquery/issues/comments/{number}
                      contents_url: >-
                        https://api.github.com/repos/jquery/jquery/contents/{+path}
                      compare_url: >-
                        https://api.github.com/repos/jquery/jquery/compare/{base}...{head}
                      merges_url: https://api.github.com/repos/jquery/jquery/merges
                      archive_url: >-
                        https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}
                      downloads_url: https://api.github.com/repos/jquery/jquery/downloads
                      issues_url: >-
                        https://api.github.com/repos/jquery/jquery/issues{/number}
                      pulls_url: >-
                        https://api.github.com/repos/jquery/jquery/pulls{/number}
                      milestones_url: >-
                        https://api.github.com/repos/jquery/jquery/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}
                      labels_url: https://api.github.com/repos/jquery/jquery/labels{/name}
                      deployments_url: >-
                        http://api.github.com/repos/octocat/Hello-World/deployments
                      releases_url: >-
                        http://api.github.com/repos/octocat/Hello-World/releases{/id}
                    score: 1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /search/commits:
    get:
      tags:
        - search
      summary: Search commits
      description: >-
        Find commits via various criteria on the default branch (usually
        `master`). This method returns up to 100 results [per
        page](https://developer.github.com/v3/#pagination).


        When searching for commits, you can get text match metadata for the
        **message** field when you provide the `text-match` media type. For more
        details about how to receive highlighted search results, see [Text match

        metadata](https://developer.github.com/v3/search/#text-match-metadata).


        For example, if you want to find commits related to CSS in the
        [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife)
        repository. Your query would look something like this:


        `q=repo:octocat/Spoon-Knife+css`
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) The query contains one or more search keywords and
            qualifiers. Qualifiers allow you to limit your search to specific
            areas of GitHub. The REST API supports the same qualifiers as
            GitHub.com. To learn more about the format of the query, see
            [Constructing a search
            query](https://developer.github.com/v3/search/#constructing-a-search-query).
            See "[Searching
            commits](https://help.github.com/articles/searching-commits/)" for a
            detailed list of qualifiers.
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Sorts the results of your query by `author-date` or
            `committer-date`. Default: [best
            match](https://developer.github.com/v3/search/#ranking-search-results)
          example: <string>
        - name: order
          in: query
          schema:
            type: string
          description: >-
            Determines whether the first search result returned is the highest
            number of matches (`desc`) or lowest number of matches (`asc`). This
            parameter is ignored unless you provide `sort`.
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                incomplete_results: false
                items:
                  - url: >-
                      https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
                    sha: bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
                    html_url: >-
                      https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
                    comments_url: >-
                      https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments
                    commit:
                      url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
                      author:
                        date: '2014-02-04T14:38:36-08:00'
                        name: The Octocat
                        email: octocat@nowhere.com
                      committer:
                        date: '2014-02-12T15:18:55-08:00'
                        name: The Octocat
                        email: octocat@nowhere.com
                      message: Create styles.css and updated README
                      tree:
                        url: >-
                          https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68
                        sha: a639e96f9038797fba6e0469f94a4b0cc459fa68
                      comment_count: 8
                    author:
                      login: octocat
                      id: 583231
                      node_id: MDQ6VXNlcjU4MzIzMQ==
                      avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    committer: {}
                    parents:
                      - url: >-
                          https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
                        html_url: >-
                          https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
                        sha: a30c19e3f13765a3b48829788bc1cb8b4e95cee4
                    repository:
                      id: 1300192
                      node_id: MDEwOlJlcG9zaXRvcnkxMzAwMTky
                      name: Spoon-Knife
                      full_name: octocat/Spoon-Knife
                      owner:
                        login: octocat
                        id: 583231
                        node_id: MDQ6VXNlcjU4MzIzMQ==
                        avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Spoon-Knife
                      description: This repo is for demonstration purposes only.
                      fork: false
                      url: https://api.github.com/repos/octocat/Spoon-Knife
                      forks_url: https://api.github.com/repos/octocat/Spoon-Knife/forks
                      keys_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}
                      teams_url: https://api.github.com/repos/octocat/Spoon-Knife/teams
                      hooks_url: https://api.github.com/repos/octocat/Spoon-Knife/hooks
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}
                      events_url: https://api.github.com/repos/octocat/Spoon-Knife/events
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}
                      tags_url: https://api.github.com/repos/octocat/Spoon-Knife/tags
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}
                      trees_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/languages
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/stargazers
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/contributors
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/subscription
                      commits_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}
                      merges_url: https://api.github.com/repos/octocat/Spoon-Knife/merges
                      archive_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/downloads
                      issues_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Spoon-Knife/deployments
                    score: 1
                    node_id: MDQ6VXNlcjU4MzIzMQ==
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /search/issues:
    get:
      tags:
        - search
      summary: Search issues and pull requests
      description: >-
        Find issues by state and keyword. This method returns up to 100 results
        [per page](https://developer.github.com/v3/#pagination).


        When searching for issues, you can get text match metadata for the issue
        **title**, issue **body**, and issue **comment body** fields when you
        pass the `text-match` media type. For more details about how to receive
        highlighted

        search results, see [Text match
        metadata](https://developer.github.com/v3/search/#text-match-metadata).


        For example, if you want to find the oldest unresolved Python bugs on
        Windows. Your query might look something like this.


        `q=windows+label:bug+language:python+state:open&sort=created&order=asc`


        This query searches for the keyword `windows`, within any open issue
        that is labeled as `bug`. The search runs across repositories whose
        primary language is Python. The results are sorted by creation date in
        ascending order, whick means the oldest issues appear first in the
        search results.
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) The query contains one or more search keywords and
            qualifiers. Qualifiers allow you to limit your search to specific
            areas of GitHub. The REST API supports the same qualifiers as
            GitHub.com. To learn more about the format of the query, see
            [Constructing a search
            query](https://developer.github.com/v3/search/#constructing-a-search-query).
            See "[Searching issues and pull
            requests](https://help.github.com/articles/searching-issues-and-pull-requests/)"
            for a detailed list of qualifiers.
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Sorts the results of your query by the number of `comments`,
            `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`,
            `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or
            `interactions`. You can also sort results by how recently the items
            were `created` or `updated`, Default: [best
            match](https://developer.github.com/v3/search/#ranking-search-results)
          example: <string>
        - name: order
          in: query
          schema:
            type: string
          description: >-
            Determines whether the first search result returned is the highest
            number of matches (`desc`) or lowest number of matches (`asc`). This
            parameter is ignored unless you provide `sort`.
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 280
                incomplete_results: false
                items:
                  - url: >-
                      https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132
                    repository_url: https://api.github.com/repos/batterseapower/pinyin-toolkit
                    labels_url: >-
                      https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}
                    comments_url: >-
                      https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments
                    events_url: >-
                      https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events
                    html_url: >-
                      https://github.com/batterseapower/pinyin-toolkit/issues/132
                    id: 35802
                    node_id: MDU6SXNzdWUzNTgwMg==
                    number: 132
                    title: Line Number Indexes Beyond 20 Not Displayed
                    user:
                      login: Nick3C
                      id: 90254
                      node_id: MDQ6VXNlcjkwMjU0
                      avatar_url: >-
                        https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
                      gravatar_id: ''
                      url: https://api.github.com/users/Nick3C
                      html_url: https://github.com/Nick3C
                      followers_url: https://api.github.com/users/Nick3C/followers
                      following_url: >-
                        https://api.github.com/users/Nick3C/following{/other_user}
                      gists_url: https://api.github.com/users/Nick3C/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/Nick3C/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/Nick3C/subscriptions
                      organizations_url: https://api.github.com/users/Nick3C/orgs
                      repos_url: https://api.github.com/users/Nick3C/repos
                      events_url: https://api.github.com/users/Nick3C/events{/privacy}
                      received_events_url: https://api.github.com/users/Nick3C/received_events
                      type: User
                      site_admin: true
                    labels:
                      - id: 4
                        node_id: MDU6TGFiZWw0
                        url: >-
                          https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug
                        name: bug
                        color: ff0000
                    state: open
                    assignee: null
                    milestone:
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones/1
                      html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                      id: 1002604
                      node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                      number: 1
                      state: open
                      title: v1.0
                      description: Tracking milestone for version 1.0
                      creator:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      open_issues: 4
                      closed_issues: 8
                      created_at: '2011-04-10T20:09:31Z'
                      updated_at: '2014-03-03T18:58:10Z'
                      closed_at: '2013-02-12T13:22:01Z'
                      due_on: '2012-10-09T23:39:01Z'
                    comments: 15
                    created_at: '2009-07-12T20:10:41Z'
                    updated_at: '2009-07-19T09:23:43Z'
                    closed_at: null
                    pull_request:
                      url: >-
                        https://api/github.com/repos/octocat/Hello-World/pull/1347
                      html_url: https://github.com/octocat/Hello-World/pull/1347
                      diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                      patch_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls/1347
                    body: ...
                    score: 1
                    locked: true
                    author_association: collaborator
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /search/labels:
    get:
      tags:
        - search
      summary: Search labels
      description: >-
        Find labels in a repository with names or descriptions that match search
        keywords. Returns up to 100 results [per
        page](https://developer.github.com/v3/#pagination).


        When searching for labels, you can get text match metadata for the label
        **name** and **description** fields when you pass the `text-match` media
        type. For more details about how to receive highlighted search results,
        see [Text match
        metadata](https://developer.github.com/v3/search/#text-match-metadata).


        For example, if you want to find labels in the `linguist` repository
        that match `bug`, `defect`, or `enhancement`. Your query might look like
        this:


        `q=bug+defect+enhancement&repository_id=64778136`


        The labels that best match the query appear first in the search results.
      parameters:
        - name: repository_id
          in: query
          schema:
            type: string
          description: (Required) The id of the repository.
          example: <integer>
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) The search keywords. This endpoint does not accept
            qualifiers in the query. To learn more about the format of the
            query, see [Constructing a search
            query](https://developer.github.com/v3/search/#constructing-a-search-query).
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Sorts the results of your query by when the label was `created` or
            `updated`. Default: [best
            match](https://developer.github.com/v3/search/#ranking-search-results)
          example: <string>
        - name: order
          in: query
          schema:
            type: string
          description: >-
            Determines whether the first search result returned is the highest
            number of matches (`desc`) or lowest number of matches (`asc`). This
            parameter is ignored unless you provide `sort`.
          example: desc
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 2
                incomplete_results: false
                items:
                  - id: 418327088
                    node_id: MDU6TGFiZWw0MTgzMjcwODg=
                    url: >-
                      https://api.github.com/repos/octocat/linguist/labels/enhancement
                    name: enhancement
                    color: 84b6eb
                    default: true
                    description: New feature or request.
                    score: 1
                  - id: 418327086
                    node_id: MDU6TGFiZWw0MTgzMjcwODY=
                    url: https://api.github.com/repos/octocat/linguist/labels/bug
                    name: bug
                    color: ee0701
                    default: true
                    description: Something isn't working.
                    score: 1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /search/repositories:
    get:
      tags:
        - search
      summary: Search repositories
      description: >-
        Find repositories via various criteria. This method returns up to 100
        results [per page](https://developer.github.com/v3/#pagination).


        When searching for repositories, you can get text match metadata for the
        **name** and **description** fields when you pass the `text-match` media
        type. For more details about how to receive highlighted search results,
        see [Text match
        metadata](https://developer.github.com/v3/search/#text-match-metadata).


        For example, if you want to search for popular Tetris repositories
        written in assembly code, your query might look like this:


        `q=tetris+language:assembly&sort=stars&order=desc`


        This query searches for repositories with the word `tetris` in the name,
        the description, or the README. The results are limited to repositories
        where the primary language is assembly. The results are sorted by stars
        in descending order, so that the most popular repositories appear first
        in the search results.


        When you include the `mercy` preview header, you can also search for
        multiple topics by adding more `topic:` instances. For example, your
        query might look like this:


        `q=topic:ruby+topic:rails`
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) The query contains one or more search keywords and
            qualifiers. Qualifiers allow you to limit your search to specific
            areas of GitHub. The REST API supports the same qualifiers as
            GitHub.com. To learn more about the format of the query, see
            [Constructing a search
            query](https://developer.github.com/v3/search/#constructing-a-search-query).
            See "[Searching for
            repositories](https://help.github.com/articles/searching-for-repositories/)"
            for a detailed list of qualifiers.
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Sorts the results of your query by number of `stars`, `forks`, or
            `help-wanted-issues` or how recently the items were `updated`.
            Default: [best
            match](https://developer.github.com/v3/search/#ranking-search-results)
          example: <string>
        - name: order
          in: query
          schema:
            type: string
          description: >-
            Determines whether the first search result returned is the highest
            number of matches (`desc`) or lowest number of matches (`asc`). This
            parameter is ignored unless you provide `sort`.
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 40
                incomplete_results: false
                items:
                  - id: 3081286
                    node_id: MDEwOlJlcG9zaXRvcnkzMDgxMjg2
                    name: Tetris
                    full_name: dtrupenn/Tetris
                    owner:
                      login: dtrupenn
                      id: 872147
                      node_id: MDQ6VXNlcjg3MjE0Nw==
                      avatar_url: >-
                        https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
                      gravatar_id: ''
                      url: https://api.github.com/users/dtrupenn
                      received_events_url: https://api.github.com/users/dtrupenn/received_events
                      type: User
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      site_admin: true
                    private: false
                    html_url: https://github.com/dtrupenn/Tetris
                    description: A C implementation of Tetris using Pennsim through LC4
                    fork: false
                    url: https://api.github.com/repos/dtrupenn/Tetris
                    created_at: '2012-01-01T00:31:50Z'
                    updated_at: '2013-01-05T17:58:47Z'
                    pushed_at: '2012-01-01T00:37:02Z'
                    homepage: https://github.com
                    size: 524
                    stargazers_count: 1
                    watchers_count: 1
                    language: Assembly
                    forks_count: 0
                    open_issues_count: 0
                    master_branch: master
                    default_branch: master
                    score: 1
                    archive_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/comments{/number}
                    commits_url: https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}
                    contributors_url: https://api.github.com/repos/dtrupenn/Tetris/contributors
                    deployments_url: https://api.github.com/repos/dtrupenn/Tetris/deployments
                    downloads_url: https://api.github.com/repos/dtrupenn/Tetris/downloads
                    events_url: https://api.github.com/repos/dtrupenn/Tetris/events
                    forks_url: https://api.github.com/repos/dtrupenn/Tetris/forks
                    git_commits_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}
                    git_url: git:github.com/dtrupenn/Tetris.git
                    issue_comment_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/issues{/number}
                    keys_url: https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}
                    labels_url: https://api.github.com/repos/dtrupenn/Tetris/labels{/name}
                    languages_url: https://api.github.com/repos/dtrupenn/Tetris/languages
                    merges_url: https://api.github.com/repos/dtrupenn/Tetris/merges
                    milestones_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}
                    releases_url: https://api.github.com/repos/dtrupenn/Tetris/releases{/id}
                    ssh_url: git@github.com:dtrupenn/Tetris.git
                    stargazers_url: https://api.github.com/repos/dtrupenn/Tetris/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}
                    subscribers_url: https://api.github.com/repos/dtrupenn/Tetris/subscribers
                    subscription_url: https://api.github.com/repos/dtrupenn/Tetris/subscription
                    tags_url: https://api.github.com/repos/dtrupenn/Tetris/tags
                    teams_url: https://api.github.com/repos/dtrupenn/Tetris/teams
                    trees_url: >-
                      https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}
                    clone_url: https://github.com/dtrupenn/Tetris.git
                    mirror_url: git:git.example.com/dtrupenn/Tetris
                    hooks_url: https://api.github.com/repos/dtrupenn/Tetris/hooks
                    svn_url: https://svn.github.com/dtrupenn/Tetris
                    forks: 1
                    open_issues: 1
                    watchers: 1
                    has_issues: true
                    has_projects: true
                    has_pages: true
                    has_wiki: true
                    has_downloads: true
                    archived: true
                    disabled: true
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://api.github.com/licenses/mit
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /search/topics:
    get:
      tags:
        - search
      summary: Search topics
      description: >-
        Find topics via various criteria. Results are sorted by best match. This
        method returns up to 100 results [per
        page](https://developer.github.com/v3/#pagination). See "[Searching
        topics](https://help.github.com/articles/searching-topics/)" for a
        detailed list of qualifiers.


        When searching for topics, you can get text match metadata for the
        topic's **short\_description**, **description**, **name**, or
        **display\_name** field when you pass the `text-match` media type. For
        more details about how to receive highlighted search results, see [Text
        match
        metadata](https://developer.github.com/v3/search/#text-match-metadata).


        For example, if you want to search for topics related to Ruby that are
        featured on https://github.com/topics. Your query might look like this:


        `q=ruby+is:featured`


        This query searches for topics with the keyword `ruby` and limits the
        results to find only topics that are featured. The topics that are the
        best match for the query appear first in the search results.
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) The query contains one or more search keywords and
            qualifiers. Qualifiers allow you to limit your search to specific
            areas of GitHub. The REST API supports the same qualifiers as
            GitHub.com. To learn more about the format of the query, see
            [Constructing a search
            query](https://developer.github.com/v3/search/#constructing-a-search-query).
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 6
                incomplete_results: false
                items:
                  - name: ruby
                    display_name: Ruby
                    short_description: >-
                      Ruby is a scripting language designed for simplified
                      object-oriented programming.
                    description: "Ruby was developed by\_Yukihiro \"Matz\" Matsumoto\_in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python."
                    created_by: Yukihiro Matsumoto
                    released: December 21, 1995
                    created_at: '2016-11-28T22:03:59Z'
                    updated_at: '2017-10-30T18:16:32Z'
                    featured: true
                    curated: true
                    score: 1
                  - name: rails
                    display_name: Rails
                    short_description: >-
                      Ruby on Rails (Rails) is a web application framework
                      written in Ruby.
                    description: >-
                      Ruby on Rails (Rails) is a web application framework
                      written in Ruby. It is meant to help simplify the building
                      of complex websites.
                    created_by: David Heinemeier Hansson
                    released: December 13 2005
                    created_at: '2016-12-09T17:03:50Z'
                    updated_at: '2017-10-30T16:20:19Z'
                    featured: true
                    curated: true
                    score: 1
                  - name: python
                    display_name: Python
                    short_description: Python is a dynamically typed programming language.
                    description: >-
                      Python is a dynamically typed programming language
                      designed by Guido Van Rossum. Much like the programming
                      language Ruby, Python was designed to be easily read by
                      programmers. Because of its large following and many
                      libraries, Python can be implemented and used to do
                      anything from webpages to scientific research.
                    created_by: Guido van Rossum
                    released: February 20, 1991
                    created_at: '2016-12-07T00:07:02Z'
                    updated_at: '2017-10-27T22:45:43Z'
                    featured: true
                    curated: true
                    score: 1
                  - name: jekyll
                    display_name: Jekyll
                    short_description: Jekyll is a simple, blog-aware static site generator.
                    description: >-
                      Jekyll is a blog-aware, site generator written in Ruby. It
                      takes raw text files, runs it through a renderer and
                      produces a publishable static website.
                    created_by: Tom Preston-Werner
                    released: '2008'
                    created_at: '2016-12-16T21:53:08Z'
                    updated_at: '2017-10-27T19:00:24Z'
                    featured: true
                    curated: true
                    score: 1
                  - name: sass
                    display_name: Sass
                    short_description: Sass is a stable extension to classic CSS.
                    description: >-
                      Sass is a stylesheet language with a main implementation
                      in Ruby. It is an extension of CSS that makes improvements
                      to the old stylesheet format, such as being able to
                      declare variables and using a cleaner nesting syntax.
                    created_by: Hampton Catlin, Natalie Weizenbaum, Chris Eppstein
                    released: November 28, 2006
                    created_at: '2016-12-16T21:53:45Z'
                    updated_at: '2018-01-16T16:30:40Z'
                    featured: true
                    curated: true
                    score: 1
                  - name: homebrew
                    display_name: Homebrew
                    short_description: Homebrew is a package manager for macOS.
                    description: >-
                      Homebrew is a package manager for Apple's macOS operating
                      system. It simplifies the installation of software and is
                      popular in the Ruby on Rails community.
                    created_by: Max Howell
                    released: '2009'
                    created_at: '2016-12-17T20:30:44Z'
                    updated_at: '2018-02-06T16:14:56Z'
                    featured: true
                    curated: true
                    score: 1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /search/users:
    get:
      tags:
        - search
      summary: Search users
      description: >-
        Find users via various criteria. This method returns up to 100 results
        [per page](https://developer.github.com/v3/#pagination).


        When searching for users, you can get text match metadata for the issue
        **login**, **email**, and **name** fields when you pass the `text-match`
        media type. For more details about highlighting search results, see
        [Text match
        metadata](https://developer.github.com/v3/search/#text-match-metadata).
        For more details about how to receive highlighted search results, see
        [Text match
        metadata](https://developer.github.com/v3/search/#text-match-metadata).


        For example, if you're looking for a list of popular users, you might
        try this query:


        `q=tom+repos:%3E42+followers:%3E1000`


        This query searches for users with the name `tom`. The results are
        restricted to users with more than 42 repositories and over 1,000
        followers.
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) The query contains one or more search keywords and
            qualifiers. Qualifiers allow you to limit your search to specific
            areas of GitHub. The REST API supports the same qualifiers as
            GitHub.com. To learn more about the format of the query, see
            [Constructing a search
            query](https://developer.github.com/v3/search/#constructing-a-search-query).
            See "[Searching
            users](https://help.github.com/articles/searching-users/)" for a
            detailed list of qualifiers.
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Sorts the results of your query by number of `followers` or
            `repositories`, or when the person `joined` GitHub. Default: [best
            match](https://developer.github.com/v3/search/#ranking-search-results)
          example: <string>
        - name: order
          in: query
          schema:
            type: string
          description: >-
            Determines whether the first search result returned is the highest
            number of matches (`desc`) or lowest number of matches (`asc`). This
            parameter is ignored unless you provide `sort`.
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 12
                incomplete_results: false
                items:
                  - login: mojombo
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: >-
                      https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
                    gravatar_id: ''
                    url: https://api.github.com/users/mojombo
                    html_url: https://github.com/mojombo
                    followers_url: https://api.github.com/users/mojombo/followers
                    subscriptions_url: https://api.github.com/users/mojombo/subscriptions
                    organizations_url: https://api.github.com/users/mojombo/orgs
                    repos_url: https://api.github.com/users/mojombo/repos
                    received_events_url: https://api.github.com/users/mojombo/received_events
                    type: User
                    score: 1
                    following_url: >-
                      https://api.github.com/users/mojombo/following{/other_user}
                    gists_url: https://api.github.com/users/mojombo/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/mojombo/starred{/owner}{/repo}
                    events_url: https://api.github.com/users/mojombo/events{/privacy}
                    site_admin: true
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions:
    get:
      tags:
        - >-
          teams/{team id} > discussions > {discussion number} > comments >
          {comment number} > reactions
      summary: List reactions for a team discussion comment (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`List reactions for a team discussion
        comment`](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment)
        endpoint.


        List the reactions to a [team discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/).
        OAuth access tokens require the `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: content
          in: query
          schema:
            type: string
          description: >-
            Returns a single [reaction
            type](https://developer.github.com/v3/reactions/#reaction-types).
            Omit this parameter to list all reactions to a team discussion
            comment.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDg6UmVhY3Rpb24x
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  content: heart
                  created_at: '2016-05-20T20:09:31Z'
    post:
      tags:
        - >-
          teams/{team id} > discussions > {discussion number} > comments >
          {comment number} > reactions
      summary: Create reaction for a team discussion comment (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`Create reaction for a team discussion
        comment`](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment)
        endpoint.


        Create a reaction to a [team discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/).
        OAuth access tokens require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        A response with a `Status: 200 OK` means that you already added the
        reaction type to this team discussion comment.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"content\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
  /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}:
    get:
      tags:
        - >-
          teams/{team id} > discussions > {discussion number} > comments >
          {comment number}
      summary: Get a discussion comment (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Get a discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/#get-a-discussion-comment)
        endpoint.


        Get a specific comment on a team discussion. OAuth access tokens require
        the `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Do you like apples?
                body_html: <p>Do you like apples?</p>
                body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
                created_at: '2018-01-15T23:53:58Z'
                last_edited_at: null
                discussion_url: https://api.github.com/teams/2403582/discussions/1
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
                node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
                number: 1
                updated_at: '2018-01-15T23:53:58Z'
                url: https://api.github.com/teams/2403582/discussions/1/comments/1
                reactions:
                  url: https://api.github.com/teams/2403582/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
    patch:
      tags:
        - >-
          teams/{team id} > discussions > {discussion number} > comments >
          {comment number}
      summary: Update a discussion comment (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Update a discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/#update-a-discussion-comment)
        endpoint.


        Edits the body text of a discussion comment. OAuth access tokens require
        the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Do you like pineapples?
                body_html: <p>Do you like pineapples?</p>
                body_version: e6907b24d9c93cc0c5024a7af5888116
                created_at: '2018-01-15T23:53:58Z'
                last_edited_at: '2018-01-26T18:22:20Z'
                discussion_url: https://api.github.com/teams/2403582/discussions/1
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
                node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
                number: 1
                updated_at: '2018-01-26T18:22:20Z'
                url: https://api.github.com/teams/2403582/discussions/1/comments/1
                reactions:
                  url: https://api.github.com/teams/2403582/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
    delete:
      tags:
        - >-
          teams/{team id} > discussions > {discussion number} > comments >
          {comment number}
      summary: Delete a discussion comment (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Delete a discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/#delete-a-discussion-comment)
        endpoint.


        Deletes a comment on a team discussion. OAuth access tokens require the
        `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: comment_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /teams/{team_id}/discussions/{discussion_number}/comments:
    get:
      tags:
        - teams/{team id} > discussions > {discussion number} > comments
      summary: List discussion comments (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [List discussion
        comments](https://developer.github.com/v3/teams/discussion_comments/#list-discussion-comments)
        endpoint.


        List all comments on a team discussion. OAuth access tokens require the
        `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - author:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Do you like apples?
                  body_html: <p>Do you like apples?</p>
                  body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
                  created_at: '2018-01-15T23:53:58Z'
                  last_edited_at: null
                  discussion_url: https://api.github.com/teams/2403582/discussions/1
                  html_url: >-
                    https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
                  node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
                  number: 1
                  updated_at: '2018-01-15T23:53:58Z'
                  url: >-
                    https://api.github.com/teams/2403582/discussions/1/comments/1
                  reactions:
                    url: >-
                      https://api.github.com/teams/2403582/discussions/1/reactions
                    total_count: 5
                    '+1': 3
                    '-1': 1
                    laugh: 0
                    confused: 0
                    heart: 1
                    hooray: 0
                    eyes: 1
                    rocket: 1
    post:
      tags:
        - teams/{team id} > discussions > {discussion number} > comments
      summary: Create a discussion comment (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Create a discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/#create-a-discussion-comment)
        endpoint.


        Creates a new comment on a team discussion. OAuth access tokens require
        the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Do you like apples?
                body_html: <p>Do you like apples?</p>
                body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
                created_at: '2018-01-15T23:53:58Z'
                last_edited_at: null
                discussion_url: https://api.github.com/teams/2403582/discussions/1
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
                node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
                number: 1
                updated_at: '2018-01-15T23:53:58Z'
                url: https://api.github.com/teams/2403582/discussions/1/comments/1
                reactions:
                  url: https://api.github.com/teams/2403582/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
  /teams/{team_id}/discussions/{discussion_number}/reactions:
    get:
      tags:
        - teams/{team id} > discussions > {discussion number} > reactions
      summary: List reactions for a team discussion (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`List reactions for a team
        discussion`](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion)
        endpoint.


        List the reactions to a [team
        discussion](https://developer.github.com/v3/teams/discussions/). OAuth
        access tokens require the `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: content
          in: query
          schema:
            type: string
          description: >-
            Returns a single [reaction
            type](https://developer.github.com/v3/reactions/#reaction-types).
            Omit this parameter to list all reactions to a team discussion.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDg6UmVhY3Rpb24x
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  content: heart
                  created_at: '2016-05-20T20:09:31Z'
    post:
      tags:
        - teams/{team id} > discussions > {discussion number} > reactions
      summary: Create reaction for a team discussion (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`Create reaction for a team
        discussion`](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion)
        endpoint.


        Create a reaction to a [team
        discussion](https://developer.github.com/v3/teams/discussions/). OAuth
        access tokens require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        A response with a `Status: 200 OK` means that you already added the
        reaction type to this team discussion.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"content\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDg6UmVhY3Rpb24x
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                content: heart
                created_at: '2016-05-20T20:09:31Z'
  /teams/{team_id}/discussions/{discussion_number}:
    get:
      tags:
        - teams/{team id} > discussions > {discussion number}
      summary: Get a discussion (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Get a
        discussion](https://developer.github.com/v3/teams/discussions/#get-a-discussion)
        endpoint.


        Get a specific discussion on a team's page. OAuth access tokens require
        the `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Hi! This is an area for us to collaborate as a team.
                body_html: <p>Hi! This is an area for us to collaborate as a team</p>
                body_version: 0d495416a700fb06133c612575d92bfb
                comments_count: 0
                comments_url: https://api.github.com/teams/2343027/discussions/1/comments
                created_at: '2018-01-25T18:56:31Z'
                last_edited_at: null
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1
                node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
                number: 1
                pinned: false
                private: false
                team_url: https://api.github.com/teams/2343027
                title: Our first team post
                updated_at: '2018-01-25T18:56:31Z'
                url: https://api.github.com/teams/2343027/discussions/1
                reactions:
                  url: https://api.github.com/teams/2343027/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
    patch:
      tags:
        - teams/{team id} > discussions > {discussion number}
      summary: Update a discussion (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Update a
        discussion](https://developer.github.com/v3/teams/discussions/#update-a-discussion)
        endpoint.


        Edits the title and body text of a discussion post. Only the parameters
        you provide are updated. OAuth access tokens require the
        `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"title\": \"<string>\",\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Hi! This is an area for us to collaborate as a team.
                body_html: <p>Hi! This is an area for us to collaborate as a team</p>
                body_version: 0d495416a700fb06133c612575d92bfb
                comments_count: 1
                comments_url: https://api.github.com/teams/2343027/discussions/1/comments
                created_at: '2018-01-25T18:56:31Z'
                last_edited_at: '2018-01-26T18:22:20Z'
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1
                node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
                number: 1
                pinned: false
                private: false
                team_url: https://api.github.com/teams/2343027
                title: Welcome to our first team post
                updated_at: '2018-01-26T18:22:20Z'
                url: https://api.github.com/teams/2343027/discussions/1
                reactions:
                  url: https://api.github.com/teams/2343027/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
    delete:
      tags:
        - teams/{team id} > discussions > {discussion number}
      summary: Delete a discussion (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`Delete a
        discussion`](https://developer.github.com/v3/teams/discussions/#delete-a-discussion)
        endpoint.


        Delete a discussion from a team's page. OAuth access tokens require the
        `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: discussion_number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /teams/{team_id}/discussions:
    get:
      tags:
        - teams/{team id} > discussions
      summary: List discussions (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`List
        discussions`](https://developer.github.com/v3/teams/discussions/#list-discussions)
        endpoint.


        List all discussions on a team's page. OAuth access tokens require the
        `read:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - author:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  body: Hi! This is an area for us to collaborate as a team.
                  body_html: <p>Hi! This is an area for us to collaborate as a team</p>
                  body_version: 0d495416a700fb06133c612575d92bfb
                  comments_count: 0
                  comments_url: https://api.github.com/teams/2343027/discussions/1/comments
                  created_at: '2018-01-25T18:56:31Z'
                  last_edited_at: null
                  html_url: >-
                    https://github.com/orgs/github/teams/justice-league/discussions/1
                  node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
                  number: 1
                  pinned: false
                  private: false
                  team_url: https://api.github.com/teams/2343027
                  title: Our first team post
                  updated_at: '2018-01-25T18:56:31Z'
                  url: https://api.github.com/teams/2343027/discussions/1
                  reactions:
                    url: >-
                      https://api.github.com/teams/2343027/discussions/1/reactions
                    total_count: 5
                    '+1': 3
                    '-1': 1
                    laugh: 0
                    confused: 0
                    heart: 1
                    hooray: 0
                    eyes: 1
                    rocket: 1
    post:
      tags:
        - teams/{team id} > discussions
      summary: Create a discussion (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`Create a
        discussion`](https://developer.github.com/v3/teams/discussions/#create-a-discussion)
        endpoint.


        Creates a new discussion post on a team's page. OAuth access tokens
        require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).


        This endpoint triggers
        [notifications](https://help.github.com/articles/about-notifications/).
        Creating content too quickly using this endpoint may result in abuse
        rate limiting. See "[Abuse rate
        limits](https://developer.github.com/v3/#abuse-rate-limits)" and
        "[Dealing with abuse rate
        limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)"
        for details.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"title\": \"<string>\",\n    \"body\":
                \"<string>\",\n    \"private\": false\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                author:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                body: Hi! This is an area for us to collaborate as a team.
                body_html: <p>Hi! This is an area for us to collaborate as a team</p>
                body_version: 0d495416a700fb06133c612575d92bfb
                comments_count: 0
                comments_url: https://api.github.com/teams/2343027/discussions/1/comments
                created_at: '2018-01-25T18:56:31Z'
                last_edited_at: null
                html_url: >-
                  https://github.com/orgs/github/teams/justice-league/discussions/1
                node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
                number: 1
                pinned: false
                private: false
                team_url: https://api.github.com/teams/2343027
                title: Our first team post
                updated_at: '2018-01-25T18:56:31Z'
                url: https://api.github.com/teams/2343027/discussions/1
                reactions:
                  url: https://api.github.com/teams/2343027/discussions/1/reactions
                  total_count: 5
                  '+1': 3
                  '-1': 1
                  laugh: 0
                  confused: 0
                  heart: 1
                  hooray: 0
                  eyes: 1
                  rocket: 1
  /teams/{team_id}/members/{username}:
    get:
      tags:
        - teams/{team id} > members > {username}
      summary: Get team member (Legacy)
      description: >-
        The "Get team member" endpoint (described below) is deprecated.


        We recommend using the [Get team membership for a
        user](https://developer.github.com/v3/teams/members/#get-team-membership-for-a-user)
        endpoint instead. It allows you to get both active and pending
        memberships.


        To list members in a team, the team must be visible to the authenticated
        user.
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - teams/{team id} > members > {username}
      summary: Add team member (Legacy)
      description: >-
        The "Add team member" endpoint (described below) is deprecated.


        We recommend using the [Add or update team membership for a
        user](https://developer.github.com/v3/teams/members/#add-or-update-team-membership-for-a-user)
        endpoint instead. It allows you to invite new organization members to
        your teams.


        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        To add someone to a team, the authenticated user must be an organization
        owner or a team maintainer in the team they're changing. The person
        being added to the team must be a member of the team's organization.


        **Note:** When you have team synchronization set up for a team with your
        organization's identity provider (IdP), you will see an error if you
        attempt to use the API for making changes to the team's membership. If
        you have access to manage group membership in your IdP, you can manage
        GitHub team membership through your identity provider, which
        automatically adds and removes team members in an organization. For more
        information, see "[Synchronizing teams between your identity provider
        and
        GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."
      requestBody:
        content: {}
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Cannot add an organization as a member.
                errors:
                  - code: org
                    field: user
                    resource: TeamMember
    delete:
      tags:
        - teams/{team id} > members > {username}
      summary: Remove team member (Legacy)
      description: >-
        The "Remove team member" endpoint (described below) is deprecated.


        We recommend using the [Remove team membership for a
        user](https://developer.github.com/v3/teams/members/#remove-team-membership-for-a-user)
        endpoint instead. It allows you to remove both active and pending
        memberships.


        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        To remove a team member, the authenticated user must have 'admin'
        permissions to the team or be an owner of the org that the team is
        associated with. Removing a team member does not delete the user, it
        just removes them from the team.


        **Note:** When you have team synchronization set up for a team with your
        organization's identity provider (IdP), you will see an error if you
        attempt to use the API for making changes to the team's membership. If
        you have access to manage group membership in your IdP, you can manage
        GitHub team membership through your identity provider, which
        automatically adds and removes team members in an organization. For more
        information, see "[Synchronizing teams between your identity provider
        and
        GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /teams/{team_id}/members:
    get:
      tags:
        - teams/{team id} > members
      summary: List team members (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`List team
        members`](https://developer.github.com/v3/teams/members/#list-team-members)
        endpoint.


        Team members will include the members of child teams.
      parameters:
        - name: role
          in: query
          schema:
            type: string
          description: |-
            Filters members returned by their role in the team. Can be one of:  
            \* `member` - normal members of the team.  
            \* `maintainer` - team maintainers.  
            \* `all` - all members of the team.
          example: all
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /teams/{team_id}/memberships/{username}:
    get:
      tags:
        - teams/{team id} > memberships/{username}
      summary: Get team membership for a user (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Get team membership for a
        user](https://developer.github.com/v3/teams/members/#get-team-membership-for-a-user)
        endpoint.


        Team members will include the members of child teams.


        To get a user's membership with a team, the team must be visible to the
        authenticated user.


        **Note:** The `role` for organization owners returns as `maintainer`.
        For more information about `maintainer` roles, see [Create a
        team](https://developer.github.com/v3/teams/#create-a-team).
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/teams/1/memberships/octocat
                role: member
                state: active
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - teams/{team id} > memberships/{username}
      summary: Add or update team membership for a user (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Add or update team membership for a
        user](https://developer.github.com/v3/teams/members/#add-or-update-team-membership-for-a-user)
        endpoint.


        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        If the user is already a member of the team's organization, this
        endpoint will add the user to the team. To add a membership between an
        organization member and a team, the authenticated user must be an
        organization owner or a team maintainer.


        **Note:** When you have team synchronization set up for a team with your
        organization's identity provider (IdP), you will see an error if you
        attempt to use the API for making changes to the team's membership. If
        you have access to manage group membership in your IdP, you can manage
        GitHub team membership through your identity provider, which
        automatically adds and removes team members in an organization. For more
        information, see "[Synchronizing teams between your identity provider
        and
        GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        If the user is unaffiliated with the team's organization, this endpoint
        will send an invitation to the user via email. This newly-created
        membership will be in the "pending" state until the user accepts the
        invitation, at which point the membership will transition to the
        "active" state and the user will be added as a member of the team. To
        add a membership between an unaffiliated user and a team, the
        authenticated user must be an organization owner.


        If the user is already a member of the team, this endpoint will update
        the role of the team member's role. To update the membership of a team
        member, the authenticated user must be an organization owner or a team
        maintainer.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"role\": \"member\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/teams/1/memberships/octocat
                role: member
                state: active
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Cannot add an organization as a member.
                errors:
                  - code: org
                    field: user
                    resource: TeamMember
    delete:
      tags:
        - teams/{team id} > memberships/{username}
      summary: Remove team membership for a user (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Remove team membership for a
        user](https://developer.github.com/v3/teams/members/#remove-team-membership-for-a-user)
        endpoint.


        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        To remove a membership between a user and a team, the authenticated user
        must have 'admin' permissions to the team or be an owner of the
        organization that the team is associated with. Removing team membership
        does not delete the user, it just removes their membership from the
        team.


        **Note:** When you have team synchronization set up for a team with your
        organization's identity provider (IdP), you will see an error if you
        attempt to use the API for making changes to the team's membership. If
        you have access to manage group membership in your IdP, you can manage
        GitHub team membership through your identity provider, which
        automatically adds and removes team members in an organization. For more
        information, see "[Synchronizing teams between your identity provider
        and
        GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /teams/{team_id}/projects/{project_id}:
    get:
      tags:
        - teams/{team id} > projects > {project id}
      summary: Check team permissions for a project (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Check team permissions for a
        project](https://developer.github.com/v3/teams/#check-team-permissions-for-a-project)
        endpoint.


        Checks whether a team has `read`, `write`, or `admin` permissions for an
        organization project. The response includes projects inherited from a
        parent team.
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                owner_url: https://api.github.com/orgs/octocat
                url: https://api.github.com/projects/1002605
                html_url: https://github.com/orgs/api-playground/projects/1
                columns_url: https://api.github.com/projects/1002605/columns
                id: 1002605
                node_id: MDc6UHJvamVjdDEwMDI2MDU=
                name: Organization Roadmap
                body: High-level roadmap for the upcoming year.
                number: 1
                state: open
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-11T20:09:31Z'
                updated_at: '2014-03-04T18:58:10Z'
                organization_permission: write
                private: false
                permissions:
                  read: true
                  write: true
                  admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
    put:
      tags:
        - teams/{team id} > projects > {project id}
      summary: Add or update team project permissions (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Add or update team project
        permissions](https://developer.github.com/v3/teams/#add-or-update-team-project-permissions)
        endpoint.


        Adds an organization project to a team. To add a project to a team or
        update the team's permission on a project, the authenticated user must
        have `admin` permissions for the project. The project and team must be
        part of the same organization.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"permission\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: Must have admin rights to Repository.
                documentation_url: >-
                  https://developer.github.com/v3/teams/#add-or-update-team-project-permissions
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - teams/{team id} > projects > {project id}
      summary: Remove a project from a team (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Remove a project from a
        team](https://developer.github.com/v3/teams/#remove-a-project-from-a-team)
        endpoint.


        Removes an organization project from a team. An organization owner or a
        team maintainer can remove any project from the team. To remove a
        project from a team as an organization member, the authenticated user
        must have `read` access to both the team and project, or `admin` access
        to the team or project. **Note:** This endpoint removes the project from
        the team, but does not delete it.
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /teams/{team_id}/projects:
    get:
      tags:
        - teams/{team id} > projects
      summary: List team projects (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`List team
        projects`](https://developer.github.com/v3/teams/#list-team-projects)
        endpoint.


        Lists the organization projects for a team.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - owner_url: https://api.github.com/orgs/octocat
                  url: https://api.github.com/projects/1002605
                  html_url: https://github.com/orgs/api-playground/projects/1
                  columns_url: https://api.github.com/projects/1002605/columns
                  id: 1002605
                  node_id: MDc6UHJvamVjdDEwMDI2MDU=
                  name: Organization Roadmap
                  body: High-level roadmap for the upcoming year.
                  number: 1
                  state: open
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-11T20:09:31Z'
                  updated_at: '2014-03-04T18:58:10Z'
                  organization_permission: write
                  private: false
                  permissions:
                    read: true
                    write: true
                    admin: false
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /teams/{team_id}/repos/{owner}/{repo}:
    get:
      tags:
        - teams/{team id} > repos > {owner}/{repo}
      summary: Check team permissions for a repository (Legacy)
      description: >-
        **Note**: Repositories inherited through a parent team will also be
        checked.


        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Check team permissions for a
        repository](https://developer.github.com/v3/teams/#check-team-permissions-for-a-repository)
        endpoint.


        You can also get information about the specified repository, including
        what permissions the team grants on it, by passing the following custom
        [media type](https://developer.github.com/v3/media/) via the `Accept`
        header:
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/vnd.github.v3.repository+json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                language: null
                forks_count: 9
                stargazers_count: 80
                watchers_count: 80
                size: 108
                default_branch: master
                open_issues_count: 0
                is_template: true
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  admin: false
                  push: false
                  pull: true
                allow_rebase_merge: true
                template_repository: null
                temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                allow_squash_merge: true
                delete_branch_on_merge: true
                allow_merge_commit: true
                subscribers_count: 42
                network_count: 0
                license:
                  key: mit
                  name: MIT License
                  url: https://api.github.com/licenses/mit
                  spdx_id: MIT
                  node_id: MDc6TGljZW5zZW1pdA==
                  html_url: https://api.github.com/licenses/mit
                forks: 1
                open_issues: 1
                watchers: 1
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - teams/{team id} > repos > {owner}/{repo}
      summary: Add or update team repository permissions (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Add or update team repository
        permissions](https://developer.github.com/v3/teams/#add-or-update-team-repository-permissions)
        endpoint.


        To add a repository to a team or update the team's permission on a
        repository, the authenticated user must have admin access to the
        repository, and must be able to see the team. The repository must be
        owned by the organization, or a direct fork of a repository owned by the
        organization. You will get a `422 Unprocessable Entity` status if you
        attempt to add a repository to a team that is not owned by the
        organization.


        Note that, if you choose not to pass any parameters, you'll need to set
        `Content-Length` to zero when calling out to this endpoint. For more
        information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"permission\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - teams/{team id} > repos > {owner}/{repo}
      summary: Remove a repository from a team (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Remove a repository from a
        team](https://developer.github.com/v3/teams/#remove-a-repository-from-a-team)
        endpoint.


        If the authenticated user is an organization owner or a team maintainer,
        they can remove any repositories from the team. To remove a repository
        from a team as an organization member, the authenticated user must have
        admin access to the repository and must be able to see the team. NOTE:
        This does not delete the repository, it just removes it from the team.
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /teams/{team_id}/repos:
    get:
      tags:
        - teams/{team id} > repos
      summary: List team repositories (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [List team
        repositories](https://developer.github.com/v3/teams/#list-team-repositories)
        endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  template_repository: octocat/template
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /teams/{team_id}/team-sync/group-mappings:
    get:
      tags:
        - teams/{team id} > team-sync/group-mappings
      summary: List IdP groups for a team (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`List IdP groups for a
        team`](https://developer.github.com/v3/teams/team_sync/#list-idp-groups-for-a-team)
        endpoint.


        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        List IdP groups connected to a team on GitHub.
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                groups:
                  - group_id: '123'
                    group_name: Octocat admins
                    group_description: The people who configure your octoworld.
                  - group_id: '456'
                    group_name: Octocat docs members
                    group_description: The people who make your octoworld come to life.
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - teams/{team id} > team-sync/group-mappings
      summary: Create or update IdP group connections (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`Create or update IdP group
        connections`](https://developer.github.com/v3/teams/team_sync/#create-or-update-idp-group-connections)
        endpoint.


        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://help.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Creates, updates, or removes a connection between a team and an IdP
        group. When adding groups to a team, you must include all new and
        existing groups to avoid replacing existing groups with the new ones.
        Specifying an empty `groups` array will remove all connections for a
        team.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"groups\": [\n        {\n            \"group_id\":
                \"<string>\",\n            \"group_name\":
                \"<string>\",\n            \"group_description\":
                \"<string>\",\n            \"id\": \"<string>\",\n           
                \"name\": \"<string>\",\n            \"description\":
                \"<string>\"\n        },\n        {\n            \"group_id\":
                \"<string>\",\n            \"group_name\":
                \"<string>\",\n            \"group_description\":
                \"<string>\",\n            \"id\": \"<string>\",\n           
                \"name\": \"<string>\",\n            \"description\":
                \"<string>\"\n        }\n    ],\n    \"synced_at\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                groups:
                  - group_id: '123'
                    group_name: Octocat admins
                    group_description: The people who configure your octoworld.
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /teams/{team_id}:
    get:
      tags:
        - teams/{team id}
      summary: Get a team (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the [Get a team by
        name](https://developer.github.com/v3/teams/#get-a-team-by-name)
        endpoint.
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://api.github.com/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
                members_count: 3
                repos_count: 10
                created_at: '2017-07-14T16:53:42Z'
                updated_at: '2017-08-17T12:37:15Z'
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                  name: github
                  company: GitHub
                  blog: https://github.com/blog
                  location: San Francisco
                  email: octocat@github.com
                  is_verified: true
                  has_organization_projects: true
                  has_repository_projects: true
                  public_repos: 2
                  public_gists: 1
                  followers: 20
                  following: 0
                  html_url: https://github.com/octocat
                  created_at: '2008-01-14T04:33:35Z'
                  updated_at: '2017-08-17T12:37:15Z'
                  type: Organization
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - teams/{team id}
      summary: Update a team (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Update a
        team](https://developer.github.com/v3/teams/#update-a-team) endpoint.


        To edit a team, the authenticated user must either be an organization
        owner or a team maintainer.


        **Note:** With nested teams, the `privacy` for parent teams cannot be
        `secret`.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"description\":
                \"<string>\",\n    \"privacy\": \"<string>\",\n   
                \"permission\": \"pull\",\n    \"parent_team_id\":
                \"<integer>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://api.github.com/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
                members_count: 3
                repos_count: 10
                created_at: '2017-07-14T16:53:42Z'
                updated_at: '2017-08-17T12:37:15Z'
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                  name: github
                  company: GitHub
                  blog: https://github.com/blog
                  location: San Francisco
                  email: octocat@github.com
                  is_verified: true
                  has_organization_projects: true
                  has_repository_projects: true
                  public_repos: 2
                  public_gists: 1
                  followers: 20
                  following: 0
                  html_url: https://github.com/octocat
                  created_at: '2008-01-14T04:33:35Z'
                  updated_at: '2017-08-17T12:37:15Z'
                  type: Organization
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - teams/{team id}
      summary: Delete a team (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [Delete a
        team](https://developer.github.com/v3/teams/#delete-a-team) endpoint.


        To delete a team, the authenticated user must be an organization owner
        or team maintainer.


        If you are an organization owner, deleting a parent team will delete all
        of its child teams as well.
      parameters:
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /teams/{team_id}/invitations:
    get:
      tags:
        - teams/{team id}
      summary: List pending team invitations (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`List pending team
        invitations`](https://developer.github.com/v3/teams/members/#list-pending-team-invitations)
        endpoint.


        The return hash contains a `role` field which refers to the Organization
        Invitation role and will be one of the following values:
        `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or
        `reinstate`. If the invitee is not a GitHub member, the `login` field in
        the return hash will be `null`.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  login: monalisa
                  email: octocat@github.com
                  role: direct_member
                  created_at: '2016-11-30T06:46:10-08:00'
                  inviter:
                    login: other_user
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/other_user_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/other_user
                    html_url: https://github.com/other_user
                    followers_url: https://api.github.com/users/other_user/followers
                    following_url: >-
                      https://api.github.com/users/other_user/following{/other_user}
                    gists_url: https://api.github.com/users/other_user/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/other_user/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/other_user/subscriptions
                    organizations_url: https://api.github.com/users/other_user/orgs
                    repos_url: https://api.github.com/users/other_user/repos
                    events_url: https://api.github.com/users/other_user/events{/privacy}
                    received_events_url: https://api.github.com/users/other_user/received_events
                    type: User
                    site_admin: false
                  team_count: 2
                  invitation_team_url: https://api.github.com/organizations/2/invitations/1/teams
  /teams/{team_id}/teams:
    get:
      tags:
        - teams/{team id}
      summary: List child teams (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Teams API. We recommend migrating your existing code to
        use the new [`List child
        teams`](https://developer.github.com/v3/teams/#list-child-teams)
        endpoint.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 2
                  node_id: MDQ6VGVhbTI=
                  url: https://api.github.com/teams/2
                  name: Original Roster
                  slug: original-roster
                  description: Started it all.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/2/members{/member}
                  repositories_url: https://api.github.com/teams/2/repos
                  parent:
                    id: 1
                    node_id: MDQ6VGVhbTE=
                    url: https://api.github.com/teams/1
                    html_url: https://api.github.com/teams/justice-league
                    name: Justice League
                    slug: justice-league
                    description: A great team.
                    privacy: closed
                    permission: admin
                    members_url: https://api.github.com/teams/1/members{/member}
                    repositories_url: https://api.github.com/teams/1/repos
                  html_url: https://github.com/orgs/rails/teams/core
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/blocks/{username}:
    get:
      tags:
        - user > blocks > {username}
      summary: Check if a user is blocked by the authenticated user
      description: |-
        If the user is blocked:

        If the user is not blocked:
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - user > blocks > {username}
      summary: Block a user
      requestBody:
        content: {}
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - user > blocks > {username}
      summary: Unblock a user
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/blocks:
    get:
      tags:
        - user > blocks
      summary: List users blocked by the authenticated user
      description: List the users you've blocked on your personal account.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /user/emails:
    get:
      tags:
        - user > emails
      summary: List email addresses for the authenticated user
      description: >-
        Lists all of your email addresses, and specifies which one is visible to
        the public. This endpoint is accessible with the `user:email` scope.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - email: octocat@github.com
                  verified: true
                  primary: true
                  visibility: public
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - user > emails
      summary: Add an email address for the authenticated user
      description: This endpoint is accessible with the `user` scope.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"emails\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - email: octocat@octocat.org
                  primary: false
                  verified: false
                  visibility: public
                - email: octocat@github.com
                  primary: false
                  verified: false
                  visibility: null
                - email: mona@github.com
                  primary: false
                  verified: false
                  visibility: null
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    delete:
      tags:
        - user > emails
      summary: Delete an email address for the authenticated user
      description: This endpoint is accessible with the `user` scope.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/following/{username}:
    get:
      tags:
        - user > following > {username}
      summary: Check if a person is followed by the authenticated user
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - user > following > {username}
      summary: Follow a user
      description: >-
        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."


        Following a user requires the user to be logged in and authenticated
        with basic auth or OAuth with the `user:follow` scope.
      requestBody:
        content: {}
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - user > following > {username}
      summary: Unfollow a user
      description: >-
        Unfollowing a user requires the user to be logged in and authenticated
        with basic auth or OAuth with the `user:follow` scope.
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/following:
    get:
      tags:
        - user > following
      summary: List the people the authenticated user follows
      description: Lists the people who the authenticated user follows.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/gpg_keys/{gpg_key_id}:
    get:
      tags:
        - user > gpg keys > {gpg key id}
      summary: Get a GPG key for the authenticated user
      description: >-
        View extended details for a single GPG key. Requires that you are
        authenticated via Basic Auth or via OAuth with at least `read:gpg_key`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: gpg_key_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gpg_key_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 3
                primary_key_id: 2
                key_id: 3262EFF25BA0D270
                public_key: xsBNBFayYZ...
                emails:
                  - email: mastahyeti@users.noreply.github.com
                    verified: true
                subkeys:
                  - id: 4
                    primary_key_id: 3
                    key_id: 4A595D4C72EE49C7
                    public_key: zsBNBFayYZ...
                    emails: []
                    subkeys: []
                    can_sign: false
                    can_encrypt_comms: true
                    can_encrypt_storage: true
                    can_certify: false
                    created_at: '2016-03-24T11:31:04-06:00'
                    expires_at: '2016-03-24T11:31:04-07:00'
                can_sign: true
                can_encrypt_comms: false
                can_encrypt_storage: false
                can_certify: true
                created_at: '2016-03-24T11:31:04-06:00'
                expires_at: '2016-03-24T11:31:04-07:00'
                raw_key: >-
                  "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG
                  v2\n\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\nIts/HFYRLiFgDLmTlxo=\n=+OzK\n-----END
                  PGP PUBLIC KEY BLOCK-----"
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - user > gpg keys > {gpg key id}
      summary: Delete a GPG key for the authenticated user
      description: >-
        Removes a GPG key from the authenticated user's GitHub account. Requires
        that you are authenticated via Basic Auth or via OAuth with at least
        `admin:gpg_key`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: gpg_key_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) gpg_key_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/gpg_keys:
    get:
      tags:
        - user > gpg keys
      summary: List GPG keys for the authenticated user
      description: >-
        Lists the current user's GPG keys. Requires that you are authenticated
        via Basic Auth or via OAuth with at least `read:gpg_key`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 3
                  primary_key_id: 2
                  key_id: 3262EFF25BA0D270
                  public_key: xsBNBFayYZ...
                  emails:
                    - email: mastahyeti@users.noreply.github.com
                      verified: true
                  subkeys:
                    - id: 4
                      primary_key_id: 3
                      key_id: 4A595D4C72EE49C7
                      public_key: zsBNBFayYZ...
                      emails: []
                      subkeys: []
                      can_sign: false
                      can_encrypt_comms: true
                      can_encrypt_storage: true
                      can_certify: false
                      created_at: '2016-03-24T11:31:04-06:00'
                      expires_at: '2016-03-24T11:31:04-07:00'
                  can_sign: true
                  can_encrypt_comms: false
                  can_encrypt_storage: false
                  can_certify: true
                  created_at: '2016-03-24T11:31:04-06:00'
                  expires_at: '2016-03-24T11:31:04-07:00'
                  raw_key: string
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - user > gpg keys
      summary: Create a GPG key for the authenticated user
      description: >-
        Adds a GPG key to the authenticated user's GitHub account. Requires that
        you are authenticated via Basic Auth, or OAuth with at least
        `write:gpg_key`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"armored_public_key\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 3
                primary_key_id: 2
                key_id: 3262EFF25BA0D270
                public_key: xsBNBFayYZ...
                emails:
                  - email: mastahyeti@users.noreply.github.com
                    verified: true
                subkeys:
                  - id: 4
                    primary_key_id: 3
                    key_id: 4A595D4C72EE49C7
                    public_key: zsBNBFayYZ...
                    emails: []
                    subkeys: []
                    can_sign: false
                    can_encrypt_comms: true
                    can_encrypt_storage: true
                    can_certify: false
                    created_at: '2016-03-24T11:31:04-06:00'
                    expires_at: '2016-03-24T11:31:04-07:00'
                can_sign: true
                can_encrypt_comms: false
                can_encrypt_storage: false
                can_certify: true
                created_at: '2016-03-24T11:31:04-06:00'
                expires_at: '2016-03-24T11:31:04-07:00'
                raw_key: >-
                  "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG
                  v2\n\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\nIts/HFYRLiFgDLmTlxo=\n=+OzK\n-----END
                  PGP PUBLIC KEY BLOCK-----"
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/installations/{installation_id}/repositories/{repository_id}:
    put:
      tags:
        - >-
          user > installations > {installation id}/repositories > {repository
          id}
      summary: Add a repository to an app installation
      description: >-
        Add a single repository to an installation. The authenticated user must
        have admin access to the repository.


        You must use a personal access token (which you can create via the
        [command
        line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/)
        or the [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization))
        or [Basic
        Authentication](https://developer.github.com/v3/auth/#basic-authentication)
        to access this endpoint.
      requestBody:
        content: {}
      parameters:
        - name: installation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) installation_id parameter
          example: <integer>
        - name: repository_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) repository_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - >-
          user > installations > {installation id}/repositories > {repository
          id}
      summary: Remove a repository from an app installation
      description: >-
        Remove a single repository from an installation. The authenticated user
        must have admin access to the repository.


        You must use a personal access token (which you can create via the
        [command
        line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/)
        or the [OAuth Authorizations
        API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization))
        or [Basic
        Authentication](https://developer.github.com/v3/auth/#basic-authentication)
        to access this endpoint.
      parameters:
        - name: installation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) installation_id parameter
          example: <integer>
        - name: repository_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) repository_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/installations/{installation_id}/repositories:
    get:
      tags:
        - user > installations > {installation id}/repositories
      summary: List repositories accessible to the user access token
      description: >-
        List repositories that the authenticated user has explicit permission
        (`:read`, `:write`, or `:admin`) to access for an installation.


        The authenticated user has explicit permission to access repositories
        they own, repositories where they are a collaborator, and repositories
        that they can access through an organization membership.


        You must use a [user-to-server OAuth access
        token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site),
        created for a user who has authorized your GitHub App, to access this
        endpoint.


        The access the user has to each repository is included in the hash under
        the `permissions` key.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: installation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) installation_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 1
                repositories:
                  - id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/installations:
    get:
      tags:
        - user > installations
      summary: List app installations accessible to the user access token
      description: >-
        Lists installations of your GitHub App that the authenticated user has
        explicit permission (`:read`, `:write`, or `:admin`) to access.


        You must use a [user-to-server OAuth access
        token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site),
        created for a user who has authorized your GitHub App, to access this
        endpoint.


        The authenticated user has explicit permission to access repositories
        they own, repositories where they are a collaborator, and repositories
        that they can access through an organization membership.


        You can find the permissions for the installation under the
        `permissions` key.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_count: 2
                installations:
                  - id: 1
                    account:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    access_tokens_url: https://api.github.com/installations/1/access_tokens
                    repositories_url: https://api.github.com/installation/repositories
                    html_url: >-
                      https://github.com/organizations/github/settings/installations/1
                    app_id: 1
                    target_id: 1
                    target_type: Organization
                    permissions:
                      checks: write
                      metadata: read
                      contents: read
                    events:
                      - push
                      - pull_request
                    single_file_name: config.yml
                    repository_selection: all
                    created_at: '2017-07-08T16:18:44-04:00'
                    updated_at: '2017-07-08T16:18:44-04:00'
                    app_slug: github-actions
                  - id: 3
                    account:
                      login: octocat
                      id: 2
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    access_tokens_url: https://api.github.com/installations/1/access_tokens
                    repositories_url: https://api.github.com/installation/repositories
                    html_url: >-
                      https://github.com/organizations/github/settings/installations/1
                    app_id: 1
                    target_id: 1
                    target_type: Organization
                    permissions:
                      checks: write
                      metadata: read
                      contents: read
                    events:
                      - push
                      - pull_request
                    single_file_name: config.yml
                    repository_selection: all
                    created_at: '2017-07-08T16:18:44-04:00'
                    updated_at: '2017-07-08T16:18:44-04:00'
                    app_slug: github-actions
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /user/keys/{key_id}:
    get:
      tags:
        - user > keys > {key id}
      summary: Get a public SSH key for the authenticated user
      description: >-
        View extended details for a single public SSH key. Requires that you are
        authenticated via Basic Auth or via OAuth with at least
        `read:public_key`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) key_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key_id: '012345678912345678'
                key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
                id: 2
                url: https://api.github.com/user/keys/2
                title: ssh-rsa AAAAB3NzaC1yc2EAAA
                created_at: '2020-06-11T21:31:57Z'
                verified: false
                read_only: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - user > keys > {key id}
      summary: Delete a public SSH key for the authenticated user
      description: >-
        Removes a public SSH key from the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at
        least `admin:public_key`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) key_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/keys:
    get:
      tags:
        - user > keys
      summary: List public SSH keys for the authenticated user
      description: >-
        Lists the public SSH keys for the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at
        least `read:public_key`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - key_id: '012345678912345678'
                  key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
                  id: 2
                  url: https://api.github.com/user/keys/2
                  title: ssh-rsa AAAAB3NzaC1yc2EAAA
                  created_at: '2020-06-11T21:31:57Z'
                  verified: false
                  read_only: false
                - key_id: '012345678912345608'
                  key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234
                  id: 3
                  url: https://api.github.com/user/keys/3
                  title: ssh-rsa AAAAB3NzaC1yc2EAAB
                  created_at: '2020-07-11T21:31:57Z'
                  verified: false
                  read_only: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - user > keys
      summary: Create a public SSH key for the authenticated user
      description: >-
        Adds a public SSH key to the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth, or OAuth with at
        least `write:public_key`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"key\": \"<string>\",\n    \"title\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key_id: '012345678912345678'
                key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
                id: 2
                url: https://api.github.com/user/keys/2
                title: ssh-rsa AAAAB3NzaC1yc2EAAA
                created_at: '2020-06-11T21:31:57Z'
                verified: false
                read_only: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/marketplace_purchases:
    get:
      tags:
        - user > marketplace purchases
      summary: List subscriptions for the authenticated user
      description: >-
        Lists the active subscriptions for the authenticated user. You must use
        a [user-to-server OAuth access
        token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site),
        created for a user who has authorized your GitHub App, to access this
        endpoint. . OAuth Apps must authenticate using an [OAuth
        token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/).
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - billing_cycle: monthly
                  next_billing_date: '2017-11-11T00:00:00Z'
                  unit_count: null
                  on_free_trial: true
                  free_trial_ends_on: '2017-11-11T00:00:00Z'
                  updated_at: '2017-11-02T01:12:12Z'
                  account:
                    login: github
                    id: 4
                    url: https://api.github.com/orgs/github
                    email: null
                    organization_billing_email: billing@github.com
                    type: Organization
                  plan:
                    url: https://api.github.com/marketplace_listing/plans/1313
                    accounts_url: >-
                      https://api.github.com/marketplace_listing/plans/1313/accounts
                    id: 1313
                    number: 3
                    name: Pro
                    description: A professional-grade CI solution
                    monthly_price_in_cents: 1099
                    yearly_price_in_cents: 11870
                    price_model: flat-rate
                    has_free_trial: true
                    unit_name: null
                    state: published
                    bullets:
                      - Up to 25 private repositories
                      - 11 concurrent builds
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/marketplace_purchases/stubbed:
    get:
      tags:
        - user > marketplace purchases
      summary: List subscriptions for the authenticated user (stubbed)
      description: >-
        Lists the active subscriptions for the authenticated user. You must use
        a [user-to-server OAuth access
        token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site),
        created for a user who has authorized your GitHub App, to access this
        endpoint. . OAuth Apps must authenticate using an [OAuth
        token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/).
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - billing_cycle: monthly
                  next_billing_date: '2017-11-11T00:00:00Z'
                  unit_count: null
                  on_free_trial: true
                  free_trial_ends_on: '2017-11-11T00:00:00Z'
                  updated_at: '2017-11-02T01:12:12Z'
                  account:
                    login: github
                    id: 4
                    url: https://api.github.com/orgs/github
                    email: null
                    organization_billing_email: billing@github.com
                    type: Organization
                  plan:
                    url: https://api.github.com/marketplace_listing/plans/1313
                    accounts_url: >-
                      https://api.github.com/marketplace_listing/plans/1313/accounts
                    id: 1313
                    number: 3
                    name: Pro
                    description: A professional-grade CI solution
                    monthly_price_in_cents: 1099
                    yearly_price_in_cents: 11870
                    price_model: flat-rate
                    has_free_trial: true
                    unit_name: null
                    state: published
                    bullets:
                      - Up to 25 private repositories
                      - 11 concurrent builds
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/memberships/orgs/{org}:
    get:
      tags:
        - user > memberships/orgs > {org}
      summary: Get an organization membership for the authenticated user
      parameters:
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/orgs/invitocat/memberships/defunkt
                state: pending
                role: admin
                organization_url: https://api.github.com/orgs/invitocat
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - user > memberships/orgs > {org}
      summary: Update an organization membership for the authenticated user
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"state\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://api.github.com/orgs/octocat/memberships/defunkt
                state: active
                role: admin
                organization_url: https://api.github.com/orgs/octocat
                organization:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
                user:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/memberships/orgs:
    get:
      tags:
        - user > memberships/orgs
      summary: List organization memberships for the authenticated user
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: >-
            Indicates the state of the memberships to return. Can be either
            `active` or `pending`. If not specified, the API returns both active
            and pending memberships.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/orgs/octocat/memberships/defunkt
                  state: active
                  role: admin
                  organization_url: https://api.github.com/orgs/octocat
                  organization:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    hooks_url: https://api.github.com/orgs/github/hooks
                    issues_url: https://api.github.com/orgs/github/issues
                    members_url: https://api.github.com/orgs/github/members{/member}
                    public_members_url: https://api.github.com/orgs/github/public_members{/member}
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    description: A great organization
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                - url: https://api.github.com/orgs/invitocat/memberships/defunkt
                  state: pending
                  role: admin
                  organization_url: https://api.github.com/orgs/invitocat
                  organization:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    hooks_url: https://api.github.com/orgs/github/hooks
                    issues_url: https://api.github.com/orgs/github/issues
                    members_url: https://api.github.com/orgs/github/members{/member}
                    public_members_url: https://api.github.com/orgs/github/public_members{/member}
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    description: A great organization
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/migrations/{migration_id}/archive:
    get:
      tags:
        - user > migrations > {migration id} > archive
      summary: Download a user migration archive
      description: >-
        Fetches the URL to download the migration archive as a `tar.gz` file.
        Depending on the resources your repository uses, the migration archive
        can contain JSON files with data for these objects:


        *   attachments

        *   bases

        *   commit\_comments

        *   issue\_comments

        *   issue\_events

        *   issues

        *   milestones

        *   organizations

        *   projects

        *   protected\_branches

        *   pull\_request\_reviews

        *   pull\_requests

        *   releases

        *   repositories

        *   review\_comments

        *   schema

        *   users


        The archive will also contain an `attachments` directory that includes
        all attachment files uploaded to GitHub.com and a `repositories`
        directory that contains the repository's Git data.
      parameters:
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
      responses:
        '302':
          description: Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - user > migrations > {migration id} > archive
      summary: Delete a user migration archive
      description: >-
        Deletes a previous migration archive. Downloadable migration archives
        are automatically deleted after seven days. Migration metadata, which is
        returned in the [List user
        migrations](https://developer.github.com/v3/migrations/users/#list-user-migrations)
        and [Get a user migration
        status](https://developer.github.com/v3/migrations/users/#get-a-user-migration-status)
        endpoints, will continue to be available even after an archive is
        deleted.
      parameters:
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/migrations/{migration_id}:
    get:
      tags:
        - user > migrations > {migration id}
      summary: Get a user migration status
      description: >-
        Fetches a single user migration. The response includes the `state` of
        the migration, which can be one of the following values:


        *   `pending` - the migration hasn't started yet.

        *   `exporting` - the migration is in progress.

        *   `exported` - the migration finished successfully.

        *   `failed` - the migration failed.


        Once the migration has been `exported` you can [download the migration
        archive](https://developer.github.com/v3/migrations/users/#download-a-user-migration-archive).
      parameters:
        - name: exclude
          in: query
          schema:
            type: string
          example: <string>
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 79
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
                state: exported
                lock_repositories: true
                exclude_attachments: false
                repositories:
                  - id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://api.github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                url: https://api.github.com/orgs/octo-org/migrations/79
                created_at: '2015-07-06T15:33:38-07:00'
                updated_at: '2015-07-06T15:33:38-07:00'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/migrations/{migration_id}/repos/{repo_name}/lock:
    delete:
      tags:
        - user > migrations > {migration id}
      summary: Unlock a user repository
      description: >-
        Unlocks a repository. You can lock repositories when you [start a user
        migration](https://developer.github.com/v3/migrations/users/#start-a-user-migration).
        Once the migration is complete you can unlock each repository to begin
        using it again or [delete the
        repository](https://developer.github.com/v3/repos/#delete-a-repository)
        if you no longer need the source data. Returns a status of `404 Not
        Found` if the repository is not locked.
      parameters:
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
        - name: repo_name
          in: path
          schema:
            type: string
          required: true
          description: (Required) repo_name parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/migrations/{migration_id}/repositories:
    get:
      tags:
        - user > migrations > {migration id}
      summary: List repositories for a user migration
      description: Lists all the repositories for this user migration.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: migration_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) migration_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  template_repository: octocat/template
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/migrations:
    get:
      tags:
        - user > migrations
      summary: List user migrations
      description: Lists all migrations a user has started.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 79
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
                  state: pending
                  lock_repositories: true
                  exclude_attachments: false
                  repositories:
                    - id: 1296269
                      node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                      name: Hello-World
                      full_name: octocat/Hello-World
                      owner:
                        login: octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        gravatar_id: ''
                        url: https://api.github.com/users/octocat
                        html_url: https://github.com/octocat
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        organizations_url: https://api.github.com/users/octocat/orgs
                        repos_url: https://api.github.com/users/octocat/repos
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        received_events_url: https://api.github.com/users/octocat/received_events
                        type: User
                        site_admin: false
                      private: false
                      html_url: https://github.com/octocat/Hello-World
                      description: This your first repo!
                      fork: false
                      url: https://api.github.com/repos/octocat/Hello-World
                      archive_url: >-
                        https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                      assignees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                      blobs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                      branches_url: >-
                        https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                      collaborators_url: >-
                        https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/comments{/number}
                      commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                      compare_url: >-
                        https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                      contents_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                      contributors_url: >-
                        https://api.github.com/repos/octocat/Hello-World/contributors
                      deployments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/deployments
                      downloads_url: >-
                        https://api.github.com/repos/octocat/Hello-World/downloads
                      events_url: https://api.github.com/repos/octocat/Hello-World/events
                      forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                      git_commits_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                      git_refs_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                      git_tags_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                      git_url: git:github.com/octocat/Hello-World.git
                      issue_comment_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                      issue_events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                      issues_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues{/number}
                      keys_url: >-
                        https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels{/name}
                      languages_url: >-
                        https://api.github.com/repos/octocat/Hello-World/languages
                      merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                      milestones_url: >-
                        https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                      notifications_url: >-
                        https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                      pulls_url: >-
                        https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                      releases_url: >-
                        https://api.github.com/repos/octocat/Hello-World/releases{/id}
                      ssh_url: git@github.com:octocat/Hello-World.git
                      stargazers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/stargazers
                      statuses_url: >-
                        https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                      subscribers_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscribers
                      subscription_url: >-
                        https://api.github.com/repos/octocat/Hello-World/subscription
                      tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                      teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                      trees_url: >-
                        https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                      clone_url: https://github.com/octocat/Hello-World.git
                      mirror_url: git:git.example.com/octocat/Hello-World
                      hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                      svn_url: https://svn.github.com/octocat/Hello-World
                      homepage: https://github.com
                      language: null
                      forks_count: 9
                      stargazers_count: 80
                      watchers_count: 80
                      size: 108
                      default_branch: master
                      open_issues_count: 0
                      is_template: true
                      topics:
                        - octocat
                        - atom
                        - electron
                        - api
                      has_issues: true
                      has_projects: true
                      has_wiki: true
                      has_pages: false
                      has_downloads: true
                      archived: false
                      disabled: false
                      visibility: public
                      pushed_at: '2011-01-26T19:06:43Z'
                      created_at: '2011-01-26T19:01:12Z'
                      updated_at: '2011-01-26T19:14:43Z'
                      permissions:
                        admin: false
                        push: false
                        pull: true
                      allow_rebase_merge: true
                      template_repository: null
                      temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                      allow_squash_merge: true
                      delete_branch_on_merge: true
                      allow_merge_commit: true
                      subscribers_count: 42
                      network_count: 0
                      license:
                        key: mit
                        name: MIT License
                        url: https://api.github.com/licenses/mit
                        spdx_id: MIT
                        node_id: MDc6TGljZW5zZW1pdA==
                        html_url: https://api.github.com/licenses/mit
                      forks: 1
                      open_issues: 1
                      watchers: 1
                  url: https://api.github.com/orgs/octo-org/migrations/79
                  created_at: '2015-07-06T15:33:38-07:00'
                  updated_at: '2015-07-06T15:33:38-07:00'
                  node_id: MDQ6VXNlcjE=
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    post:
      tags:
        - user > migrations
      summary: Start a user migration
      description: Initiates the generation of a user migration archive.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"repositories\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"lock_repositories\":
                \"<boolean>\",\n    \"exclude_attachments\": \"<boolean>\",\n   
                \"exclude\": [\n        \"<string>\",\n        \"<string>\"\n   
                ]\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 79
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
                state: pending
                lock_repositories: true
                exclude_attachments: false
                repositories:
                  - id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://api.github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                url: https://api.github.com/orgs/octo-org/migrations/79
                created_at: '2015-07-06T15:33:38-07:00'
                updated_at: '2015-07-06T15:33:38-07:00'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/repos:
    get:
      tags:
        - user > repos
      summary: List repositories for the authenticated user
      description: >-
        Lists repositories that the authenticated user has explicit permission
        (`:read`, `:write`, or `:admin`) to access.


        The authenticated user has explicit permission to access repositories
        they own, repositories where they are a collaborator, and repositories
        that they can access through an organization membership.
      parameters:
        - name: visibility
          in: query
          schema:
            type: string
          description: Can be one of `all`, `public`, or `private`.
          example: all
        - name: affiliation
          in: query
          schema:
            type: string
          description: >-
            Comma-separated list of values. Can include:  

            \* `owner`: Repositories that are owned by the authenticated user.  

            \* `collaborator`: Repositories that the user has been added to as a
            collaborator.  

            \* `organization_member`: Repositories that the user has access to
            through being a member of an organization. This includes every
            repository on every team that the user is on.
          example: owner,collaborator,organization_member
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Can be one of `all`, `owner`, `public`, `private`, `member`.
            Default: `all`  
              
            Will cause a `422` error if used in the same request as
            **visibility** or **affiliation**. Will cause a `422` error if used
            in the same request as **visibility** or **affiliation**.
          example: all
        - name: sort
          in: query
          schema:
            type: string
          description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          example: full_name
        - name: direction
          in: query
          schema:
            type: string
          description: >-
            Can be one of `asc` or `desc`. Default: `asc` when using
            `full_name`, otherwise `desc`
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: before
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated before the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  allow_rebase_merge: true
                  template_repository: null
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  allow_squash_merge: true
                  delete_branch_on_merge: true
                  allow_merge_commit: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    url: https://api.github.com/licenses/mit
                    spdx_id: MIT
                    node_id: MDc6TGljZW5zZW1pdA==
                    html_url: https://github.com/licenses/mit
                  forks: 1
                  open_issues: 1
                  watchers: 1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '418':
          description: I'm a teapot (RFC 2324)
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
    post:
      tags:
        - user > repos
      summary: Create a repository for the authenticated user
      description: >-
        Creates a new repository for the authenticated user.


        **OAuth scope requirements**


        When using
        [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/),
        authorizations must include:


        *   `public_repo` scope or `repo` scope to create a public repository

        *   `repo` scope to create a private repository
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"description\":
                \"<string>\",\n    \"homepage\": \"<string>\",\n    \"private\":
                false,\n    \"has_issues\": true,\n    \"has_projects\":
                true,\n    \"has_wiki\": true,\n    \"team_id\":
                \"<integer>\",\n    \"auto_init\": false,\n   
                \"gitignore_template\": \"<string>\",\n    \"license_template\":
                \"<string>\",\n    \"allow_squash_merge\": true,\n   
                \"allow_merge_commit\": true,\n    \"allow_rebase_merge\":
                true,\n    \"delete_branch_on_merge\": false,\n   
                \"has_downloads\": true,\n    \"is_template\": false\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1296269
                node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                name: Hello-World
                full_name: octocat/Hello-World
                owner:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                private: false
                html_url: https://github.com/octocat/Hello-World
                description: This your first repo!
                fork: false
                url: https://api.github.com/repos/octocat/Hello-World
                archive_url: >-
                  https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                assignees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                blobs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                branches_url: >-
                  https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                collaborators_url: >-
                  https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                comments_url: >-
                  https://api.github.com/repos/octocat/Hello-World/comments{/number}
                commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                compare_url: >-
                  https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                contents_url: >-
                  https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
                deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                events_url: https://api.github.com/repos/octocat/Hello-World/events
                forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                git_commits_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                git_url: git:github.com/octocat/Hello-World.git
                issue_comment_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                issue_events_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                issues_url: >-
                  https://api.github.com/repos/octocat/Hello-World/issues{/number}
                keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
                languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                milestones_url: >-
                  https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                pulls_url: >-
                  https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
                ssh_url: git@github.com:octocat/Hello-World.git
                stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                statuses_url: >-
                  https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
                tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                trees_url: >-
                  https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                clone_url: https://github.com/octocat/Hello-World.git
                mirror_url: git:git.example.com/octocat/Hello-World
                hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                svn_url: https://svn.github.com/octocat/Hello-World
                homepage: https://github.com
                language: null
                forks: 9
                forks_count: 9
                stargazers_count: 80
                watchers_count: 80
                watchers: 80
                size: 108
                default_branch: master
                open_issues: 0
                open_issues_count: 0
                is_template: true
                license:
                  key: mit
                  name: MIT License
                  url: https://api.github.com/licenses/mit
                  spdx_id: MIT
                  node_id: MDc6TGljZW5zZW1pdA==
                  html_url: https://api.github.com/licenses/mit
                topics:
                  - octocat
                  - atom
                  - electron
                  - api
                has_issues: true
                has_projects: true
                has_wiki: true
                has_pages: false
                has_downloads: true
                archived: false
                disabled: false
                visibility: public
                pushed_at: '2011-01-26T19:06:43Z'
                created_at: '2011-01-26T19:01:12Z'
                updated_at: '2011-01-26T19:14:43Z'
                permissions:
                  admin: false
                  push: false
                  pull: true
                allow_rebase_merge: true
                template_repository: null
                temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                allow_squash_merge: true
                delete_branch_on_merge: true
                allow_merge_commit: true
                subscribers_count: 42
                network_count: 0
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/repository_invitations/{invitation_id}:
    patch:
      tags:
        - user > repository invitations > {invitation id}
      summary: Accept a repository invitation
      requestBody:
        content: {}
      parameters:
        - name: invitation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) invitation_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - user > repository invitations > {invitation id}
      summary: Decline a repository invitation
      parameters:
        - name: invitation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) invitation_id parameter
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/repository_invitations:
    get:
      tags:
        - user > repository invitations
      summary: List repository invitations for the authenticated user
      description: >-
        When authenticating as a user, this endpoint will list all currently
        open repository invitations for that user.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  repository:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                  invitee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  inviter:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  permissions: write
                  created_at: '2016-06-13T14:52:50-05:00'
                  url: https://api.github.com/user/repository_invitations/1296269
                  html_url: https://github.com/octocat/Hello-World/invitations
                  node_id: MDQ6VXNlcjE=
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/starred/{owner}/{repo}:
    get:
      tags:
        - user > starred > {owner}/{repo}
      summary: Check if a repository is starred by the authenticated user
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    put:
      tags:
        - user > starred > {owner}/{repo}
      summary: Star a repository for the authenticated user
      description: >-
        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        verbs](https://developer.github.com/v3/#http-verbs)."
      requestBody:
        content: {}
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    delete:
      tags:
        - user > starred > {owner}/{repo}
      summary: Unstar a repository for the authenticated user
      parameters:
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/starred:
    get:
      tags:
        - user > starred
      summary: List repositories starred by the authenticated user
      description: >-
        Lists repositories the authenticated user has starred.


        You can also find out _when_ stars were created by passing the following
        custom [media type](https://developer.github.com/v3/media/) via the
        `Accept` header:
      parameters:
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            One of `created` (when the repository was starred) or `updated`
            (when it was last pushed to).
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  allow_rebase_merge: true
                  template_repository: null
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  allow_squash_merge: true
                  delete_branch_on_merge: true
                  allow_merge_commit: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    url: https://api.github.com/licenses/mit
                    spdx_id: MIT
                    node_id: MDc6TGljZW5zZW1pdA==
                    html_url: https://github.com/licenses/mit
                  forks: 1
                  open_issues: 1
                  watchers: 1
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user:
    get:
      tags:
        - user
      summary: Get the authenticated user
      description: >-
        If the authenticated user is authenticated through basic authentication
        or OAuth with the `user` scope, then the response lists public and
        private profile information.


        If the authenticated user is authenticated through OAuth without the
        `user` scope, then the response lists only public profile information.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
                name: monalisa octocat
                company: GitHub
                blog: https://github.com/blog
                location: San Francisco
                email: octocat@github.com
                hireable: false
                bio: There once was...
                twitter_username: monatheoctocat
                public_repos: 2
                public_gists: 1
                followers: 20
                following: 0
                created_at: '2008-01-14T04:33:35Z'
                updated_at: '2008-01-14T04:33:35Z'
                private_gists: 81
                total_private_repos: 100
                owned_private_repos: 100
                disk_usage: 10000
                collaborators: 8
                two_factor_authentication: true
                plan:
                  name: Medium
                  space: 400
                  private_repos: 20
                  collaborators: 0
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
    patch:
      tags:
        - user
      summary: Update the authenticated user
      description: >-
        **Note:** If your email is set to private and you send an `email`
        parameter as part of this request to update your profile, your privacy
        settings are still enforced: the email address will not be displayed on
        your public profile or via the API.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"email\":
                \"<string>\",\n    \"blog\": \"<string>\",\n   
                \"twitter_username\": \"<string>\",\n    \"company\":
                \"<string>\",\n    \"location\": \"<string>\",\n   
                \"hireable\": \"<boolean>\",\n    \"bio\": \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
                name: monalisa octocat
                company: GitHub
                blog: https://github.com/blog
                location: San Francisco
                email: octocat@github.com
                hireable: false
                bio: There once was...
                twitter_username: monatheoctocat
                public_repos: 2
                public_gists: 1
                followers: 20
                following: 0
                created_at: '2008-01-14T04:33:35Z'
                updated_at: '2008-01-14T04:33:35Z'
                private_gists: 81
                total_private_repos: 100
                owned_private_repos: 100
                disk_usage: 10000
                collaborators: 8
                two_factor_authentication: true
                plan:
                  name: Medium
                  space: 400
                  private_repos: 20
                  collaborators: 0
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/email/visibility:
    patch:
      tags:
        - user
      summary: Set primary email visibility for the authenticated user
      description: Sets the visibility for your primary email addresses.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"email\": \"<string>\",\n    \"visibility\":
                \"<string>\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - email: octocat@github.com
                  primary: true
                  verified: true
                  visibility: private
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /user/followers:
    get:
      tags:
        - user
      summary: List followers of the authenticated user
      description: Lists the people following the authenticated user.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/issues:
    get:
      tags:
        - user
      summary: List user account issues assigned to the authenticated user
      description: >-
        List issues across owned and member repositories assigned to the
        authenticated user.


        **Note**: GitHub's REST API v3 considers every pull request an issue,
        but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in
        the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request
        returned from "Issues" endpoints will be an _issue id_. To find out the
        pull

        request id, use the "[List pull
        requests](https://developer.github.com/v3/pulls/#list-pull-requests)"
        endpoint.
      parameters:
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Indicates which sorts of issues to return. Can be one of:  

            \* `assigned`: Issues assigned to you  

            \* `created`: Issues created by you  

            \* `mentioned`: Issues mentioning you  

            \* `subscribed`: Issues you're subscribed to updates for  

            \* `all`: All issues the authenticated user can see, regardless of
            participation or creation
          example: assigned
        - name: state
          in: query
          schema:
            type: string
          description: >-
            Indicates the state of the issues to return. Can be either `open`,
            `closed`, or `all`.
          example: open
        - name: labels
          in: query
          schema:
            type: string
          description: 'A list of comma separated label names. Example: `bug,ui,@high`'
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            What to sort results by. Can be either `created`, `updated`,
            `comments`.
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDU6SXNzdWUx
                  url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  repository_url: https://api.github.com/repos/octocat/Hello-World
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                  html_url: https://github.com/octocat/Hello-World/issues/1347
                  number: 1347
                  state: open
                  title: Found a bug
                  body: I'm having a problem with this.
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  labels:
                    - id: 208045946
                      node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels/bug
                      name: bug
                      description: Something isn't working
                      color: f29513
                      default: true
                  assignee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  assignees:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  milestone:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1
                    html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                    id: 1002604
                    node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                    number: 1
                    state: open
                    title: v1.0
                    description: Tracking milestone for version 1.0
                    creator:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    open_issues: 4
                    closed_issues: 8
                    created_at: '2011-04-10T20:09:31Z'
                    updated_at: '2014-03-03T18:58:10Z'
                    closed_at: '2013-02-12T13:22:01Z'
                    due_on: '2012-10-09T23:39:01Z'
                  locked: true
                  active_lock_reason: too heated
                  comments: 0
                  pull_request:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                    html_url: https://github.com/octocat/Hello-World/pull/1347
                    diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                    patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                  closed_at: null
                  created_at: '2011-04-22T13:33:48Z'
                  updated_at: '2011-04-22T13:33:48Z'
                  repository:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                  author_association: collaborator
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/orgs:
    get:
      tags:
        - user
      summary: List organizations for the authenticated user
      description: >-
        List organizations for the authenticated user.


        **OAuth scope requirements**


        This only lists organizations that your authorization allows you to
        operate on in some way (e.g., you can list teams with `read:org` scope,
        you can publicize your organization membership with `user` scope, etc.).
        Therefore, this API requires at least `user` or `read:org` scope. OAuth
        requests with insufficient scope receive a `403 Forbidden` response.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/projects:
    post:
      tags:
        - user
      summary: Create a user project
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\",\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                owner_url: https://api.github.com/users/octocat
                url: https://api.github.com/projects/1002603
                html_url: https://github.com/users/octocat/projects/1
                columns_url: https://api.github.com/projects/1002603/columns
                id: 1002603
                node_id: MDc6UHJvamVjdDEwMDI2MDM=
                name: My Projects
                body: A board to manage my personal projects.
                number: 1
                state: open
                creator:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
                created_at: '2011-04-10T20:09:31Z'
                updated_at: '2014-03-03T18:58:10Z'
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: in labore deserunt nostrud amet
                documentation_url: Duis
                errors:
                  - nisi dolore Ut
                  - est culpa ullamco voluptate
  /user/public_emails:
    get:
      tags:
        - user
      summary: List public email addresses for the authenticated user
      description: >-
        Lists your publicly visible email address, which you can set with the
        [Set primary email visibility for the authenticated
        user](https://developer.github.com/v3/users/emails/#set-primary-email-visibility-for-the-authenticated-user)
        endpoint. This endpoint is accessible with the `user:email` scope.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - email: octocat@github.com
                  verified: true
                  primary: true
                  visibility: public
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/subscriptions:
    get:
      tags:
        - user
      summary: List repositories watched by the authenticated user
      description: Lists repositories the authenticated user is watching.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  template_repository: octocat/template
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /user/teams:
    get:
      tags:
        - user
      summary: List teams for the authenticated user
      description: >-
        List all of the teams across all of the organizations to which the
        authenticated user belongs. This method requires `user`, `repo`, or
        `read:org`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)
        when authenticating via
        [OAuth](https://developer.github.com/apps/building-oauth-apps/).
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://api.github.com/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
                  members_count: 3
                  repos_count: 10
                  created_at: '2017-07-14T16:53:42Z'
                  updated_at: '2017-08-17T12:37:15Z'
                  organization:
                    login: github
                    id: 1
                    node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                    url: https://api.github.com/orgs/github
                    repos_url: https://api.github.com/orgs/github/repos
                    events_url: https://api.github.com/orgs/github/events
                    hooks_url: https://api.github.com/orgs/github/hooks
                    issues_url: https://api.github.com/orgs/github/issues
                    members_url: https://api.github.com/orgs/github/members{/member}
                    public_members_url: https://api.github.com/orgs/github/public_members{/member}
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    description: A great organization
                    name: github
                    company: GitHub
                    blog: https://github.com/blog
                    location: San Francisco
                    email: octocat@github.com
                    is_verified: true
                    has_organization_projects: true
                    has_repository_projects: true
                    public_repos: 2
                    public_gists: 1
                    followers: 20
                    following: 0
                    html_url: https://github.com/octocat
                    created_at: '2008-01-14T04:33:35Z'
                    updated_at: '2017-08-17T12:37:15Z'
                    type: Organization
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /users/{username}/events:
    get:
      tags:
        - users > {username} > events
      summary: List events for the authenticated user
      description: >-
        If you are authenticated as the given user, you will see your private
        events. Otherwise, you'll only see public events.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
  /users/{username}/events/orgs/{org}:
    get:
      tags:
        - users > {username} > events
      summary: List organization events for the authenticated user
      description: >-
        This is the user's organization dashboard. You must be authenticated as
        the user to view this.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: org
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
  /users/{username}/events/public:
    get:
      tags:
        - users > {username} > events
      summary: List public events for a user
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
  /users/{username}/following:
    get:
      tags:
        - users > {username} > following
      summary: List the people a user follows
      description: Lists the people who the specified user follows.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
  /users/{username}/following/{target_user}:
    get:
      tags:
        - users > {username} > following
      summary: Check if a user follows another user
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: target_user
          in: path
          schema:
            type: string
          required: true
          description: (Required) target_user parameter
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{username}/received_events:
    get:
      tags:
        - users > {username} > received events
      summary: List events received by the authenticated user
      description: >-
        These are events that you've received by watching repos and following
        users. If you are authenticated as the given user, you will see private
        events. Otherwise, you'll only see public events.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
  /users/{username}/received_events/public:
    get:
      tags:
        - users > {username} > received events
      summary: List public events received by a user
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
  /users/{username}/settings/billing/actions:
    get:
      tags:
        - users > {username} > settings/billing
      summary: Get GitHub Actions billing for a user
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the summary of the free and paid GitHub Actions minutes used.


        Paid minutes only apply to workflows in private repositories that use
        GitHub-hosted runners. Minutes used is listed for each GitHub-hosted
        runner operating system. Any job re-runs are also included in the usage.
        The usage does not include the multiplier for macOS and Windows runners
        and is not rounded up to the nearest whole minute. For more information,
        see "[Managing billing for GitHub
        Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".


        Access tokens must have the `user` scope.
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_minutes_used: 305
                total_paid_minutes_used: 0
                included_minutes: 3000
                minutes_used_breakdown:
                  UBUNTU: 205
                  MACOS: 10
                  WINDOWS: 90
  /users/{username}/settings/billing/packages:
    get:
      tags:
        - users > {username} > settings/billing
      summary: Get GitHub Packages billing for a user
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the free and paid storage used for GitHub Packages in gigabytes.


        Paid minutes only apply to packages stored for private repositories. For
        more information, see "[Managing billing for GitHub
        Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."


        Access tokens must have the `user` scope.
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_gigabytes_bandwidth_used: 50
                total_paid_gigabytes_bandwidth_used: 40
                included_gigabytes_bandwidth: 10
  /users/{username}/settings/billing/shared-storage:
    get:
      tags:
        - users > {username} > settings/billing
      summary: Get shared storage billing for a user
      description: >-
        **Warning:** The Billing API is currently in public beta and subject to
        change.


        Gets the estimated paid and estimated total storage used for GitHub
        Actions and Github Packages.


        Paid minutes only apply to packages stored for private repositories. For
        more information, see "[Managing billing for GitHub
        Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."


        Access tokens must have the `user` scope.
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                days_left_in_billing_cycle: 20
                estimated_paid_storage_for_month: 15
                estimated_storage_for_month: 40
  /users/{username}:
    get:
      tags:
        - users > {username}
      summary: Get a user
      description: >-
        Provides publicly available information about someone with a GitHub
        account.


        GitHub Apps with the `Plan` user permission can use this endpoint to
        retrieve information about a user's GitHub plan. The GitHub App must be
        authenticated as a user. See "[Identifying and authorizing users for
        GitHub
        Apps](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)"
        for details about authentication. For an example response, see
        "[Response with GitHub plan
        information](https://developer.github.com/v3/users/#response-with-github-plan-information)."


        The `email` key in the following response is the publicly visible email
        address from your GitHub [profile
        page](https://github.com/settings/profile). When setting up your
        profile, you can select a primary email address to be “public” which
        provides an email entry for this endpoint. If you do not set a public
        email address for `email`, then it will have a value of `null`. You only
        see publicly visible email addresses when authenticated with GitHub. For
        more information, see
        [Authentication](https://developer.github.com/v3/#authentication).


        The Emails API enables you to list all of your email addresses, and
        toggle a primary email to be visible publicly. For more information, see
        "[Emails API](https://developer.github.com/v3/users/emails/)".
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
                name: monalisa octocat
                company: GitHub
                blog: https://github.com/blog
                location: San Francisco
                email: octocat@github.com
                hireable: false
                bio: There once was...
                twitter_username: monatheoctocat
                public_repos: 2
                public_gists: 1
                followers: 20
                following: 0
                created_at: '2008-01-14T04:33:35Z'
                updated_at: '2008-01-14T04:33:35Z'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /users/{username}/followers:
    get:
      tags:
        - users > {username}
      summary: List followers of a user
      description: Lists the people following the specified user.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
  /users/{username}/gists:
    get:
      tags:
        - users > {username}
      summary: List gists for a user
      description: 'Lists public gists for the specified user:'
      parameters:
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - url: https://api.github.com/gists/aa5a315d61ae9438b18d
                  forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
                  commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
                  id: aa5a315d61ae9438b18d
                  node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
                  git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                  git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
                  html_url: https://gist.github.com/aa5a315d61ae9438b18d
                  files:
                    hello_world.rb:
                      filename: hello_world.rb
                      type: application/x-ruby
                      language: Ruby
                      raw_url: >-
                        https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
                      size: 167
                  public: true
                  created_at: '2010-04-14T02:15:15Z'
                  updated_at: '2011-06-20T11:34:15Z'
                  description: Hello World Examples
                  comments: 0
                  user: null
                  comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  truncated: false
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /users/{username}/gpg_keys:
    get:
      tags:
        - users > {username}
      summary: List GPG keys for a user
      description: Lists the GPG keys for a user. This information is accessible by anyone.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 3
                  primary_key_id: 2
                  key_id: 3262EFF25BA0D270
                  public_key: xsBNBFayYZ...
                  emails:
                    - email: mastahyeti@users.noreply.github.com
                      verified: true
                  subkeys:
                    - id: 4
                      primary_key_id: 3
                      key_id: 4A595D4C72EE49C7
                      public_key: zsBNBFayYZ...
                      emails: []
                      subkeys: []
                      can_sign: false
                      can_encrypt_comms: true
                      can_encrypt_storage: true
                      can_certify: false
                      created_at: '2016-03-24T11:31:04-06:00'
                      expires_at: '2016-03-24T11:31:04-07:00'
                  can_sign: true
                  can_encrypt_comms: false
                  can_encrypt_storage: false
                  can_certify: true
                  created_at: '2016-03-24T11:31:04-06:00'
                  expires_at: '2016-03-24T11:31:04-07:00'
                  raw_key: string
  /users/{username}/hovercard:
    get:
      tags:
        - users > {username}
      summary: Get contextual information for a user
      description: >-
        Provides hovercard information when authenticated through basic auth or
        OAuth with the `repo` scope. You can find out more about someone in
        relation to their pull requests, issues, repositories, and
        organizations.


        The `subject_type` and `subject_id` parameters provide context for the
        person's hovercard, which returns more information than without the
        parameters. For example, if you wanted to find out more about `octocat`
        who owns the `Spoon-Knife` repository via cURL, it would look like this:


        ```shell
         curl -u username:token
          https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192
        ```
      parameters:
        - name: subject_type
          in: query
          schema:
            type: string
          description: >-
            Identifies which additional information you'd like to receive about
            the person's hovercard. Can be `organization`, `repository`,
            `issue`, `pull_request`. **Required** when using `subject_id`.
          example: <string>
        - name: subject_id
          in: query
          schema:
            type: string
          description: >-
            Uses the ID for the `subject_type` you specified. **Required** when
            using `subject_type`.
          example: <string>
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                contexts:
                  - message: Owns this repository
                    octicon: repo
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /users/{username}/installation:
    get:
      tags:
        - users > {username}
      summary: Get a user installation for the authenticated app
      description: >-
        Enables an authenticated GitHub App to find the user’s installation
        information.


        You must use a
        [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      parameters:
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                account:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  avatar_url: https://github.com/images/error/hubot_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/orgs/github
                  html_url: https://github.com/github
                  followers_url: https://api.github.com/users/github/followers
                  following_url: https://api.github.com/users/github/following{/other_user}
                  gists_url: https://api.github.com/users/github/gists{/gist_id}
                  starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/github/subscriptions
                  organizations_url: https://api.github.com/users/github/orgs
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  received_events_url: https://api.github.com/users/github/received_events
                  type: Organization
                  site_admin: false
                repository_selection: all
                access_tokens_url: https://api.github.com/installations/1/access_tokens
                repositories_url: https://api.github.com/installation/repositories
                html_url: >-
                  https://github.com/organizations/github/settings/installations/1
                app_id: 1
                target_id: 1
                target_type: Organization
                permissions:
                  checks: write
                  metadata: read
                  contents: read
                events:
                  - push
                  - pull_request
                created_at: '2018-02-09T20:51:14Z'
                updated_at: '2018-02-09T20:51:14Z'
                single_file_name: null
                app_slug: github-actions
  /users/{username}/keys:
    get:
      tags:
        - users > {username}
      summary: List public keys for a user
      description: >-
        Lists the _verified_ public SSH keys for a user. This is accessible by
        anyone.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  key: ssh-rsa AAA...
  /users/{username}/orgs:
    get:
      tags:
        - users > {username}
      summary: List organizations for a user
      description: >-
        List [public organization
        memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership)
        for the specified user.


        This method only lists _public_ memberships, regardless of
        authentication. If you need to fetch all of the organization memberships
        (public and private) for the authenticated user, use the [List
        organizations for the authenticated
        user](https://developer.github.com/v3/orgs/#list-organizations-for-the-authenticated-user)
        API instead.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
  /users/{username}/projects:
    get:
      tags:
        - users > {username}
      summary: List user projects
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: >-
            Indicates the state of the projects to return. Can be either `open`,
            `closed`, or `all`.
          example: open
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - owner_url: https://api.github.com/users/octocat
                  url: https://api.github.com/projects/1002603
                  html_url: https://github.com/users/octocat/projects/1
                  columns_url: https://api.github.com/projects/1002603/columns
                  id: 1002603
                  node_id: MDc6UHJvamVjdDEwMDI2MDM=
                  name: My Projects
                  body: A board to manage my personal projects.
                  number: 1
                  state: open
                  creator:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  created_at: '2011-04-10T20:09:31Z'
                  updated_at: '2014-03-03T18:58:10Z'
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /users/{username}/repos:
    get:
      tags:
        - users > {username}
      summary: List repositories for a user
      description: Lists public repositories for the specified user.
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: Can be one of `all`, `owner`, `member`.
          example: owner
        - name: sort
          in: query
          schema:
            type: string
          description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          example: full_name
        - name: direction
          in: query
          schema:
            type: string
          description: >-
            Can be one of `asc` or `desc`. Default: `asc` when using
            `full_name`, otherwise `desc`
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  template_repository: octocat/template
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
  /users/{username}/starred:
    get:
      tags:
        - users > {username}
      summary: List repositories starred by a user
      description: >-
        Lists repositories a user has starred.


        You can also find out _when_ stars were created by passing the following
        custom [media type](https://developer.github.com/v3/media/) via the
        `Accept` header:
      parameters:
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            One of `created` (when the repository was starred) or `updated`
            (when it was last pushed to).
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  allow_rebase_merge: true
                  template_repository: null
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  allow_squash_merge: true
                  delete_branch_on_merge: true
                  allow_merge_commit: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    url: https://api.github.com/licenses/mit
                    spdx_id: MIT
                    node_id: MDc6TGljZW5zZW1pdA==
                    html_url: https://github.com/licenses/mit
                  forks: 1
                  open_issues: 1
                  watchers: 1
  /users/{username}/subscriptions:
    get:
      tags:
        - users > {username}
      summary: List repositories watched by a user
      description: Lists repositories a user is watching.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: username
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  clone_url: https://github.com/octocat/Hello-World.git
                  mirror_url: git:git.example.com/octocat/Hello-World
                  hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                  svn_url: https://svn.github.com/octocat/Hello-World
                  homepage: https://github.com
                  language: null
                  forks_count: 9
                  stargazers_count: 80
                  watchers_count: 80
                  size: 108
                  default_branch: master
                  open_issues_count: 0
                  is_template: true
                  topics:
                    - octocat
                    - atom
                    - electron
                    - api
                  has_issues: true
                  has_projects: true
                  has_wiki: true
                  has_pages: false
                  has_downloads: true
                  archived: false
                  disabled: false
                  visibility: public
                  pushed_at: '2011-01-26T19:06:43Z'
                  created_at: '2011-01-26T19:01:12Z'
                  updated_at: '2011-01-26T19:14:43Z'
                  permissions:
                    admin: false
                    push: false
                    pull: true
                  template_repository: octocat/template
                  temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                  delete_branch_on_merge: true
                  subscribers_count: 42
                  network_count: 0
                  license:
                    key: mit
                    name: MIT License
                    spdx_id: MIT
                    url: https://api.github.com/licenses/mit
                    node_id: MDc6TGljZW5zZW1pdA==
  /users:
    get:
      tags:
        - users
      summary: List users
      description: >-
        Lists all users, in the order that they signed up on GitHub. This list
        includes personal user accounts and organization accounts.


        Note: Pagination is powered exclusively by the `since` parameter. Use
        the [Link header](https://developer.github.com/v3/#link-header) to get
        the URL for the next page of users.
      parameters:
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /:
    get:
      tags:
        - General
      summary: GitHub API Root
      description: Get Hypermedia links to resources accessible in GitHub's REST API
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                current_user_url: fugiat et reprehenderit commodo
                current_user_authorizations_html_url: ex cillu
                authorizations_url: ea adipisicing nisi
                code_search_url: ut dolor sunt
                commit_search_url: proident est esse
                emails_url: irure id
                emojis_url: consectetur enim occaecat
                events_url: dolore aute dolor exercitation
                feeds_url: in dolore consequat elit
                followers_url: culpa minim enim
                following_url: comm
                gists_url: dolor cillum magna mollit
                hub_url: proident
                issue_search_url: dolore mollit
                issues_url: tempor aliqua ex
                keys_url: 'ad '
                label_search_url: dolore esse
                notifications_url: in dolore
                organization_url: velit incididunt
                organization_repositories_url: sed elit in
                organization_teams_url: amet veniam minim Lorem
                public_gists_url: eu quis commodo
                rate_limit_url: ut esse mollit
                repository_url: fugiat esse nulla Ut
                repository_search_url: Ut culpa amet
                current_user_repositories_url: eu dolor consequat cupidatat nulla
                starred_url: non i
                starred_gists_url: voluptate magna
                user_url: deserunt occaecat amet incididunt
                user_organizations_url: laborum cillum incididunt
                user_repositories_url: ipsum consequat
                user_search_url: enim mollit consectetur laborum
                topic_search_url: veniam in id pariatur
  /app-manifests/{code}/conversions:
    post:
      tags:
        - General
      summary: Create a GitHub App from a manifest
      description: >-
        Use this endpoint to complete the handshake necessary when implementing
        the [GitHub App Manifest
        flow](https://developer.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/).
        When you create a GitHub App with the manifest flow, you receive a
        temporary `code` used to retrieve the GitHub App's `id`, `pem` (private
        key), and `webhook_secret`.
      requestBody:
        content: {}
      parameters:
        - name: code
          in: path
          schema:
            type: string
          required: true
          description: (Required) code parameter
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                slug: octoapp
                node_id: MDxOkludGVncmF0aW9uMQ==
                owner:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: true
                name: Octocat App
                description: ''
                external_url: https://example.com
                html_url: https://github.com/apps/octoapp
                created_at: '2017-07-08T16:18:44-04:00'
                updated_at: '2017-07-08T16:18:44-04:00'
                permissions:
                  metadata: read
                  contents: read
                  issues: write
                  single_file: write
                events:
                  - push
                  - pull_request
                client_id: Iv1.8a61f9b3a7aba766
                client_secret: 1726be1638095a19edd134c77bde3aa2ece1e5d8
                webhook_secret: e340154128314309424b7c8e90325147d99fdafa
                pem: >
                  -----BEGIN RSA PRIVATE KEY-----

                  MIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM

                  9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP

                  X0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/

                  6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm

                  oNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma

                  szdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ

                  dBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva

                  KOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo

                  gDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP

                  kYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX

                  NuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd

                  NBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE

                  ZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG

                  J4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv

                  eDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3

                  FI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk

                  77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH

                  Pza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB

                  1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c

                  57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8

                  M5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic

                  I9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN

                  6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK

                  fgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG

                  ZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu

                  -----END RSA PRIVATE KEY-----
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: exercitation incididunt ut et
                documentation_url: v
                errors:
                  - Duis incididunt dolor culpa
                  - voluptate Lorem
  /apps/{app_slug}:
    get:
      tags:
        - General
      summary: Get an app
      description: >-
        **Note**: The `:app_slug` is just the URL-friendly name of your GitHub
        App. You can find this on the settings page for your GitHub App (e.g.,
        `https://github.com/settings/apps/:app_slug`).


        If the GitHub App you specify is public, you can access this endpoint
        without authenticating. If the GitHub App you specify is private, you
        must authenticate with a [personal access
        token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/)
        or an [installation access
        token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation)
        to access this endpoint.
      parameters:
        - name: app_slug
          in: path
          schema:
            type: string
          required: true
          description: (Required) app_slug parameter
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                slug: octoapp
                node_id: MDExOkludGVncmF0aW9uMQ==
                owner:
                  login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: true
                name: Octocat App
                description: ''
                external_url: https://example.com
                html_url: https://github.com/apps/octoapp
                created_at: '2017-07-08T16:18:44-04:00'
                updated_at: '2017-07-08T16:18:44-04:00'
                permissions:
                  metadata: read
                  contents: read
                  issues: write
                  single_file: write
                events:
                  - push
                  - pull_request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /content_references/{content_reference_id}/attachments:
    post:
      tags:
        - General
      summary: Create a content attachment
      description: >-
        Creates an attachment under a content reference URL in the body or
        comment of an issue or pull request. Use the `id` of the content
        reference from the [`content_reference`
        event](https://developer.github.com/webhooks/event-payloads/#content_reference)
        to create an attachment.


        The app must create a content attachment within six hours of the content
        reference URL being posted. See "[Using content
        attachments](https://developer.github.com/apps/using-content-attachments/)"
        for details about content attachments.


        You must use an [installation access
        token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation)
        to access this endpoint.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"title\": \"<string>\",\n    \"body\": \"<string>\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: content_reference_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) content_reference_id parameter
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 101
                title: '[A-1234] Error found in core/models.py file'''
                body: >-
                  You have used an email that already exists for the
                  user_email_uniq field.
                   ## DETAILS:

                  The (email)=(Octocat@github.com) already exists.

                   The error was found in core/models.py in get_or_create_user at line 62.

                   self.save()
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /emojis:
    get:
      tags:
        - General
      summary: Get emojis
      description: Lists all the emojis available to use on GitHub.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: sunt mollit
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /events:
    get:
      tags:
        - General
      summary: List public events
      description: >-
        We delay the public events feed by five minutes, which means the most
        recent event returned by the public events API actually occurred at
        least five minutes ago.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: nisi
                message: enim amet nostrud
                documentation_url: reprehenderit id
  /feeds:
    get:
      tags:
        - General
      summary: Get feeds
      description: >-
        GitHub provides several timeline resources in
        [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds
        API lists all the feeds available to the authenticated user:


        *   **Timeline**: The GitHub global public timeline

        *   **User**: The public timeline for any user, using [URI
        template](https://developer.github.com/v3/#hypermedia)

        *   **Current user public**: The public timeline for the authenticated
        user

        *   **Current user**: The private timeline for the authenticated user

        *   **Current user actor**: The private timeline for activity created by
        the authenticated user

        *   **Current user organizations**: The private timeline for the
        organizations the authenticated user is a member of.

        *   **Security advisories**: A collection of public announcements that
        provide information about security-related vulnerabilities in software
        on GitHub.


        **Note**: Private feeds are only returned when [authenticating via Basic
        Auth](https://developer.github.com/v3/#basic-authentication) since
        current feed URIs use the older, non revocable auth tokens.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                timeline_url: https://github.com/timeline
                user_url: https://github.com/{user}
                current_user_public_url: https://github.com/octocat
                current_user_url: https://github.com/octocat.private?token=abc123
                current_user_actor_url: https://github.com/octocat.private.actor?token=abc123
                current_user_organization_url: ''
                current_user_organization_urls:
                  - >-
                    https://github.com/organizations/github/octocat.private.atom?token=abc123
                security_advisories_url: https://github.com/security-advisories
                _links:
                  timeline:
                    href: https://github.com/timeline
                    type: application/atom+xml
                  user:
                    href: https://github.com/{user}
                    type: application/atom+xml
                  current_user_public:
                    href: https://github.com/octocat
                    type: application/atom+xml
                  current_user:
                    href: https://github.com/octocat.private?token=abc123
                    type: application/atom+xml
                  current_user_actor:
                    href: https://github.com/octocat.private.actor?token=abc123
                    type: application/atom+xml
                  current_user_organization:
                    href: ''
                    type: ''
                  current_user_organizations:
                    - href: >-
                        https://github.com/organizations/github/octocat.private.atom?token=abc123
                      type: application/atom+xml
                  security_advisories:
                    href: https://github.com/security-advisories
                    type: application/atom+xml
  /issues:
    get:
      tags:
        - General
      summary: List issues assigned to the authenticated user
      description: >-
        List issues assigned to the authenticated user across all visible
        repositories including owned repositories, member

        repositories, and organization repositories. You can use the `filter`
        query parameter to fetch issues that are not

        necessarily assigned to you. See the [Parameters
        table](https://developer.github.com/v3/issues/#parameters) for more

        information.



        **Note**: GitHub's REST API v3 considers every pull request an issue,
        but not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in
        the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request
        returned from "Issues" endpoints will be an _issue id_. To find out the
        pull

        request id, use the "[List pull
        requests](https://developer.github.com/v3/pulls/#list-pull-requests)"
        endpoint.
      parameters:
        - name: filter
          in: query
          schema:
            type: string
          description: >-
            Indicates which sorts of issues to return. Can be one of:  

            \* `assigned`: Issues assigned to you  

            \* `created`: Issues created by you  

            \* `mentioned`: Issues mentioning you  

            \* `subscribed`: Issues you're subscribed to updates for  

            \* `all`: All issues the authenticated user can see, regardless of
            participation or creation
          example: assigned
        - name: state
          in: query
          schema:
            type: string
          description: >-
            Indicates the state of the issues to return. Can be either `open`,
            `closed`, or `all`.
          example: open
        - name: labels
          in: query
          schema:
            type: string
          description: 'A list of comma separated label names. Example: `bug,ui,@high`'
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            What to sort results by. Can be either `created`, `updated`,
            `comments`.
          example: created
        - name: direction
          in: query
          schema:
            type: string
          description: One of `asc` (ascending) or `desc` (descending).
          example: desc
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: collab
          in: query
          schema:
            type: string
          example: <boolean>
        - name: orgs
          in: query
          schema:
            type: string
          example: <boolean>
        - name: owned
          in: query
          schema:
            type: string
          example: <boolean>
        - name: pulls
          in: query
          schema:
            type: string
          example: <boolean>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  node_id: MDU6SXNzdWUx
                  url: https://api.github.com/repos/octocat/Hello-World/issues/1347
                  repository_url: https://api.github.com/repos/octocat/Hello-World
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                  events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                  html_url: https://github.com/octocat/Hello-World/issues/1347
                  number: 1347
                  state: open
                  title: Found a bug
                  body: I'm having a problem with this.
                  user:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  labels:
                    - id: 208045946
                      node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/labels/bug
                      name: bug
                      description: Something isn't working
                      color: f29513
                      default: true
                  assignee:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  assignees:
                    - login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  milestone:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1
                    html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                    id: 1002604
                    node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                    number: 1
                    state: open
                    title: v1.0
                    description: Tracking milestone for version 1.0
                    creator:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    open_issues: 4
                    closed_issues: 8
                    created_at: '2011-04-10T20:09:31Z'
                    updated_at: '2014-03-03T18:58:10Z'
                    closed_at: '2013-02-12T13:22:01Z'
                    due_on: '2012-10-09T23:39:01Z'
                  locked: true
                  active_lock_reason: too heated
                  comments: 0
                  pull_request:
                    url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls/1347
                    html_url: https://github.com/octocat/Hello-World/pull/1347
                    diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
                    patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
                  closed_at: null
                  created_at: '2011-04-22T13:33:48Z'
                  updated_at: '2011-04-22T13:33:48Z'
                  repository:
                    id: 1296269
                    node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                    name: Hello-World
                    full_name: octocat/Hello-World
                    owner:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: >-
                        https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: >-
                        https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                    private: false
                    html_url: https://github.com/octocat/Hello-World
                    description: This your first repo!
                    fork: false
                    url: https://api.github.com/repos/octocat/Hello-World
                    archive_url: >-
                      https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                    assignees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                    blobs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                    branches_url: >-
                      https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                    collaborators_url: >-
                      https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                    comments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/comments{/number}
                    commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                    compare_url: >-
                      https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                    contents_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                    contributors_url: >-
                      https://api.github.com/repos/octocat/Hello-World/contributors
                    deployments_url: >-
                      https://api.github.com/repos/octocat/Hello-World/deployments
                    downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                    events_url: https://api.github.com/repos/octocat/Hello-World/events
                    forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                    git_commits_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                    git_refs_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                    git_tags_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                    git_url: git:github.com/octocat/Hello-World.git
                    issue_comment_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                    issue_events_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                    issues_url: >-
                      https://api.github.com/repos/octocat/Hello-World/issues{/number}
                    keys_url: >-
                      https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                    labels_url: >-
                      https://api.github.com/repos/octocat/Hello-World/labels{/name}
                    languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                    merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                    milestones_url: >-
                      https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                    notifications_url: >-
                      https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                    pulls_url: >-
                      https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                    releases_url: >-
                      https://api.github.com/repos/octocat/Hello-World/releases{/id}
                    ssh_url: git@github.com:octocat/Hello-World.git
                    stargazers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/stargazers
                    statuses_url: >-
                      https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                    subscribers_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscribers
                    subscription_url: >-
                      https://api.github.com/repos/octocat/Hello-World/subscription
                    tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                    teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                    trees_url: >-
                      https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                    clone_url: https://github.com/octocat/Hello-World.git
                    mirror_url: git:git.example.com/octocat/Hello-World
                    hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
                    svn_url: https://svn.github.com/octocat/Hello-World
                    homepage: https://github.com
                    language: null
                    forks_count: 9
                    stargazers_count: 80
                    watchers_count: 80
                    size: 108
                    default_branch: master
                    open_issues_count: 0
                    is_template: true
                    topics:
                      - octocat
                      - atom
                      - electron
                      - api
                    has_issues: true
                    has_projects: true
                    has_wiki: true
                    has_pages: false
                    has_downloads: true
                    archived: false
                    disabled: false
                    visibility: public
                    pushed_at: '2011-01-26T19:06:43Z'
                    created_at: '2011-01-26T19:01:12Z'
                    updated_at: '2011-01-26T19:14:43Z'
                    permissions:
                      admin: false
                      push: false
                      pull: true
                    allow_rebase_merge: true
                    template_repository: null
                    temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
                    allow_squash_merge: true
                    delete_branch_on_merge: true
                    allow_merge_commit: true
                    subscribers_count: 42
                    network_count: 0
                    license:
                      key: mit
                      name: MIT License
                      url: https://api.github.com/licenses/mit
                      spdx_id: MIT
                      node_id: MDc6TGljZW5zZW1pdA==
                      html_url: https://github.com/licenses/mit
                    forks: 1
                    open_issues: 1
                    watchers: 1
                  author_association: collaborator
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /meta:
    get:
      tags:
        - General
      summary: Get GitHub meta information
      description: >-
        This endpoint provides a list of GitHub's IP addresses. For more
        information, see "[About GitHub's IP
        addresses](https://help.github.com/articles/about-github-s-ip-addresses/)."
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                verifiable_password_authentication: true
                ssh_key_fingerprints:
                  MD5_RSA: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
                  MD5_DSA: ad:1c:08:a4:40:e3:6f:9c:f5:66:26:5d:4b:33:5d:8c
                  SHA256_RSA: nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8
                  SHA256_DSA: br9IjFspm1vxR3iA35FWE+4VTyz1hYVLIE2t1/CeyWQ
                hooks:
                  - 192.30.252.0/22
                web:
                  - 192.30.252.0/22
                  - 185.199.108.0/22
                api:
                  - 192.30.252.0/22
                  - 185.199.108.0/22
                git:
                  - 192.30.252.0/22
                pages:
                  - 192.30.252.153/32
                  - 192.30.252.154/32
                importer:
                  - 54.158.161.132
                  - 54.226.70.38
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{owner}/{repo}/events:
    get:
      tags:
        - General
      summary: List public events for a network of repositories
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          description: Page number of the results to fetch.
          example: '1'
        - name: owner
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: repo
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: Duis
                  type: labore magna
                  actor:
                    id: 95373152
                    login: minim fugiat non
                    gravatar_id: est nisi dolor
                    url: elit dolor tempor in aliquip
                    avatar_url: anim officia pariatur nostrud ipsum
                    display_login: cillum Excepteur aute pariatur
                  repo:
                    id: 7809622
                    name: sunt aliqua ipsum tempor
                    url: mollit nisi
                  payload:
                    action: enim in id dolore
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur proident
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: in
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: incididunt adipisicing veniam qui
                        html_url: laborum
                        patch_url: minim ut
                        url: culpa Duis reprehenderit ut Excepteur
                        merged_at: esse et culpa
                      body_html: labore
                      body_text: fugiat dolore consectetur
                      timeline_url: reprehenderit
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: true
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: 74059665
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: true
                        homepage: https://github.com
                        language: irure aute commodo
                        archived: false
                        disabled: false
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: 3584172
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 95751259
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: true
                          pull: true
                          push: true
                          triage: false
                          maintain: true
                        is_template: true
                        topics:
                          - aute in
                          - do laborum fugiat dolore culpa
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -74448652
                          node_id: labore proident aliqua
                          name: reprehenderit cupidatat
                          full_name: Duis ipsum amet proident dolor
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: true
                          html_url: quis et
                          description: cupidatat enim Ut
                          fork: true
                          url: anim quis Lorem do
                          archive_url: nulla sed fugiat Lorem
                          assignees_url: sit ut
                          blobs_url: ex ipsum voluptate
                          branches_url: ullamco amet sunt
                          collaborators_url: moll
                          comments_url: Duis aute eu
                          commits_url: labore fugiat
                          compare_url: quis id
                          contents_url: aute in minim
                          contributors_url: consequat Duis Lorem voluptate
                          deployments_url: ex ipsum minim
                          downloads_url: officia incididunt nisi Ut
                          events_url: qui
                          forks_url: in incididunt non
                          git_commits_url: dolor sint enim sed voluptate
                          git_refs_url: irure cupidatat aliquip voluptate
                          git_tags_url: commodo
                          git_url: quis anim nisi dolore deserunt
                          issue_comment_url: deserunt Excepteur occaecat
                          issue_events_url: fugiat laborum
                          issues_url: proident p
                          keys_url: sunt dolor enim amet
                          labels_url: ullamco laboris
                          languages_url: id aute voluptate
                          merges_url: nostrud paria
                          milestones_url: in officia
                          notifications_url: dolor qui deserunt tem
                          pulls_url: et aute
                          releases_url: ex
                          ssh_url: esse ut dolor
                          stargazers_url: ad dolore eu
                          statuses_url: id nisi eiusmod
                          subscribers_url: aute voluptate ullamco sed
                          subscription_url: tempor consequat qui elit
                          tags_url: in laborum
                          teams_url: eiusmod eu
                          trees_url: enim pariatur nulla in et
                          clone_url: sit pariatur dolore nisi
                          mirror_url: do
                          hooks_url: qui commodo consequat dolore elit
                          svn_url: ullamco sunt qui dolore eiusmod
                          homepage: Lorem aliquip
                          language: sunt sit
                          forks_count: -6817855
                          stargazers_count: -71285277
                          watchers_count: -20279907
                          size: 39472844
                          default_branch: officia et Excepteur do ex
                          open_issues_count: 22674481
                          is_template: true
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: false
                          has_projects: false
                          has_wiki: false
                          has_pages: true
                          has_downloads: true
                          archived: true
                          disabled: true
                          visibility: sunt commodo
                          pushed_at: tempor do ex culpa elit
                          created_at: veniam
                          updated_at: in quis cillum sunt
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: false
                          template_repository: Excepteur sit elit mollit
                          temp_clone_token: nostrud magna dolore cupidatat
                          allow_squash_merge: false
                          delete_branch_on_merge: true
                          allow_merge_commit: false
                          subscribers_count: -65005951
                          network_count: -69044006
                        temp_clone_token: labore dolore
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: -4318022
                        network_count: -10810678
                        master_branch: id anim in
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: anim amet
                      html_url: ullamco proident elit dolore
                      issue_url: cupidatat id proident deserunt
                      author_association: eiusmod occaecat mollit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: deserunt Duis
                      body_html: Ut
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: Ut in sunt fugiat occaecat
                        total_count: 19431373
                        '+1': -13368948
                        '-1': -90524562
                        laugh: 17359216
                        confused: 29335122
                        heart: -66585006
                        hooray: 75254661
                        eyes: 58121707
                        rocket: 51746123
                    pages:
                      - page_name: 'dolore '
                        title: exercitation
                        summary: et qui
                        action: proident laborum aute
                        sha: commodo sunt non
                        html_url: amet
                      - page_name: commodo nisi proident
                        title: consequat reprehe
                        summary: nulla aute dolore tempor
                        action: magna consequat
                        sha: cillum esse in qui
                        html_url: qui sunt Duis
                  public: false
                  created_at: incididunt u
                  org:
                    id: -35339806
                    login: quis aute
                    gravatar_id: qui dolore aliqu
                    url: nulla cillum est dolore magna
                    avatar_url: id
                    display_login: reprehenderit Duis
                - id: minim aute qui enim Lorem
                  type: ipsum elit cupidatat sed
                  actor:
                    id: 84442394
                    login: ut
                    gravatar_id: dolore
                    url: labore in
                    avatar_url: mollit elit nulla
                    display_login: dolor occaecat
                  repo:
                    id: -29038580
                    name: laborum adipisicing pariatur t
                    url: in
                  payload:
                    action: ex Excepteur vo
                    issue:
                      assignee:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: false
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      closed_at: Excepteur
                      comments: 0
                      comments_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
                      events_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/events
                      html_url: https://github.com/octocat/Hello-World/issues/1347
                      id: 1
                      node_id: MDU6SXNzdWUx
                      labels:
                        - type: boolean
                        - type: boolean
                      labels_url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
                      milestone:
                        closed_issues: 8
                        creator:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        description: Tracking milestone for version 1.0
                        due_on: '2012-10-09T23:39:01Z'
                        closed_at: '2013-02-12T13:22:01Z'
                        id: 1002604
                        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
                        labels_url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
                        number: 42
                        open_issues: 4
                        state: open
                        title: v1.0
                        url: >-
                          https://api.github.com/repos/octocat/Hello-World/milestones/1
                        created_at: '2011-04-10T20:09:31Z'
                        updated_at: '2014-03-03T18:58:10Z'
                      number: 1347
                      repository_url: https://api.github.com/repos/octocat/Hello-World
                      state: open
                      locked: true
                      title: Found a bug
                      url: >-
                        https://api.github.com/repos/octocat/Hello-World/issues/1347
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      author_association: et tempor minim dolor
                      created_at: '2011-04-22T13:33:48Z'
                      updated_at: '2011-04-22T13:33:48Z'
                      body: I'm having a problem with this.
                      assignees:
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        - avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: false
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                      active_lock_reason: too heated
                      pull_request:
                        diff_url: veniam nostrud ad reprehenderit
                        html_url: Excepteur magna minim inc
                        patch_url: labore consectetur exercitation fugiat
                        url: ex
                        merged_at: do dolor veniam quis
                      body_html: non consectetur
                      body_text: ea quis in
                      timeline_url: do
                      repository:
                        archive_url: >-
                          http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                        assignees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/assignees{/user}
                        blobs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                        branches_url: >-
                          http://api.github.com/repos/octocat/Hello-World/branches{/branch}
                        collaborators_url: >-
                          http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                        comments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/comments{/number}
                        commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/commits{/sha}
                        compare_url: >-
                          http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                        contents_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contents/{+path}
                        contributors_url: >-
                          http://api.github.com/repos/octocat/Hello-World/contributors
                        deployments_url: >-
                          http://api.github.com/repos/octocat/Hello-World/deployments
                        description: This your first repo!
                        downloads_url: >-
                          http://api.github.com/repos/octocat/Hello-World/downloads
                        events_url: http://api.github.com/repos/octocat/Hello-World/events
                        fork: false
                        forks_url: http://api.github.com/repos/octocat/Hello-World/forks
                        full_name: octocat/Hello-World
                        git_commits_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                        git_refs_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                        git_tags_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
                        html_url: https://github.com/octocat/Hello-World
                        id: 42
                        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                        issue_comment_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                        issue_events_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                        issues_url: >-
                          http://api.github.com/repos/octocat/Hello-World/issues{/number}
                        keys_url: >-
                          http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                        labels_url: >-
                          http://api.github.com/repos/octocat/Hello-World/labels{/name}
                        languages_url: >-
                          http://api.github.com/repos/octocat/Hello-World/languages
                        merges_url: http://api.github.com/repos/octocat/Hello-World/merges
                        milestones_url: >-
                          http://api.github.com/repos/octocat/Hello-World/milestones{/number}
                        name: Team Environment
                        notifications_url: >-
                          http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                        owner:
                          avatar_url: https://github.com/images/error/octocat_happy.gif
                          events_url: >-
                            https://api.github.com/users/octocat/events{/privacy}
                          followers_url: https://api.github.com/users/octocat/followers
                          following_url: >-
                            https://api.github.com/users/octocat/following{/other_user}
                          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                          gravatar_id: ''
                          html_url: https://github.com/octocat
                          id: 1
                          node_id: MDQ6VXNlcjE=
                          login: octocat
                          organizations_url: https://api.github.com/users/octocat/orgs
                          received_events_url: https://api.github.com/users/octocat/received_events
                          repos_url: https://api.github.com/users/octocat/repos
                          site_admin: true
                          starred_url: >-
                            https://api.github.com/users/octocat/starred{/owner}{/repo}
                          subscriptions_url: https://api.github.com/users/octocat/subscriptions
                          type: User
                          url: https://api.github.com/users/octocat
                          starred_at: '"2020-07-09T00:17:55Z"'
                        private: false
                        pulls_url: >-
                          http://api.github.com/repos/octocat/Hello-World/pulls{/number}
                        releases_url: >-
                          http://api.github.com/repos/octocat/Hello-World/releases{/id}
                        stargazers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/stargazers
                        statuses_url: >-
                          http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                        subscribers_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscribers
                        subscription_url: >-
                          http://api.github.com/repos/octocat/Hello-World/subscription
                        tags_url: http://api.github.com/repos/octocat/Hello-World/tags
                        teams_url: http://api.github.com/repos/octocat/Hello-World/teams
                        trees_url: >-
                          http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                        url: https://api.github.com/repos/octocat/Hello-World
                        clone_url: https://github.com/octocat/Hello-World.git
                        default_branch: master
                        forks: -2768827
                        forks_count: 9
                        git_url: git:github.com/octocat/Hello-World.git
                        has_downloads: true
                        has_issues: true
                        has_projects: true
                        has_wiki: true
                        has_pages: false
                        homepage: https://github.com
                        language: irure adipisicing ullamco consectetur
                        archived: false
                        disabled: true
                        mirror_url: git:git.example.com/octocat/Hello-World
                        open_issues: -70107099
                        open_issues_count: 0
                        license:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        pushed_at: '2011-01-26T19:06:43Z'
                        size: 108
                        ssh_url: git@github.com:octocat/Hello-World.git
                        stargazers_count: 80
                        svn_url: https://svn.github.com/octocat/Hello-World
                        watchers: 89851252
                        watchers_count: 80
                        created_at: '2011-01-26T19:01:12Z'
                        updated_at: '2011-01-26T19:14:43Z'
                        permissions:
                          admin: false
                          pull: false
                          push: true
                          triage: false
                          maintain: false
                        is_template: true
                        topics:
                          - oc
                          - volupt
                        visibility: public
                        allow_rebase_merge: true
                        template_repository:
                          id: -23559911
                          node_id: amet
                          name: ut proident ex quis
                          full_name: labore Duis
                          owner:
                            login:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            node_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            avatar_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gravatar_id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            html_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            followers_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            following_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            gists_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            starred_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            subscriptions_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            organizations_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            repos_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            received_events_url:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            type:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            site_admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          private: false
                          html_url: qui
                          description: sit est Duis enim consequat
                          fork: true
                          url: non consectetur id
                          archive_url: ''
                          assignees_url: nisi amet dolor eiusmod dolore
                          blobs_url: cupidatat ex aliqua laboris
                          branches_url: fugiat incididunt cillum commodo
                          collaborators_url: eiusmod tempor voluptate aliqua
                          comments_url: sed veniam id
                          commits_url: sed amet
                          compare_url: ut aliqua ullamco mini
                          contents_url: in v
                          contributors_url: sit
                          deployments_url: consequat cillum tempor
                          downloads_url: occaecat reprehenderit
                          events_url: est
                          forks_url: sit
                          git_commits_url: officia in et non
                          git_refs_url: esse
                          git_tags_url: a
                          git_url: 'ut '
                          issue_comment_url: elit Duis Ut dolore exercitation
                          issue_events_url: sit voluptate
                          issues_url: non anim aliqua mollit
                          keys_url: in nostrud nulla Duis laborum
                          labels_url: sed
                          languages_url: dolor Duis Excepteur
                          merges_url: sunt irure
                          milestones_url: aute
                          notifications_url: consequat
                          pulls_url: quis elit ad Ut
                          releases_url: pariatur
                          ssh_url: Lorem ad velit esse
                          stargazers_url: amet ea
                          statuses_url: mollit
                          subscribers_url: tempor pariatur
                          subscription_url: quis a
                          tags_url: veniam in
                          teams_url: sint officia do laboris
                          trees_url: labore nisi cillum Ut
                          clone_url: in eiusmod nostrud quis in
                          mirror_url: deserunt culpa sunt
                          hooks_url: proident Excepteur ut exercitation
                          svn_url: non et consequat elit enim
                          homepage: aute voluptate
                          language: est qui
                          forks_count: -44453726
                          stargazers_count: -23546435
                          watchers_count: 85435987
                          size: 87085671
                          default_branch: ullamco
                          open_issues_count: 8382001
                          is_template: false
                          topics:
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            - value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          has_issues: true
                          has_projects: false
                          has_wiki: true
                          has_pages: true
                          has_downloads: false
                          archived: false
                          disabled: false
                          visibility: est Lorem
                          pushed_at: id labore
                          created_at: aliqua
                          updated_at: sint proident
                          permissions:
                            admin:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            push:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            pull:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          allow_rebase_merge: true
                          template_repository: non nisi laborum dolor enim
                          temp_clone_token: aliqua enim dolore labore
                          allow_squash_merge: false
                          delete_branch_on_merge: false
                          allow_merge_commit: true
                          subscribers_count: 71791566
                          network_count: 73783930
                        temp_clone_token: officia pariatur nisi incididunt
                        allow_squash_merge: true
                        delete_branch_on_merge: false
                        allow_merge_commit: true
                        subscribers_count: 96412870
                        network_count: 50789411
                        master_branch: occaeca
                        starred_at: '"2020-07-09T00:17:42Z"'
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                    comment:
                      id: 42
                      node_id: ad et
                      html_url: in Lorem
                      issue_url: est amet Lorem
                      author_association: sint aliquip dolor sunt elit
                      user:
                        avatar_url: https://github.com/images/error/octocat_happy.gif
                        events_url: https://api.github.com/users/octocat/events{/privacy}
                        followers_url: https://api.github.com/users/octocat/followers
                        following_url: >-
                          https://api.github.com/users/octocat/following{/other_user}
                        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                        gravatar_id: ''
                        html_url: https://github.com/octocat
                        id: 1
                        node_id: MDQ6VXNlcjE=
                        login: octocat
                        organizations_url: https://api.github.com/users/octocat/orgs
                        received_events_url: https://api.github.com/users/octocat/received_events
                        repos_url: https://api.github.com/users/octocat/repos
                        site_admin: true
                        starred_url: >-
                          https://api.github.com/users/octocat/starred{/owner}{/repo}
                        subscriptions_url: https://api.github.com/users/octocat/subscriptions
                        type: User
                        url: https://api.github.com/users/octocat
                        starred_at: '"2020-07-09T00:17:55Z"'
                      url: https://api.github.com/repositories/42/issues/comments/1
                      created_at: '2011-04-14T16:00:49Z'
                      updated_at: '2011-04-14T16:00:49Z'
                      body: >-
                        What version of Safari were you using when you observed
                        this bug?
                      body_text: quis dolore occaecat consequat
                      body_html: Duis exercitation
                      performed_via_github_app:
                        id: 37
                        node_id: MDExOkludGVncmF0aW9uMQ==
                        owner:
                          value: >-
                            <Error: Too many levels of nesting to fake this
                            schema>
                        name: Probot Owners
                        description: ''
                        external_url: https://example.com
                        html_url: https://github.com/apps/super-ci
                        created_at: '2017-07-08T16:18:44-04:00'
                        updated_at: '2017-07-08T16:18:44-04:00'
                        permissions:
                          issues: read
                          deployments: write
                        events:
                          - label
                          - deployment
                        slug: probot-owners
                        installations_count: 5
                        client_id: '"Iv1.25b5d1e65ffc4022"'
                        client_secret: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
                        webhook_secret: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
                        pem: >-
                          "-----BEGIN RSA PRIVATE
                          KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
                          RSA PRIVATE KEY-----\n"
                      reactions:
                        url: in amet dolor
                        total_count: -99329732
                        '+1': -93375299
                        '-1': -63132563
                        laugh: 84247895
                        confused: -30251332
                        heart: -25918793
                        hooray: 65956382
                        eyes: 66357128
                        rocket: 23108649
                    pages:
                      - page_name: repreh
                        title: sed in
                        summary: veniam do ut
                        action: labore adipisicing irure in
                        sha: aute velit
                        html_url: officia nulla laboris sit
                      - page_name: cillum consectetur exercitation ad Lorem
                        title: ut laboris anim
                        summary: officia irure vol
                        action: ea velit nisi
                        sha: dolor
                        html_url: 'Excepteur sunt Lorem '
                  public: false
                  created_at: labore id tempor
                  org:
                    id: 65537797
                    login: ipsum
                    gravatar_id: proident culpa
                    url: voluptate labore
                    avatar_url: aute exercitation in ut nostrud
                    display_login: eu velit nisi
        '301':
          description: Moved Permanently
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /octocat:
    get:
      tags:
        - General
      summary: Get Octocat
      description: Get the octocat as ASCII art
      parameters:
        - name: s
          in: query
          schema:
            type: string
          description: The words to show in Octocat's speech bubble
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/octocat-stream
          content:
            text/plain:
              schema:
                type: string
              example: anim
  /organizations:
    get:
      tags:
        - General
      summary: List organizations
      description: >-
        Lists all organizations, in the order that they were created on GitHub.


        **Note:** Pagination is powered exclusively by the `since` parameter.
        Use the [Link header](https://developer.github.com/v3/#link-header) to
        get the URL for the next page of organizations.
      parameters:
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - login: github
                  id: 1
                  node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                  url: https://api.github.com/orgs/github
                  repos_url: https://api.github.com/orgs/github/repos
                  events_url: https://api.github.com/orgs/github/events
                  hooks_url: https://api.github.com/orgs/github/hooks
                  issues_url: https://api.github.com/orgs/github/issues
                  members_url: https://api.github.com/orgs/github/members{/member}
                  public_members_url: https://api.github.com/orgs/github/public_members{/member}
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  description: A great organization
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /rate_limit:
    get:
      tags:
        - General
      summary: Get rate limit status for the authenticated user
      description: >-
        **Note:** Accessing this endpoint does not count against your REST API
        rate limit.


        **Note:** The `rate` object is deprecated. If you're writing new API
        client code or updating existing code, you should use the `core` object
        instead of the `rate` object. The `core` object contains the same
        information that is present in the `rate` object.
      responses:
        '200':
          description: OK
          headers:
            X-RateLimit-Limit:
              schema:
                type: number
                example: '-18965649'
            X-RateLimit-Remaining:
              schema:
                type: number
                example: '-18965649'
            X-RateLimit-Reset:
              schema:
                type: number
                example: '-18965649'
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                resources:
                  core:
                    limit: 5000
                    remaining: 4999
                    reset: 1372700873
                  search:
                    limit: 30
                    remaining: 18
                    reset: 1372697452
                  graphql:
                    limit: 5000
                    remaining: 4993
                    reset: 1372700389
                  integration_manifest:
                    limit: 5000
                    remaining: 4999
                    reset: 1551806725
                rate:
                  limit: 5000
                  remaining: 4999
                  reset: 1372700873
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
  /reactions/{reaction_id}:
    delete:
      tags:
        - General
      summary: Delete a reaction (Legacy)
      description: >-
        **Deprecation Notice:** This endpoint route is deprecated and will be
        removed from the Reactions API. We recommend migrating your existing
        code to use the new delete reactions endpoints. For more information,
        see this [blog
        post](https://developer.github.com/changes/2020-02-26-new-delete-reactions-endpoints/).


        OAuth access tokens require the `write:discussion`
        [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/),
        when deleting a [team
        discussion](https://developer.github.com/v3/teams/discussions/) or [team
        discussion
        comment](https://developer.github.com/v3/teams/discussion_comments/).
      parameters:
        - name: reaction_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <integer>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '410':
          description: Gone
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: incididunt labore
                documentation_url: non
        '415':
          description: Unsupported Media Type
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: enim velit officia
                documentation_url: et proident
  /repositories:
    get:
      tags:
        - General
      summary: List public repositories
      description: >-
        Lists all public repositories in the order that they were created.


        Note: Pagination is powered exclusively by the `since` parameter. Use
        the [Link header](https://developer.github.com/v3/#link-header) to get
        the URL for the next page of repositories.
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
          description: Results per page (max 100)
          example: '30'
        - name: since
          in: query
          schema:
            type: string
          description: >-
            Only show notifications updated after the given time. This is a
            timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            format: `YYYY-MM-DDTHH:MM:SSZ`.
          example: <string>
        - name: visibility
          in: query
          schema:
            type: string
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: anim
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1296269
                  node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
                  name: Hello-World
                  full_name: octocat/Hello-World
                  owner:
                    login: octocat
                    id: 1
                    node_id: MDQ6VXNlcjE=
                    avatar_url: https://github.com/images/error/octocat_happy.gif
                    gravatar_id: ''
                    url: https://api.github.com/users/octocat
                    html_url: https://github.com/octocat
                    followers_url: https://api.github.com/users/octocat/followers
                    following_url: >-
                      https://api.github.com/users/octocat/following{/other_user}
                    gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                    starred_url: >-
                      https://api.github.com/users/octocat/starred{/owner}{/repo}
                    subscriptions_url: https://api.github.com/users/octocat/subscriptions
                    organizations_url: https://api.github.com/users/octocat/orgs
                    repos_url: https://api.github.com/users/octocat/repos
                    events_url: https://api.github.com/users/octocat/events{/privacy}
                    received_events_url: https://api.github.com/users/octocat/received_events
                    type: User
                    site_admin: false
                  private: false
                  html_url: https://github.com/octocat/Hello-World
                  description: This your first repo!
                  fork: false
                  url: https://api.github.com/repos/octocat/Hello-World
                  archive_url: >-
                    https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
                  assignees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/assignees{/user}
                  blobs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
                  branches_url: >-
                    https://api.github.com/repos/octocat/Hello-World/branches{/branch}
                  collaborators_url: >-
                    https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
                  comments_url: >-
                    https://api.github.com/repos/octocat/Hello-World/comments{/number}
                  commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/commits{/sha}
                  compare_url: >-
                    https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
                  contents_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contents/{+path}
                  contributors_url: >-
                    https://api.github.com/repos/octocat/Hello-World/contributors
                  deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
                  downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
                  events_url: https://api.github.com/repos/octocat/Hello-World/events
                  forks_url: https://api.github.com/repos/octocat/Hello-World/forks
                  git_commits_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
                  git_refs_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
                  git_tags_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
                  git_url: git:github.com/octocat/Hello-World.git
                  issue_comment_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
                  issue_events_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
                  issues_url: >-
                    https://api.github.com/repos/octocat/Hello-World/issues{/number}
                  keys_url: >-
                    https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
                  labels_url: >-
                    https://api.github.com/repos/octocat/Hello-World/labels{/name}
                  languages_url: https://api.github.com/repos/octocat/Hello-World/languages
                  merges_url: https://api.github.com/repos/octocat/Hello-World/merges
                  milestones_url: >-
                    https://api.github.com/repos/octocat/Hello-World/milestones{/number}
                  notifications_url: >-
                    https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
                  pulls_url: >-
                    https://api.github.com/repos/octocat/Hello-World/pulls{/number}
                  releases_url: >-
                    https://api.github.com/repos/octocat/Hello-World/releases{/id}
                  ssh_url: git@github.com:octocat/Hello-World.git
                  stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
                  statuses_url: >-
                    https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
                  subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
                  subscription_url: >-
                    https://api.github.com/repos/octocat/Hello-World/subscription
                  tags_url: https://api.github.com/repos/octocat/Hello-World/tags
                  teams_url: https://api.github.com/repos/octocat/Hello-World/teams
                  trees_url: >-
                    https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
                  hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        '304':
          description: Not Modified
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: culpa mollit
                documentation_url: ipsum ut
                errors:
                  - code: consequat enim et velit
                    resource: anim ullamco
                    field: voluptate officia amet
                    message: exercitation sed dolore est
                    index: 18359415
                    value: ullamco ut velit nulla eiusmod
                  - code: occaecat eiusmod Duis
                    resource: esse ad Excepteur mollit
                    field: minim ipsum nisi exercitation non
                    message: proident reprehenderit
                    index: -23326731
                    value: adipisicing cupidatat culpa in
  /zen:
    get:
      tags:
        - General
      summary: Get the Zen of GitHub
      description: Get a random sentence from the Zen of GitHub
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: anim
