openapi: 3.0.0
info:
  title: Slack Web API
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: Admin API
    description: >-
      Use approval and provisioning APIs to help Slack Admins work more
      effectively.


      Secure your organization with auditing and session management APIs.


      The following list of features and APIs are available in Enterprise Grid
      workspaces only.


      These endpoints require a *User Token* with resource-specific `admin` 
      [scopes](https://api.slack.com/scopes/).


      For more information, see [Apps for Slack
      Admins](https://api.slack.com/admins)
  - name: Web API
    description: >
      The Slack Web API is an interface for querying information from and
      enacting change in a Slack workspace.


      Use it on the fly for ad-hoc queries, or as part of a more complex
      tapestry of platform features in a [Slack
      app](https://api.slack.com/start/overview).


      What can you do with the Web API? [Find
      out](https://api.slack.com/methods)



      [Web API basics](https://api.slack.com/web#basics)


      [Evaluating responses](https://api.slack.com/web#responses)


      [Authentication](https://api.slack.com/web#authentication)


      [HTTPS, SSL, and TLS](https://api.slack.com/web#ssl)


      [OpenAPI specification](https://api.slack.com/web#spec)


      [Methods](https://api.slack.com/web#methods)
paths:
  /admin.users.setOwner:
    post:
      tags:
        - Admin API
      summary: admin users set Owner
      description: >-
        Set an existing guest, regular user, or admin user to be a workspace
        owner.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                  example: <string>
                user_id:
                  type: string
                  description: Id of the user to promote to owner.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.session.reset:
    post:
      tags:
        - Admin API
      summary: admin users session reset
      description: Wipes all valid sessions on all devices for a given user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: The ID of the user to wipe sessions for
                  example: <string>
                mobile_only:
                  type: string
                  description: 'Only expire mobile sessions (default: false)'
                  example: <boolean>
                web_only:
                  type: string
                  description: 'Only expire web sessions (default: false)'
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.apps.approve:
    post:
      tags:
        - Admin API
      summary: admin apps approve
      description: Approve an app for installation on a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                app_id:
                  type: string
                  description: The id of the app to approve.
                  example: <string>
                request_id:
                  type: string
                  description: The id of the request to approve.
                  example: <string>
                team_id:
                  type: string
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.apps:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.apps.approved.list:
    get:
      tags:
        - Admin API
      summary: admin apps approved list
      description: List approved apps for an org or workspace.
      parameters:
        - name: token
          in: query
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.apps:read`'
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          example: <string>
        - name: enterprise_id
          in: query
          schema:
            type: string
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.apps.requests.list:
    get:
      tags:
        - Admin API
      summary: admin apps requests list
      description: List app requests for a team/workspace.
      parameters:
        - name: token
          in: query
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.apps:read`'
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.apps.restricted.list:
    get:
      tags:
        - Admin API
      summary: admin apps restricted list
      description: List restricted apps for an org or workspace.
      parameters:
        - name: token
          in: query
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.apps:read`'
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          example: <string>
        - name: enterprise_id
          in: query
          schema:
            type: string
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.conversations.archive:
    post:
      tags:
        - Admin API
      summary: admin conversations archive
      description: Archive a public or private channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The channel to archive.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.apps.restrict:
    post:
      tags:
        - Admin API
      summary: admin apps restrict
      description: Restrict an app for installation on a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                app_id:
                  type: string
                  description: The id of the app to restrict.
                  example: <string>
                request_id:
                  type: string
                  description: The id of the request to restrict.
                  example: <string>
                team_id:
                  type: string
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.apps:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.conversations.convertToPrivate:
    post:
      tags:
        - Admin API
      summary: admin conversations convert To Private
      description: Convert a public channel to a private channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The channel to convert to private.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.create:
    post:
      tags:
        - Admin API
      summary: admin conversations create
      description: Create a public or private channel-based conversation.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the public or private channel to create.
                  example: <string>
                is_private:
                  type: string
                  description: >-
                    When `true`, creates a private channel instead of a public
                    channel
                  example: <boolean>
                description:
                  type: string
                  description: Description of the public or private channel to create.
                  example: <string>
                org_wide:
                  type: string
                  description: >-
                    When `true`, the channel will be available org-wide. Note:
                    if the channel is not `org_wide=true`, you must specify a
                    `team_id` for this channel
                  example: <boolean>
                team_id:
                  type: string
                  description: >-
                    The workspace to create the channel in. Note: this argument
                    is required unless you set `org_wide=true`.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel_id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.delete:
    post:
      tags:
        - Admin API
      summary: admin conversations delete
      description: Delete a public or private channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The channel to delete.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.disconnectShared:
    post:
      tags:
        - Admin API
      summary: admin conversations disconnect Shared
      description: Disconnect a connected channel from one or more workspaces.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The channel to be disconnected from some workspaces.
                  example: <string>
                leaving_team_ids:
                  type: string
                  description: >-
                    The team to be removed from the channel. Currently only a
                    single team id can be specified.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.ekm.listOriginalConnectedChannelInfo:
    get:
      tags:
        - Admin API
      summary: admin conversations ekm list Original Connected Channel Info
      description: >-
        List all disconnected channels—i.e., channels that were once connected
        to other workspaces and then disconnected—and the corresponding original
        channel IDs for key revocation with EKM.
      parameters:
        - name: token
          in: query
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:read`
          example: <string>
        - name: channel_ids
          in: query
          schema:
            type: string
          description: A comma-separated list of channels to filter to.
          example: <string>
        - name: team_ids
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of the workspaces to which the channels you
            would like returned belong.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.conversations.getTeams:
    get:
      tags:
        - Admin API
      summary: admin conversations get Teams
      description: >-
        Get all the workspaces a given public or private channel is connected to
        within this Enterprise org.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:read`
          example: <string>
        - name: channel_id
          in: query
          schema:
            type: string
          description: >-
            (Required) The channel to determine connected workspaces within the
            organization for.
          example: <string>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                team_ids:
                  - <string>
                  - <string>
                response_metadata:
                  next_cursor: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.getConversationPrefs:
    get:
      tags:
        - Admin API
      summary: admin conversations get Conversation Prefs
      description: Get conversation preferences for a public or private channel.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:read`
          example: <string>
        - name: channel_id
          in: query
          schema:
            type: string
          description: (Required) The channel to get preferences for.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                prefs:
                  can_thread:
                    type:
                      - <string>
                      - <string>
                    user:
                      - <string>
                      - <string>
                  who_can_post:
                    type:
                      - <string>
                      - <string>
                    user:
                      - <string>
                      - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.rename:
    post:
      tags:
        - Admin API
      summary: admin conversations rename
      description: Rename a public or private channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The channel to rename.
                  example: <string>
                name:
                  type: string
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.invite:
    post:
      tags:
        - Admin API
      summary: admin conversations invite
      description: Invite a user to a public or private channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_ids:
                  type: string
                  description: The users to invite.
                  example: <string>
                channel_id:
                  type: string
                  description: The channel that the users will be invited to.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.restrictAccess.removeGroup:
    post:
      tags:
        - Admin API
      summary: admin conversations restrict Access remove Group
      description: Remove a linked IDP group linked from a private channel
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: >-
                    Authentication token. Requires scope:
                    `admin.conversations:write`
                  example: <string>
                team_id:
                  type: string
                  description: >-
                    The workspace where the channel exists. This argument is
                    required for channels only tied to one workspace, and
                    optional for channels that are shared across an
                    organization.
                  example: <string>
                group_id:
                  type: string
                  description: >-
                    The [IDP
                    Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org)
                    ID to remove from the private channel.
                  example: <string>
                channel_id:
                  type: string
                  description: The channel to remove the linked group from.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.conversations.restrictAccess.listGroups:
    get:
      tags:
        - Admin API
      summary: admin conversations restrict Access list Groups
      description: List all IDP Groups linked to a channel
      parameters:
        - name: token
          in: query
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:read`
          example: <string>
        - name: channel_id
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            The workspace where the channel exists. This argument is required
            for channels only tied to one workspace, and optional for channels
            that are shared across an organization.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.conversations.restrictAccess.addGroup:
    post:
      tags:
        - Admin API
      summary: admin conversations restrict Access add Group
      description: Add an allowlist of IDP groups for accessing a channel
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: >-
                    Authentication token. Requires scope:
                    `admin.conversations:write`
                  example: <string>
                group_id:
                  type: string
                  description: >-
                    The [IDP
                    Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org)
                    ID to be an allowlist for the private channel.
                  example: <string>
                channel_id:
                  type: string
                  description: The channel to link this group to.
                  example: <string>
                team_id:
                  type: string
                  description: >-
                    The workspace where the channel exists. This argument is
                    required for channels only tied to one workspace, and
                    optional for channels that are shared across an
                    organization.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.conversations.search:
    get:
      tags:
        - Admin API
      summary: admin conversations search
      description: Search for public or private channels in an Enterprise organization.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:read`
          example: <string>
        - name: team_ids
          in: query
          schema:
            type: string
          description: >-
            Comma separated string of team IDs, signifying the workspaces to
            search through.
          example: <string>
        - name: query
          in: query
          schema:
            type: string
          description: Name of the the channel to query by.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            Maximum number of items to be returned. Must be between 1 - 20 both
            inclusive. Default is 10.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          example: <string>
        - name: search_channel_types
          in: query
          schema:
            type: string
          description: >-
            The type of channel to include or exclude in the search. For example
            `private` will search private channels, while `private_exclude` will
            exclude them. For a full list of types, check the [Types
            section](#types).
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Possible values are `relevant` (search ranking based on what we
            think is closest), `name` (alphabetical), `member_count` (number of
            users in the channel), and `created` (date channel was created). You
            can optionally pair this with the `sort_dir` arg to change how it is
            sorted 
          example: <string>
        - name: sort_dir
          in: query
          schema:
            type: string
          description: >-
            Sort direction. Possible values are `asc` for ascending order like
            (1, 2, 3) or (a, b, c), and `desc` for descending order like (3, 2,
            1) or (c, b, a)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                channels:
                  - id: <string>
                    name: <string>
                    created: <integer>
                    creator: <string>
                    is_channel: <boolean>
                    is_org_shared: <boolean>
                    is_private: <boolean>
                    is_mpim: <boolean>
                    is_shared: <boolean>
                    name_normalized: <string>
                    members:
                      - <string>
                    topic:
                      value: <string>
                      creator: <string>
                      last_set: <integer>
                    purpose:
                      value: <string>
                      creator: <string>
                      last_set: <integer>
                    accepted_user: <string>
                    is_archived: <boolean>
                    is_frozen: <boolean>
                    is_general: <boolean>
                    is_member: <boolean>
                    is_moved: <integer>
                    is_non_threadable: <boolean>
                    is_pending_ext_shared: <boolean>
                    is_read_only: <boolean>
                    is_thread_only: <boolean>
                    last_read: <string>
                    latest: {}
                    num_members: <integer>
                    pending_shared:
                      - <string>
                    previous_names:
                      - <string>
                    priority: <number>
                    unlinked: <integer>
                    unread_count: <integer>
                    unread_count_display: <integer>
                  - id: <string>
                    name: <string>
                    created: <integer>
                    creator: <string>
                    is_channel: <boolean>
                    is_org_shared: <boolean>
                    is_private: <boolean>
                    is_mpim: <boolean>
                    is_shared: <boolean>
                    name_normalized: <string>
                    members:
                      - <string>
                    topic:
                      value: <string>
                      creator: <string>
                      last_set: <integer>
                    purpose:
                      value: <string>
                      creator: <string>
                      last_set: <integer>
                    accepted_user: <string>
                    is_archived: <boolean>
                    is_frozen: <boolean>
                    is_general: <boolean>
                    is_member: <boolean>
                    is_moved: <integer>
                    is_non_threadable: <boolean>
                    is_pending_ext_shared: <boolean>
                    is_read_only: <boolean>
                    is_thread_only: <boolean>
                    last_read: <string>
                    latest: {}
                    num_members: <integer>
                    pending_shared:
                      - <string>
                    previous_names:
                      - <string>
                    priority: <number>
                    unlinked: <integer>
                    unread_count: <integer>
                    unread_count_display: <integer>
                next_cursor: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.setConversationPrefs:
    post:
      tags:
        - Admin API
      summary: admin conversations set Conversation Prefs
      description: Set the posting permissions for a public or private channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The channel to set the prefs for
                  example: <string>
                prefs:
                  type: string
                  description: The prefs for this channel in a stringified JSON format.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.conversations.setTeams:
    post:
      tags:
        - Admin API
      summary: admin conversations set Teams
      description: >-
        Set the workspaces in an Enterprise grid org that connect to a public or
        private channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The encoded `channel_id` to add or remove to workspaces.
                  example: <string>
                team_id:
                  type: string
                  description: >-
                    The workspace to which the channel belongs. Omit this
                    argument if the channel is a cross-workspace shared channel.
                  example: <string>
                target_team_ids:
                  type: string
                  description: >-
                    A comma-separated list of workspaces to which the channel
                    should be shared. Not required if the channel is being
                    shared org-wide.
                  example: <string>
                org_channel:
                  type: string
                  description: True if channel has to be converted to an org channel
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.emoji.add:
    post:
      tags:
        - Admin API
      summary: admin emoji add
      description: Add an emoji.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `admin.teams:write`'
                  example: <string>
                name:
                  type: string
                  description: >-
                    The name of the emoji to be removed. Colons (`:myemoji:`)
                    around the value are not required, although they may be
                    included.
                  example: <string>
                url:
                  type: string
                  description: >-
                    The URL of a file to use as an image for the emoji. Square
                    images under 128KB and with transparent backgrounds work
                    best.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.emoji.addAlias:
    post:
      tags:
        - Admin API
      summary: admin emoji add Alias
      description: Add an emoji alias.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `admin.teams:write`'
                  example: <string>
                name:
                  type: string
                  description: >-
                    The name of the emoji to be aliased. Colons (`:myemoji:`)
                    around the value are not required, although they may be
                    included.
                  example: <string>
                alias_for:
                  type: string
                  description: The alias of the emoji.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.emoji.list:
    get:
      tags:
        - Admin API
      summary: admin emoji list
      description: List emoji for an Enterprise Grid organization.
      parameters:
        - name: token
          in: query
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:read`'
          example: <string>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.conversations.unarchive:
    post:
      tags:
        - Admin API
      summary: admin conversations unarchive
      description: Unarchive a public or private channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The channel to unarchive.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.conversations:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /admin.emoji.rename:
    post:
      tags:
        - Admin API
      summary: admin emoji rename
      description: Rename an emoji.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `admin.teams:write`'
                  example: <string>
                name:
                  type: string
                  description: >-
                    The name of the emoji to be renamed. Colons (`:myemoji:`)
                    around the value are not required, although they may be
                    included.
                  example: <string>
                new_name:
                  type: string
                  description: The new name of the emoji.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.emoji.remove:
    post:
      tags:
        - Admin API
      summary: admin emoji remove
      description: Remove an emoji across an Enterprise Grid organization
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `admin.teams:write`'
                  example: <string>
                name:
                  type: string
                  description: >-
                    The name of the emoji to be removed. Colons (`:myemoji:`)
                    around the value are not required, although they may be
                    included.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.inviteRequests.approve:
    post:
      tags:
        - Admin API
      summary: admin invite Requests approve
      description: Approve a workspace invite request.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                invite_request_id:
                  type: string
                  description: ID of the request to invite.
                  example: <string>
                team_id:
                  type: string
                  description: ID for the workspace where the invite request was made.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.invites:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.inviteRequests.approved.list:
    get:
      tags:
        - Admin API
      summary: admin invite Requests approved list
      description: List all approved workspace invite requests.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.invites:read`
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: ID for the workspace where the invite requests were made.
          example: <string>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Value of the `next_cursor` field sent as part of the previous API
            response
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The number of results that will be returned by the API on each
            invocation. Must be between 1 - 1000, both inclusive
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.inviteRequests.deny:
    post:
      tags:
        - Admin API
      summary: admin invite Requests deny
      description: Deny a workspace invite request.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                invite_request_id:
                  type: string
                  description: ID of the request to invite.
                  example: <string>
                team_id:
                  type: string
                  description: ID for the workspace where the invite request was made.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.invites:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.inviteRequests.denied.list:
    get:
      tags:
        - Admin API
      summary: admin invite Requests denied list
      description: List all denied workspace invite requests.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.invites:read`
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: ID for the workspace where the invite requests were made.
          example: <string>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Value of the `next_cursor` field sent as part of the previous api
            response
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The number of results that will be returned by the API on each
            invocation. Must be between 1 - 1000 both inclusive
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.inviteRequests.list:
    get:
      tags:
        - Admin API
      summary: admin invite Requests list
      description: List all pending workspace invite requests.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.invites:read`
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: ID for the workspace where the invite requests were made.
          example: <string>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Value of the `next_cursor` field sent as part of the previous API
            response
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The number of results that will be returned by the API on each
            invocation. Must be between 1 - 1000, both inclusive
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.admins.list:
    get:
      tags:
        - Admin API
      summary: admin teams admins list
      description: List all of the admins on a given workspace.
      parameters:
        - name: token
          in: query
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:read`'
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: The maximum number of items to return.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.create:
    post:
      tags:
        - Admin API
      summary: admin teams create
      description: Create an Enterprise team.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_domain:
                  type: string
                  description: Team domain (for example, slacksoftballteam).
                  example: <string>
                team_name:
                  type: string
                  description: Team name (for example, Slack Softball Team).
                  example: <string>
                team_description:
                  type: string
                  description: Description for the team.
                  example: <string>
                team_discoverability:
                  type: string
                  description: >-
                    Who can join the team. A team's discoverability can be
                    `open`, `closed`, `invite_only`, or `unlisted`.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.list:
    get:
      tags:
        - Admin API
      summary: admin teams list
      description: List all teams on an Enterprise organization
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:read`'
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Must be between 1 - 100 both
            inclusive.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.owners.list:
    get:
      tags:
        - Admin API
      summary: admin teams owners list
      description: List all of the owners on a given workspace.
      parameters:
        - name: token
          in: query
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:read`'
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.settings.info:
    get:
      tags:
        - Admin API
      summary: admin teams settings info
      description: Fetch information about settings in a workspace
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:read`'
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.settings.setDescription:
    post:
      tags:
        - Admin API
      summary: admin teams settings set Description
      description: Set the description of a given workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: ID for the workspace to set the description for.
                  example: <string>
                description:
                  type: string
                  description: The new description for the workspace.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.settings.setDiscoverability:
    post:
      tags:
        - Admin API
      summary: admin teams settings set Discoverability
      description: >-
        An API method that allows admins to set the discoverability of a given
        workspace
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: The ID of the workspace to set discoverability on.
                  example: <string>
                discoverability:
                  type: string
                  description: >-
                    This workspace's discovery setting. It must be set to one of
                    `open`, `invite_only`, `closed`, or `unlisted`.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.settings.setIcon:
    post:
      tags:
        - Admin API
      summary: admin teams settings set Icon
      description: Sets the icon of a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `admin.teams:write`'
                  example: <string>
                image_url:
                  type: string
                  description: Image URL for the icon
                  example: <string>
                team_id:
                  type: string
                  description: ID for the workspace to set the icon for.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.settings.setName:
    post:
      tags:
        - Admin API
      summary: admin teams settings set Name
      description: Set the name of a given workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: ID for the workspace to set the name for.
                  example: <string>
                name:
                  type: string
                  description: The new name of the workspace.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.teams.settings.setDefaultChannels:
    post:
      tags:
        - Admin API
      summary: admin teams settings set Default Channels
      description: Set the default channels of a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `admin.teams:write`'
                  example: <string>
                team_id:
                  type: string
                  description: ID for the workspace to set the default channel for.
                  example: <string>
                channel_ids:
                  type: string
                  description: An array of channel IDs.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.usergroups.addChannels:
    post:
      tags:
        - Admin API
      summary: admin usergroups add Channels
      description: Add one or more default channels to an IDP group.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                usergroup_id:
                  type: string
                  description: ID of the IDP group to add default channels for.
                  example: <string>
                channel_ids:
                  type: string
                  description: Comma separated string of channel IDs.
                  example: <string>
                team_id:
                  type: string
                  description: The workspace to add default channels in.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.usergroups:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.usergroups.listChannels:
    get:
      tags:
        - Admin API
      summary: admin usergroups list Channels
      description: List the channels linked to an org-level IDP group (user group).
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.usergroups:read`
          example: <string>
        - name: usergroup_id
          in: query
          schema:
            type: string
          description: (Required) ID of the IDP group to list default channels for.
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: ID of the the workspace.
          example: <string>
        - name: include_num_members
          in: query
          schema:
            type: string
          description: Flag to include or exclude the count of members per channel.
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.usergroups.addTeams:
    post:
      tags:
        - Admin API
      summary: admin usergroups add Teams
      description: >-
        Associate one or more default workspaces with an organization-wide IDP
        group.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                usergroup_id:
                  type: string
                  description: An encoded usergroup (IDP Group) ID.
                  example: <string>
                team_ids:
                  type: string
                  description: >-
                    A comma separated list of encoded team (workspace) IDs. Each
                    workspace *MUST* belong to the organization associated with
                    the token.
                  example: <string>
                auto_provision:
                  type: string
                  description: >-
                    When `true`, this method automatically creates new workspace
                    accounts for the IDP group members.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.teams:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.invite:
    post:
      tags:
        - Admin API
      summary: admin users invite
      description: Invite a user to a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                  example: <string>
                email:
                  type: string
                  description: The email address of the person to invite.
                  example: <string>
                channel_ids:
                  type: string
                  description: >-
                    A comma-separated list of `channel_id`s for this user to
                    join. At least one channel is required.
                  example: <string>
                custom_message:
                  type: string
                  description: An optional message to send to the user in the invite email.
                  example: <string>
                real_name:
                  type: string
                  description: Full name of the user.
                  example: <string>
                resend:
                  type: string
                  description: >-
                    Allow this invite to be resent in the future if a user has
                    not signed up yet. (default: false)
                  example: <boolean>
                is_restricted:
                  type: string
                  description: 'Is this user a multi-channel guest user? (default: false)'
                  example: <boolean>
                is_ultra_restricted:
                  type: string
                  description: 'Is this user a single channel guest user? (default: false)'
                  example: <boolean>
                guest_expiration_ts:
                  type: string
                  description: >-
                    Timestamp when guest account should be disabled. Only
                    include this timestamp if you are inviting a guest user and
                    you want their account to expire on a certain date.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.usergroups.removeChannels:
    post:
      tags:
        - Admin API
      summary: admin usergroups remove Channels
      description: >-
        Remove one or more default channels from an org-level IDP group (user
        group).
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                usergroup_id:
                  type: string
                  description: ID of the IDP Group
                  example: <string>
                channel_ids:
                  type: string
                  description: Comma-separated string of channel IDs
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `admin.usergroups:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.list:
    get:
      tags:
        - Admin API
      summary: admin users list
      description: List users on a workspace
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:read`'
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: (Required) The ID (`T1234`) of the workspace.
          example: <string>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: Limit for how many users to be retrieved per page
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.session.invalidate:
    post:
      tags:
        - Admin API
      summary: admin users session invalidate
      description: Invalidate a single session for a user by session_id
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: ID of the team that the session belongs to
                  example: <string>
                session_id:
                  type: string
                  example: <integer>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.assign:
    post:
      tags:
        - Admin API
      summary: admin users assign
      description: Add an Enterprise user to a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                  example: <string>
                user_id:
                  type: string
                  description: The ID of the user to add to the workspace.
                  example: <string>
                is_restricted:
                  type: string
                  description: True if user should be added to the workspace as a guest.
                  example: <boolean>
                is_ultra_restricted:
                  type: string
                  description: >-
                    True if user should be added to the workspace as a
                    single-channel guest.
                  example: <boolean>
                channel_ids:
                  type: string
                  description: >-
                    Comma separated values of channel IDs to add user in the new
                    workspace.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.remove:
    post:
      tags:
        - Admin API
      summary: admin users remove
      description: Remove a user from a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                  example: <string>
                user_id:
                  type: string
                  description: The ID of the user to remove.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.setRegular:
    post:
      tags:
        - Admin API
      summary: admin users set Regular
      description: Set an existing guest user, admin user, or owner to be a regular user.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                  example: <string>
                user_id:
                  type: string
                  description: The ID of the user to designate as a regular user.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.setAdmin:
    post:
      tags:
        - Admin API
      summary: admin users set Admin
      description: Set an existing guest, regular user, or owner to be an admin user.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                  example: <string>
                user_id:
                  type: string
                  description: The ID of the user to designate as an admin.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /admin.users.setExpiration:
    post:
      tags:
        - Admin API
      summary: admin users set Expiration
      description: Set an expiration for a guest user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                  example: <string>
                user_id:
                  type: string
                  description: The ID of the user to set an expiration for.
                  example: <string>
                expiration_ts:
                  type: string
                  description: Timestamp when guest account should be disabled.
                  example: <integer>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `admin.users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /api.test:
    get:
      tags:
        - Web API
      summary: api test
      description: Checks API calling code.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /apps.permissions.info:
    get:
      tags:
        - Web API
      summary: apps permissions info
      description: Returns list of permissions this app has on a team.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                info:
                  team:
                    scopes:
                      - <string>
                      - <string>
                    resources:
                      wildcard: <boolean>
                  channel:
                    resources:
                      ids: []
                      wildcard: <boolean>
                    scopes:
                      - <string>
                      - <string>
                  group:
                    resources:
                      ids: []
                      wildcard: <boolean>
                    scopes:
                      - <string>
                      - <string>
                  mpim:
                    resources:
                      ids: []
                      wildcard: <boolean>
                    scopes:
                      - <string>
                      - <string>
                  im:
                    resources:
                      ids: []
                      wildcard: <boolean>
                    scopes:
                      - <string>
                      - <string>
                  app_home:
                    resources:
                      ids: []
                      wildcard: <boolean>
                    scopes:
                      - <string>
                      - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /apps.event.authorizations.list:
    get:
      tags:
        - Web API
      summary: apps event authorizations list
      description: >-
        Get a list of authorizations for the given event context. Each
        authorization represents an app installation that the event is visible
        to.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `authorizations:read`
          example: <string>
        - name: event_context
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
        - name: cursor
          in: query
          schema:
            type: string
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /apps.permissions.request:
    get:
      tags:
        - Web API
      summary: apps permissions request
      description: Allows an app to request additional scopes
      parameters:
        - name: scopes
          in: query
          schema:
            type: string
          description: (Required) A comma separated list of scopes to request for
          example: <string>
        - name: trigger_id
          in: query
          schema:
            type: string
          description: (Required) Token used to trigger the permissions API
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /apps.permissions.resources.list:
    get:
      tags:
        - Web API
      summary: apps permissions resources list
      description: Returns list of resource grants this app has on a team.
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: The maximum number of items to return.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                resources:
                  - id: <string>
                    type: <string>
                  - id: <string>
                    type: <string>
                response_metadata:
                  next_cursor: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /apps.permissions.scopes.list:
    get:
      tags:
        - Web API
      summary: apps permissions scopes list
      description: Returns list of scopes this app has on a team.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                scopes:
                  app_home:
                    - <string>
                    - <string>
                  channel:
                    - <string>
                    - <string>
                  group:
                    - <string>
                    - <string>
                  im:
                    - <string>
                    - <string>
                  mpim:
                    - <string>
                    - <string>
                  team:
                    - <string>
                    - <string>
                  user:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /apps.uninstall:
    get:
      tags:
        - Web API
      summary: apps uninstall
      description: Uninstalls your app from a workspace.
      parameters:
        - name: client_id
          in: query
          schema:
            type: string
          description: Issued when you created your application.
          example: <string>
        - name: client_secret
          in: query
          schema:
            type: string
          description: Issued when you created your application.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /apps.permissions.users.list:
    get:
      tags:
        - Web API
      summary: apps permissions users list
      description: >-
        Returns list of user grants and corresponding scopes this app has on a
        team.
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: The maximum number of items to return.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /apps.permissions.users.request:
    get:
      tags:
        - Web API
      summary: apps permissions users request
      description: >-
        Enables an app to trigger a permissions modal to grant an app access to
        a user access scope.
      parameters:
        - name: scopes
          in: query
          schema:
            type: string
          description: (Required) A comma separated list of user scopes to request for
          example: <string>
        - name: trigger_id
          in: query
          schema:
            type: string
          description: (Required) Token used to trigger the request
          example: <string>
        - name: user
          in: query
          schema:
            type: string
          description: (Required) The user this scope is being requested for
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /bots.info:
    get:
      tags:
        - Web API
      summary: bots info
      description: Gets information about a bot user.
      parameters:
        - name: bot
          in: query
          schema:
            type: string
          description: Bot user to get info on
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                bot:
                  id: <string>
                  deleted: <boolean>
                  name: <string>
                  updated: <integer>
                  app_id: <string>
                  icons:
                    image_36: <uri>
                    image_48: <uri>
                    image_72: <uri>
                  user_id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /auth.revoke:
    get:
      tags:
        - Web API
      summary: auth revoke
      description: Revokes a token.
      parameters:
        - name: test
          in: query
          schema:
            type: string
          description: >-
            Setting this parameter to `1` triggers a _testing mode_ where the
            specified token will not actually be revoked.
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                revoked: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /auth.test:
    get:
      tags:
        - Web API
      summary: auth test
      description: Checks authentication & identity.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `none`'
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                url: <string>
                team: <string>
                user: <string>
                team_id: <string>
                user_id: <string>
                bot_id: <string>
                is_enterprise_install: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /calls.add:
    post:
      tags:
        - Web API
      summary: calls add
      description: Registers a new Call.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                external_unique_id:
                  type: string
                  description: >-
                    An ID supplied by the 3rd-party Call provider. It must be
                    unique across all Calls from that service.
                  example: <string>
                join_url:
                  type: string
                  description: The URL required for a client to join the Call.
                  example: <string>
                external_display_id:
                  type: string
                  description: >-
                    An optional, human-readable ID supplied by the 3rd-party
                    Call provider. If supplied, this ID will be displayed in the
                    Call object.
                  example: <string>
                desktop_app_join_url:
                  type: string
                  description: >-
                    When supplied, available Slack clients will attempt to
                    directly launch the 3rd-party Call with this URL.
                  example: <string>
                date_start:
                  type: string
                  description: Call start time in UTC UNIX timestamp format
                  example: <integer>
                title:
                  type: string
                  description: The name of the Call.
                  example: <string>
                created_by:
                  type: string
                  description: >-
                    The valid Slack user ID of the user who created this Call.
                    When this method is called with a user token, the
                    `created_by` field is optional and defaults to the authed
                    user of the token. Otherwise, the field is required.
                  example: <string>
                users:
                  type: string
                  description: >-
                    The list of users to register as participants in the Call.
                    [Read more on how to specify users here](/apis/calls#users).
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `calls:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /calls.end:
    post:
      tags:
        - Web API
      summary: calls end
      description: Ends a Call.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: >-
                    `id` returned when registering the call using the
                    [`calls.add`](/methods/calls.add) method.
                  example: <string>
                duration:
                  type: string
                  description: Call duration in seconds
                  example: <integer>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `calls:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /calls.participants.add:
    post:
      tags:
        - Web API
      summary: calls participants add
      description: Registers new participants added to a Call.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: >-
                    `id` returned by the [`calls.add`](/methods/calls.add)
                    method.
                  example: <string>
                users:
                  type: string
                  description: >-
                    The list of users to add as participants in the Call. [Read
                    more on how to specify users here](/apis/calls#users).
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `calls:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /calls.participants.remove:
    post:
      tags:
        - Web API
      summary: calls participants remove
      description: Registers participants removed from a Call.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: >-
                    `id` returned by the [`calls.add`](/methods/calls.add)
                    method.
                  example: <string>
                users:
                  type: string
                  description: >-
                    The list of users to remove as participants in the Call.
                    [Read more on how to specify users here](/apis/calls#users).
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `calls:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /calls.info:
    get:
      tags:
        - Web API
      summary: calls info
      description: Returns information about a Call.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `calls:read`'
          example: <string>
        - name: id
          in: query
          schema:
            type: string
          description: >-
            (Required) `id` of the Call returned by the
            [`calls.add`](/methods/calls.add) method.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /calls.update:
    post:
      tags:
        - Web API
      summary: calls update
      description: Updates information about a Call.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: >-
                    `id` returned by the [`calls.add`](/methods/calls.add)
                    method.
                  example: <string>
                title:
                  type: string
                  description: The name of the Call.
                  example: <string>
                join_url:
                  type: string
                  description: The URL required for a client to join the Call.
                  example: <string>
                desktop_app_join_url:
                  type: string
                  description: >-
                    When supplied, available Slack clients will attempt to
                    directly launch the 3rd-party Call with this URL.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `calls:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /chat.delete:
    post:
      tags:
        - Web API
      summary: chat delete
      description: Deletes a message.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ts:
                  type: string
                  description: Timestamp of the message to be deleted.
                  example: <number>
                channel:
                  type: string
                  description: Channel containing the message to be deleted.
                  example: <string>
                as_user:
                  type: string
                  description: >-
                    Pass true to delete the message as the authed user with
                    `chat:write:user` scope. [Bot users](/bot-users) in this
                    context are considered authed users. If unused or false, the
                    message will be deleted with `chat:write:bot` scope.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `chat:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: <string>
                ts: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.deleteScheduledMessage:
    post:
      tags:
        - Web API
      summary: chat delete Scheduled Message
      description: Deletes a pending scheduled message from the queue.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: The channel the scheduled_message is posting to
                  example: <string>
                scheduled_message_id:
                  type: string
                  description: >-
                    `scheduled_message_id` returned from call to
                    chat.scheduleMessage
                  example: <string>
                as_user:
                  type: string
                  description: >-
                    Pass true to delete the message as the authed user with
                    `chat:write:user` scope. [Bot users](/bot-users) in this
                    context are considered authed users. If unused or false, the
                    message will be deleted with `chat:write:bot` scope.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `chat:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.getPermalink:
    get:
      tags:
        - Web API
      summary: chat get Permalink
      description: Retrieve a permalink URL for a specific extant message
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          description: >-
            (Required) The ID of the conversation or channel containing the
            message
          example: C2U86NC6M
        - name: message_ts
          in: query
          schema:
            type: number
          description: >-
            (Required) A message's `ts` value, uniquely identifying it within a
            channel
          example: '1612288689.000200'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: <string>
                permalink: <uri>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.postEphemeral:
    post:
      tags:
        - Web API
      summary: chat post Ephemeral
      description: Sends an ephemeral message to a user in a channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: >-
                    Channel, private group, or IM channel to send message to.
                    Can be an encoded ID, or a name.
                  example: <string>
                user:
                  type: string
                  description: >-
                    `id` of the user who will receive the ephemeral message. The
                    user should be in the channel specified by the `channel`
                    argument.
                  example: <string>
                as_user:
                  type: string
                  description: >-
                    Pass true to post the message as the authed user. Defaults
                    to true if the chat:write:bot scope is not included.
                    Otherwise, defaults to false.
                  example: <boolean>
                attachments:
                  type: string
                  description: >-
                    A JSON-based array of structured attachments, presented as a
                    URL-encoded string.
                  example: <string>
                blocks:
                  type: string
                  description: >-
                    A JSON-based array of structured blocks, presented as a
                    URL-encoded string.
                  example: <string>
                icon_emoji:
                  type: string
                  description: >-
                    Emoji to use as the icon for this message. Overrides
                    `icon_url`. Must be used in conjunction with `as_user` set
                    to `false`, otherwise ignored. See [authorship](#authorship)
                    below.
                  example: <string>
                icon_url:
                  type: string
                  description: >-
                    URL to an image to use as the icon for this message. Must be
                    used in conjunction with `as_user` set to false, otherwise
                    ignored. See [authorship](#authorship) below.
                  example: <string>
                link_names:
                  type: string
                  description: Find and link channel names and usernames.
                  example: <boolean>
                parse:
                  type: string
                  description: >-
                    Change how messages are treated. Defaults to `none`. See
                    [below](#formatting).
                  example: <string>
                text:
                  type: string
                  description: >-
                    How this field works and whether it is required depends on
                    other fields you use in your API call. [See
                    below](#text_usage) for more detail.
                  example: <string>
                thread_ts:
                  type: string
                  description: >-
                    Provide another message's `ts` value to post this message in
                    a thread. Avoid using a reply's `ts` value; use its parent's
                    value instead. Ephemeral messages in threads are only shown
                    if there is already an active thread.
                  example: <string>
                username:
                  type: string
                  description: >-
                    Set your bot's user name. Must be used in conjunction with
                    `as_user` set to false, otherwise ignored. See
                    [authorship](#authorship) below.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `chat:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                message_ts: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.postMessage:
    post:
      tags:
        - Web API
      summary: chat post Message
      description: Sends a message to a channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: >-
                    Channel, private group, or IM channel to send message to.
                    Can be an encoded ID, or a name. See [below](#channels) for
                    more details.
                  example: <string>
                as_user:
                  type: string
                  description: >-
                    Pass true to post the message as the authed user, instead of
                    as a bot. Defaults to false. See [authorship](#authorship)
                    below.
                  example: <string>
                attachments:
                  type: string
                  description: >-
                    A JSON-based array of structured attachments, presented as a
                    URL-encoded string.
                  example: <string>
                blocks:
                  type: string
                  description: >-
                    A JSON-based array of structured blocks, presented as a
                    URL-encoded string.
                  example: <string>
                icon_emoji:
                  type: string
                  description: >-
                    Emoji to use as the icon for this message. Overrides
                    `icon_url`. Must be used in conjunction with `as_user` set
                    to `false`, otherwise ignored. See [authorship](#authorship)
                    below.
                  example: <string>
                icon_url:
                  type: string
                  description: >-
                    URL to an image to use as the icon for this message. Must be
                    used in conjunction with `as_user` set to false, otherwise
                    ignored. See [authorship](#authorship) below.
                  example: <string>
                link_names:
                  type: string
                  description: Find and link channel names and usernames.
                  example: <boolean>
                mrkdwn:
                  type: string
                  description: >-
                    Disable Slack markup parsing by setting to `false`. Enabled
                    by default.
                  example: <boolean>
                parse:
                  type: string
                  description: >-
                    Change how messages are treated. Defaults to `none`. See
                    [below](#formatting).
                  example: <string>
                reply_broadcast:
                  type: string
                  description: >-
                    Used in conjunction with `thread_ts` and indicates whether
                    reply should be made visible to everyone in the channel or
                    conversation. Defaults to `false`.
                  example: <boolean>
                text:
                  type: string
                  description: >-
                    How this field works and whether it is required depends on
                    other fields you use in your API call. [See
                    below](#text_usage) for more detail.
                  example: test
                thread_ts:
                  type: string
                  description: >-
                    Provide another message's `ts` value to make this message a
                    reply. Avoid using a reply's `ts` value; use its parent
                    instead.
                  example: <string>
                unfurl_links:
                  type: string
                  description: >-
                    Pass true to enable unfurling of primarily text-based
                    content.
                  example: <boolean>
                unfurl_media:
                  type: string
                  description: Pass false to disable unfurling of media content.
                  example: <boolean>
                username:
                  type: string
                  description: >-
                    Set your bot's user name. Must be used in conjunction with
                    `as_user` set to false, otherwise ignored. See
                    [authorship](#authorship) below.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `chat:write`'
          example: '{{bot_token}}'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: <string>
                ts: <string>
                message:
                  text: <string>
                  type: <string>
                  ts: <string>
                  attachments:
                    - id: <integer>
                      fallback: <string>
                      image_bytes: <integer>
                      image_height: <integer>
                      image_url: <string>
                      image_width: <integer>
                  blocks:
                    - type: <string>
                    - type: <string>
                  bot_id: {}
                  bot_profile:
                    id: <string>
                    deleted: <boolean>
                    name: <string>
                    updated: <integer>
                    app_id: <string>
                    icons:
                      image_36: <uri>
                      image_48: <uri>
                      image_72: <uri>
                    team_id: <string>
                  client_msg_id: <string>
                  comment:
                    id: <string>
                    created: <integer>
                    timestamp: <integer>
                    user: <string>
                    is_intro: <boolean>
                    comment: <string>
                    is_starred: <boolean>
                    num_stars: <integer>
                    pinned_info: <object>
                    pinned_to:
                      - <string>
                      - <string>
                    reactions:
                      - name: <string>
                        users:
                          - <string>
                          - <string>
                        count: <integer>
                      - name: <string>
                        users:
                          - <string>
                          - <string>
                        count: <integer>
                  display_as_bot: <boolean>
                  file:
                    channels:
                      - <string>
                    comments_count: <integer>
                    created: <integer>
                    date_delete: <integer>
                    display_as_bot: <boolean>
                    editable: <boolean>
                    editor: <string>
                    external_id: <string>
                    external_type: <string>
                    external_url: <uri>
                    filetype: <string>
                    groups:
                      - <string>
                    has_rich_preview: <boolean>
                    id: <string>
                    image_exif_rotation: <integer>
                    ims:
                      - <string>
                    is_external: <boolean>
                    is_public: <boolean>
                    is_starred: <boolean>
                    is_tombstoned: <boolean>
                    last_editor: <string>
                    mimetype: <string>
                    mode: <string>
                    name: <string>
                    non_owner_editable: <boolean>
                    num_stars: <integer>
                    original_h: <integer>
                    original_w: <integer>
                    permalink: <uri>
                    permalink_public: <uri>
                    pinned_info: <object>
                    pinned_to:
                      - <string>
                      - <string>
                    pretty_type: <string>
                    preview: <string>
                    public_url_shared: <boolean>
                    reactions:
                      - name: <string>
                        users:
                          - <string>
                          - <string>
                        count: <integer>
                      - name: <string>
                        users:
                          - <string>
                          - <string>
                        count: <integer>
                    shares:
                      private: {}
                      public: {}
                    size: <integer>
                    source_team: <string>
                    state: <string>
                    thumb_1024: <uri>
                    thumb_1024_h: <integer>
                    thumb_1024_w: <integer>
                    thumb_160: <uri>
                    thumb_360: <uri>
                    thumb_360_h: <integer>
                    thumb_360_w: <integer>
                    thumb_480: <uri>
                    thumb_480_h: <integer>
                    thumb_480_w: <integer>
                    thumb_64: <uri>
                    thumb_720: <uri>
                    thumb_720_h: <integer>
                    thumb_720_w: <integer>
                    thumb_80: <uri>
                    thumb_800: <uri>
                    thumb_800_h: <integer>
                    thumb_800_w: <integer>
                    thumb_960: <uri>
                    thumb_960_h: <integer>
                    thumb_960_w: <integer>
                    thumb_tiny: <string>
                    timestamp: <integer>
                    title: <string>
                    updated: <integer>
                    url_private: <uri>
                    url_private_download: <uri>
                    user: <string>
                    user_team: <string>
                    username: <string>
                  files:
                    - channels:
                        - <string>
                      comments_count: <integer>
                      created: <integer>
                      date_delete: <integer>
                      display_as_bot: <boolean>
                      editable: <boolean>
                      editor: <string>
                      external_id: <string>
                      external_type: <string>
                      external_url: <uri>
                      filetype: <string>
                      groups:
                        - <string>
                      has_rich_preview: <boolean>
                      id: <string>
                      image_exif_rotation: <integer>
                      ims:
                        - <string>
                      is_external: <boolean>
                      is_public: <boolean>
                      is_starred: <boolean>
                      is_tombstoned: <boolean>
                      last_editor: <string>
                      mimetype: <string>
                      mode: <string>
                      name: <string>
                      non_owner_editable: <boolean>
                      num_stars: <integer>
                      original_h: <integer>
                      original_w: <integer>
                      permalink: <uri>
                      permalink_public: <uri>
                      pinned_info: <object>
                      pinned_to:
                        - <string>
                        - <string>
                      pretty_type: <string>
                      preview: <string>
                      public_url_shared: <boolean>
                      reactions:
                        - name: <string>
                          users:
                            - <string>
                            - <string>
                          count: <integer>
                        - name: <string>
                          users:
                            - <string>
                            - <string>
                          count: <integer>
                      shares:
                        private: {}
                        public: {}
                      size: <integer>
                      source_team: <string>
                      state: <string>
                      thumb_1024: <uri>
                      thumb_1024_h: <integer>
                      thumb_1024_w: <integer>
                      thumb_160: <uri>
                      thumb_360: <uri>
                      thumb_360_h: <integer>
                      thumb_360_w: <integer>
                      thumb_480: <uri>
                      thumb_480_h: <integer>
                      thumb_480_w: <integer>
                      thumb_64: <uri>
                      thumb_720: <uri>
                      thumb_720_h: <integer>
                      thumb_720_w: <integer>
                      thumb_80: <uri>
                      thumb_800: <uri>
                      thumb_800_h: <integer>
                      thumb_800_w: <integer>
                      thumb_960: <uri>
                      thumb_960_h: <integer>
                      thumb_960_w: <integer>
                      thumb_tiny: <string>
                      timestamp: <integer>
                      title: <string>
                      updated: <integer>
                      url_private: <uri>
                      url_private_download: <uri>
                      user: <string>
                      user_team: <string>
                      username: <string>
                  icons:
                    emoji: <string>
                    image_64: <uri>
                  inviter: <string>
                  is_delayed_message: <boolean>
                  is_intro: <boolean>
                  is_starred: <boolean>
                  last_read: <string>
                  latest_reply: <string>
                  name: <string>
                  old_name: <string>
                  parent_user_id: <string>
                  permalink: <uri>
                  pinned_to:
                    - <string>
                    - <string>
                  purpose: <string>
                  reactions:
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                  reply_count: <integer>
                  reply_users:
                    - <string>
                  reply_users_count: <integer>
                  source_team: <string>
                  subscribed: <boolean>
                  subtype: <string>
                  team: <string>
                  thread_ts: <string>
                  topic: <string>
                  unread_count: <integer>
                  upload: <boolean>
                  user: <string>
                  user_profile:
                    avatar_hash: <string>
                    image_72: <uri>
                    first_name: <string>
                    real_name: <string>
                    display_name: <string>
                    team: <string>
                    name: <string>
                    is_restricted: <boolean>
                    is_ultra_restricted: <boolean>
                    display_name_normalized: <string>
                    real_name_normalized: <string>
                  user_team: <string>
                  username: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.meMessage:
    post:
      tags:
        - Web API
      summary: chat me Message
      description: Share a me message into a channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: >-
                    Channel to send message to. Can be a public channel, private
                    group or IM channel. Can be an encoded ID, or a name.
                  example: <string>
                text:
                  type: string
                  description: Text of the message to send.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `chat:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: <string>
                ts: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.scheduleMessage:
    post:
      tags:
        - Web API
      summary: chat schedule Message
      description: Schedules a message to be sent to a channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: >-
                    Channel, private group, or DM channel to send message to.
                    Can be an encoded ID, or a name. See [below](#channels) for
                    more details.
                  example: <string>
                text:
                  type: string
                  description: >-
                    How this field works and whether it is required depends on
                    other fields you use in your API call. [See
                    below](#text_usage) for more detail.
                  example: <string>
                post_at:
                  type: string
                  description: Unix EPOCH timestamp of time in future to send the message.
                  example: <string>
                parse:
                  type: string
                  description: >-
                    Change how messages are treated. Defaults to `none`. See
                    [chat.postMessage](chat.postMessage#formatting).
                  example: <string>
                as_user:
                  type: string
                  description: >-
                    Pass true to post the message as the authed user, instead of
                    as a bot. Defaults to false. See
                    [chat.postMessage](chat.postMessage#authorship).
                  example: <boolean>
                link_names:
                  type: string
                  description: Find and link channel names and usernames.
                  example: <boolean>
                attachments:
                  type: string
                  description: >-
                    A JSON-based array of structured attachments, presented as a
                    URL-encoded string.
                  example: <string>
                blocks:
                  type: string
                  description: >-
                    A JSON-based array of structured blocks, presented as a
                    URL-encoded string.
                  example: <string>
                unfurl_links:
                  type: string
                  description: >-
                    Pass true to enable unfurling of primarily text-based
                    content.
                  example: <boolean>
                unfurl_media:
                  type: string
                  description: Pass false to disable unfurling of media content.
                  example: <boolean>
                thread_ts:
                  type: string
                  description: >-
                    Provide another message's `ts` value to make this message a
                    reply. Avoid using a reply's `ts` value; use its parent
                    instead.
                  example: <number>
                reply_broadcast:
                  type: string
                  description: >-
                    Used in conjunction with `thread_ts` and indicates whether
                    reply should be made visible to everyone in the channel or
                    conversation. Defaults to `false`.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `chat:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: <string>
                post_at: <integer>
                scheduled_message_id: <string>
                message:
                  type: <string>
                  text: <string>
                  bot_id: <string>
                  user: <string>
                  team: <string>
                  bot_profile:
                    id: <string>
                    deleted: <boolean>
                    name: <string>
                    updated: <integer>
                    app_id: <string>
                    icons:
                      image_36: <uri>
                      image_48: <uri>
                      image_72: <uri>
                    team_id: <string>
                  username: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.scheduledMessages.list:
    get:
      tags:
        - Web API
      summary: chat scheduled Messages list
      description: Returns a list of scheduled messages.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `none`'
          example: <string>
        - name: channel
          in: query
          schema:
            type: string
          description: The channel of the scheduled messages
          example: <string>
        - name: latest
          in: query
          schema:
            type: string
          description: A UNIX timestamp of the latest value in the time range
          example: <number>
        - name: oldest
          in: query
          schema:
            type: string
          description: A UNIX timestamp of the oldest value in the time range
          example: <number>
        - name: limit
          in: query
          schema:
            type: string
          description: Maximum number of original entries to return.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            For pagination purposes, this is the `cursor` value returned from a
            previous call to `chat.scheduledmessages.list` indicating where you
            want to start this call from.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                scheduled_messages:
                  - id: <string>
                    channel_id: <string>
                    post_at: <integer>
                    date_created: <integer>
                    text: <string>
                  - id: <string>
                    channel_id: <string>
                    post_at: <integer>
                    date_created: <integer>
                    text: <string>
                response_metadata:
                  next_cursor: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.unfurl:
    post:
      tags:
        - Web API
      summary: chat unfurl
      description: Provide custom unfurl behavior for user-posted URLs
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Channel ID of the message
                  example: <string>
                ts:
                  type: string
                  description: Timestamp of the message to add unfurl behavior to.
                  example: <string>
                unfurls:
                  type: string
                  description: >-
                    URL-encoded JSON map with keys set to URLs featured in the
                    the message, pointing to their unfurl blocks or message
                    attachments.
                  example: <string>
                user_auth_message:
                  type: string
                  description: >-
                    Provide a simply-formatted string to send as an ephemeral
                    message to the user as invitation to authenticate further
                    and enable full unfurling behavior
                  example: <string>
                user_auth_required:
                  type: string
                  description: >-
                    Set to `true` or `1` to indicate the user must install your
                    Slack app to trigger unfurls for this domain
                  example: <boolean>
                user_auth_url:
                  type: string
                  description: >-
                    Send users to this custom URL where they will complete
                    authentication in your app to fully trigger unfurling. Value
                    should be properly URL-encoded.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `links:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /chat.update:
    post:
      tags:
        - Web API
      summary: chat update
      description: Updates a message.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Channel containing the message to be updated.
                  example: <string>
                ts:
                  type: string
                  description: Timestamp of the message to be updated.
                  example: <string>
                as_user:
                  type: string
                  description: >-
                    Pass true to update the message as the authed user. [Bot
                    users](/bot-users) in this context are considered authed
                    users.
                  example: <string>
                attachments:
                  type: string
                  description: >-
                    A JSON-based array of structured attachments, presented as a
                    URL-encoded string. This field is required when not
                    presenting `text`. If you don't include this field, the
                    message's previous `attachments` will be retained. To remove
                    previous `attachments`, include an empty array for this
                    field.
                  example: <string>
                blocks:
                  type: string
                  description: >-
                    A JSON-based array of [structured
                    blocks](/block-kit/building), presented as a URL-encoded
                    string. If you don't include this field, the message's
                    previous `blocks` will be retained. To remove previous
                    `blocks`, include an empty array for this field.
                  example: <string>
                link_names:
                  type: string
                  description: >-
                    Find and link channel names and usernames. Defaults to
                    `none`. If you do not specify a value for this field, the
                    original value set for the message will be overwritten with
                    the default, `none`.
                  example: <string>
                parse:
                  type: string
                  description: >-
                    Change how messages are treated. Defaults to `client`,
                    unlike `chat.postMessage`. Accepts either `none` or `full`.
                    If you do not specify a value for this field, the original
                    value set for the message will be overwritten with the
                    default, `client`.
                  example: <string>
                text:
                  type: string
                  description: >-
                    New text for the message, using the [default formatting
                    rules](/reference/surfaces/formatting). It's not required
                    when presenting `blocks` or `attachments`.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `chat:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: <string>
                ts: <string>
                text: <string>
                message:
                  text: <string>
                  attachments:
                    - <object>
                    - <object>
                  blocks: <object>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /conversations.info:
    get:
      tags:
        - Web API
      summary: conversations info
      description: Retrieve information about a conversation.
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          description: Conversation ID to learn more about
          example: <string>
        - name: include_locale
          in: query
          schema:
            type: string
          description: >-
            Set this to `true` to receive the locale for this conversation.
            Defaults to `false`
          example: <boolean>
        - name: include_num_members
          in: query
          schema:
            type: string
          description: >-
            Set to `true` to include the member count for the specified
            conversation. Defaults to `false`
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.archive:
    post:
      tags:
        - Web API
      summary: conversations archive
      description: Archives a conversation.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ID of conversation to archive
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.close:
    post:
      tags:
        - Web API
      summary: conversations close
      description: Closes a direct message or multi-person direct message.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Conversation to close.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                already_closed: <boolean>
                no_op: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.create:
    post:
      tags:
        - Web API
      summary: conversations create
      description: Initiates a public or private channel-based conversation
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the public or private channel to create
                  example: <string>
                is_private:
                  type: string
                  description: Create a private channel instead of a public one
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                detail: <string>
                needed: <string>
                provided: <string>
  /conversations.invite:
    post:
      tags:
        - Web API
      summary: conversations invite
      description: Invites users to a channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: >-
                    The ID of the public or private channel to invite user(s)
                    to.
                  example: <string>
                users:
                  type: string
                  description: >-
                    A comma separated list of user IDs. Up to 1000 users may be
                    listed.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                callstack: <string>
                error: <string>
                errors:
                  - ok: <boolean>
                    error: <string>
                    user: <string>
                needed: <string>
                provided: <string>
  /conversations.join:
    post:
      tags:
        - Web API
      summary: conversations join
      description: Joins an existing conversation.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ID of conversation to join
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `channels:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: {}
                response_metadata:
                  warnings:
                    - <string>
                warning: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.history:
    get:
      tags:
        - Web API
      summary: conversations history
      description: Fetches a conversation's history of messages and events.
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          description: Conversation ID to fetch history for.
          example: <string>
        - name: latest
          in: query
          schema:
            type: string
          description: End of time range of messages to include in results.
          example: <number>
        - name: oldest
          in: query
          schema:
            type: string
          description: Start of time range of messages to include in results.
          example: <number>
        - name: inclusive
          in: query
          schema:
            type: string
          description: >-
            Include messages with latest or oldest timestamp in results only
            when either timestamp is specified.
          example: <boolean>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list
            hasn't been reached.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                messages:
                  - text: <string>
                    type: <string>
                    ts: <string>
                    attachments:
                      - id: <integer>
                        fallback: <string>
                        image_bytes: <integer>
                        image_height: <integer>
                        image_url: <string>
                        image_width: <integer>
                    blocks:
                      - type: <string>
                      - type: <string>
                    bot_id: {}
                    bot_profile:
                      id: <string>
                      deleted: <boolean>
                      name: <string>
                      updated: <integer>
                      app_id: <string>
                      icons:
                        image_36: <uri>
                        image_48: <uri>
                        image_72: <uri>
                      team_id: <string>
                    client_msg_id: <string>
                    comment:
                      id: <string>
                      created: <integer>
                      timestamp: <integer>
                      user: <string>
                      is_intro: <boolean>
                      comment: <string>
                      is_starred: <boolean>
                      num_stars: <integer>
                      pinned_info: <object>
                      pinned_to:
                        - <string>
                        - <string>
                      reactions:
                        - name: <string>
                          users:
                            - <string>
                            - <string>
                          count: <integer>
                        - name: <string>
                          users:
                            - <string>
                            - <string>
                          count: <integer>
                    display_as_bot: <boolean>
                    file:
                      channels:
                        - <string>
                      comments_count: <integer>
                      created: <integer>
                      date_delete: <integer>
                      display_as_bot: <boolean>
                      editable: <boolean>
                      editor: <string>
                      external_id: <string>
                      external_type: <string>
                      external_url: <uri>
                      filetype: <string>
                      groups:
                        - <string>
                      has_rich_preview: <boolean>
                      id: <string>
                      image_exif_rotation: <integer>
                      ims:
                        - <string>
                      is_external: <boolean>
                      is_public: <boolean>
                      is_starred: <boolean>
                      is_tombstoned: <boolean>
                      last_editor: <string>
                      mimetype: <string>
                      mode: <string>
                      name: <string>
                      non_owner_editable: <boolean>
                      num_stars: <integer>
                      original_h: <integer>
                      original_w: <integer>
                      permalink: <uri>
                      permalink_public: <uri>
                      pinned_info: <object>
                      pinned_to:
                        - <string>
                        - <string>
                      pretty_type: <string>
                      preview: <string>
                      public_url_shared: <boolean>
                      reactions:
                        - name: <string>
                          users:
                            - <string>
                            - <string>
                          count: <integer>
                        - name: <string>
                          users:
                            - <string>
                            - <string>
                          count: <integer>
                      shares:
                        private: {}
                        public: {}
                      size: <integer>
                      source_team: <string>
                      state: <string>
                      thumb_1024: <uri>
                      thumb_1024_h: <integer>
                      thumb_1024_w: <integer>
                      thumb_160: <uri>
                      thumb_360: <uri>
                      thumb_360_h: <integer>
                      thumb_360_w: <integer>
                      thumb_480: <uri>
                      thumb_480_h: <integer>
                      thumb_480_w: <integer>
                      thumb_64: <uri>
                      thumb_720: <uri>
                      thumb_720_h: <integer>
                      thumb_720_w: <integer>
                      thumb_80: <uri>
                      thumb_800: <uri>
                      thumb_800_h: <integer>
                      thumb_800_w: <integer>
                      thumb_960: <uri>
                      thumb_960_h: <integer>
                      thumb_960_w: <integer>
                      thumb_tiny: <string>
                      timestamp: <integer>
                      title: <string>
                      updated: <integer>
                      url_private: <uri>
                      url_private_download: <uri>
                      user: <string>
                      user_team: <string>
                      username: <string>
                    files:
                      - channels:
                          - <string>
                        comments_count: <integer>
                        created: <integer>
                        date_delete: <integer>
                        display_as_bot: <boolean>
                        editable: <boolean>
                        editor: <string>
                        external_id: <string>
                        external_type: <string>
                        external_url: <uri>
                        filetype: <string>
                        groups:
                          - <string>
                        has_rich_preview: <boolean>
                        id: <string>
                        image_exif_rotation: <integer>
                        ims:
                          - <string>
                        is_external: <boolean>
                        is_public: <boolean>
                        is_starred: <boolean>
                        is_tombstoned: <boolean>
                        last_editor: <string>
                        mimetype: <string>
                        mode: <string>
                        name: <string>
                        non_owner_editable: <boolean>
                        num_stars: <integer>
                        original_h: <integer>
                        original_w: <integer>
                        permalink: <uri>
                        permalink_public: <uri>
                        pinned_info: <object>
                        pinned_to:
                          - <string>
                          - <string>
                        pretty_type: <string>
                        preview: <string>
                        public_url_shared: <boolean>
                        reactions:
                          - name: <string>
                            users:
                              - <string>
                              - <string>
                            count: <integer>
                          - name: <string>
                            users:
                              - <string>
                              - <string>
                            count: <integer>
                        shares:
                          private: {}
                          public: {}
                        size: <integer>
                        source_team: <string>
                        state: <string>
                        thumb_1024: <uri>
                        thumb_1024_h: <integer>
                        thumb_1024_w: <integer>
                        thumb_160: <uri>
                        thumb_360: <uri>
                        thumb_360_h: <integer>
                        thumb_360_w: <integer>
                        thumb_480: <uri>
                        thumb_480_h: <integer>
                        thumb_480_w: <integer>
                        thumb_64: <uri>
                        thumb_720: <uri>
                        thumb_720_h: <integer>
                        thumb_720_w: <integer>
                        thumb_80: <uri>
                        thumb_800: <uri>
                        thumb_800_h: <integer>
                        thumb_800_w: <integer>
                        thumb_960: <uri>
                        thumb_960_h: <integer>
                        thumb_960_w: <integer>
                        thumb_tiny: <string>
                        timestamp: <integer>
                        title: <string>
                        updated: <integer>
                        url_private: <uri>
                        url_private_download: <uri>
                        user: <string>
                        user_team: <string>
                        username: <string>
                    icons:
                      emoji: <string>
                      image_64: <uri>
                    inviter: <string>
                    is_delayed_message: <boolean>
                    is_intro: <boolean>
                    is_starred: <boolean>
                    last_read: <string>
                    latest_reply: <string>
                    name: <string>
                    old_name: <string>
                    parent_user_id: <string>
                    permalink: <uri>
                    pinned_to:
                      - <string>
                      - <string>
                    purpose: <string>
                    reactions:
                      - name: <string>
                        users:
                          - <string>
                          - <string>
                        count: <integer>
                      - name: <string>
                        users:
                          - <string>
                          - <string>
                        count: <integer>
                    reply_count: <integer>
                    reply_users:
                      - <string>
                    reply_users_count: <integer>
                    source_team: <string>
                    subscribed: <boolean>
                    subtype: <string>
                    team: <string>
                    thread_ts: <string>
                    topic: <string>
                    unread_count: <integer>
                    upload: <boolean>
                    user: <string>
                    user_profile:
                      avatar_hash: <string>
                      image_72: <uri>
                      first_name: <string>
                      real_name: <string>
                      display_name: <string>
                      team: <string>
                      name: <string>
                      is_restricted: <boolean>
                      is_ultra_restricted: <boolean>
                      display_name_normalized: <string>
                      real_name_normalized: <string>
                    user_team: <string>
                    username: <string>
                has_more: <boolean>
                pin_count: <integer>
                channel_actions_ts: {}
                channel_actions_count: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.open:
    post:
      tags:
        - Web API
      summary: conversations open
      description: Opens or resumes a direct message or multi-person direct message.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: >-
                    Resume a conversation by supplying an `im` or `mpim`'s ID.
                    Or provide the `users` field instead.
                  example: <string>
                users:
                  type: string
                  description: >-
                    Comma separated lists of users. If only one user is
                    included, this creates a 1:1 DM.  The ordering of the users
                    is preserved whenever a multi-person direct message is
                    returned. Supply a `channel` when not supplying `users`.
                  example: <string>
                return_im:
                  type: string
                  description: >-
                    Boolean, indicates you want the full IM channel definition
                    in the response.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: {}
                already_open: <boolean>
                no_op: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /conversations.kick:
    post:
      tags:
        - Web API
      summary: conversations kick
      description: Removes a user from a conversation.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ID of conversation to remove user from.
                  example: <string>
                user:
                  type: string
                  description: User ID to be removed.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.leave:
    post:
      tags:
        - Web API
      summary: conversations leave
      description: Leaves a conversation.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Conversation to leave
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                not_in_channel: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.list:
    get:
      tags:
        - Web API
      summary: conversations list
      description: Lists all channels in a Slack team.
      parameters:
        - name: exclude_archived
          in: query
          schema:
            type: string
          description: Set to `true` to exclude archived channels from the list
          example: <boolean>
        - name: types
          in: query
          schema:
            type: string
          description: >-
            Mix and match channel types by providing a comma-separated list of
            any combination of `public_channel`, `private_channel`, `mpim`, `im`
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached. Must be an integer no larger than 1000.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channels: []
                response_metadata:
                  next_cursor: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.mark:
    post:
      tags:
        - Web API
      summary: conversations mark
      description: Sets the read cursor in a channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Channel or conversation to set the read cursor for.
                  example: <string>
                ts:
                  type: string
                  description: >-
                    Unique identifier of message you want marked as most
                    recently seen in this conversation.
                  example: <number>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.setTopic:
    post:
      tags:
        - Web API
      summary: conversations set Topic
      description: Sets the topic for a conversation.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Conversation to set the topic of
                  example: <string>
                topic:
                  type: string
                  description: >-
                    The new topic string. Does not support formatting or
                    linkification.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.unarchive:
    post:
      tags:
        - Web API
      summary: conversations unarchive
      description: Reverses conversation archival.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ID of conversation to unarchive
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /dialog.open:
    get:
      tags:
        - Web API
      summary: dialog open
      description: Open a dialog with a user
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `none`'
          example: <string>
        - name: dialog
          in: query
          schema:
            type: string
          description: >-
            (Required) The dialog definition. This must be a JSON-encoded
            string.
          example: <string>
        - name: trigger_id
          in: query
          schema:
            type: string
          description: (Required) Exchange a trigger to post to the user.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /conversations.members:
    get:
      tags:
        - Web API
      summary: conversations members
      description: Retrieve members of a conversation.
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          description: ID of the conversation to retrieve members for
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list
            hasn't been reached.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                members:
                  - <string>
                response_metadata:
                  next_cursor: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /conversations.rename:
    post:
      tags:
        - Web API
      summary: conversations rename
      description: Renames a conversation.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ID of conversation to rename
                  example: <string>
                name:
                  type: string
                  description: New name for conversation.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.replies:
    get:
      tags:
        - Web API
      summary: conversations replies
      description: Retrieve a thread of messages posted to a conversation
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          description: Conversation ID to fetch thread from.
          example: <string>
        - name: ts
          in: query
          schema:
            type: string
          description: >-
            Unique identifier of a thread's parent message. `ts` must be the
            timestamp of an existing message with 0 or more replies. If there
            are no replies then just the single message referenced by `ts` will
            return - it is just an ordinary, unthreaded message.
          example: <number>
        - name: latest
          in: query
          schema:
            type: string
          description: End of time range of messages to include in results.
          example: <number>
        - name: oldest
          in: query
          schema:
            type: string
          description: Start of time range of messages to include in results.
          example: <number>
        - name: inclusive
          in: query
          schema:
            type: string
          description: >-
            Include messages with latest or oldest timestamp in results only
            when either timestamp is specified.
          example: <boolean>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list
            hasn't been reached.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                messages: []
                has_more: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /conversations.setPurpose:
    post:
      tags:
        - Web API
      summary: conversations set Purpose
      description: Sets the purpose for a conversation.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Conversation to set the purpose of
                  example: <string>
                purpose:
                  type: string
                  description: A new, specialer purpose
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `conversations:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channel: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                needed: <string>
                provided: <string>
  /dnd.endDnd:
    post:
      tags:
        - Web API
      summary: dnd end Dnd
      description: Ends the current user's Do Not Disturb session immediately.
      requestBody:
        content: {}
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `dnd:write`'
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /dnd.endSnooze:
    post:
      tags:
        - Web API
      summary: dnd end Snooze
      description: Ends the current user's snooze mode immediately.
      requestBody:
        content: {}
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `dnd:write`'
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                dnd_enabled: <boolean>
                next_dnd_start_ts: <integer>
                next_dnd_end_ts: <integer>
                snooze_enabled: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /dnd.info:
    get:
      tags:
        - Web API
      summary: dnd info
      description: Retrieves a user's current Do Not Disturb status.
      parameters:
        - name: user
          in: query
          schema:
            type: string
          description: User to fetch status for (defaults to current user)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                dnd_enabled: <boolean>
                next_dnd_start_ts: <integer>
                next_dnd_end_ts: <integer>
                snooze_enabled: <boolean>
                snooze_endtime: <integer>
                snooze_remaining: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /dnd.setSnooze:
    post:
      tags:
        - Web API
      summary: dnd set Snooze
      description: >-
        Turns on Do Not Disturb mode for the current user, or changes its
        duration.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `dnd:write`'
                  example: <string>
                num_minutes:
                  type: string
                  description: Number of minutes, from now, to snooze until.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                snooze_enabled: <boolean>
                snooze_endtime: <integer>
                snooze_remaining: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /dnd.teamInfo:
    get:
      tags:
        - Web API
      summary: dnd team Info
      description: Retrieves the Do Not Disturb status for up to 50 users on a team.
      parameters:
        - name: users
          in: query
          schema:
            type: string
          description: Comma-separated list of users to fetch Do Not Disturb status for
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /emoji.list:
    get:
      tags:
        - Web API
      summary: emoji list
      description: Lists custom emoji for a team.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /files.delete:
    post:
      tags:
        - Web API
      summary: files delete
      description: Deletes a file.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: ID of file to delete.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `files:write:user`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /files.comments.delete:
    post:
      tags:
        - Web API
      summary: files comments delete
      description: Deletes an existing comment on a file.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: File to delete a comment from.
                  example: <string>
                id:
                  type: string
                  description: The comment to delete.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `files:write:user`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /files.list:
    get:
      tags:
        - Web API
      summary: files list
      description: List for a team, in a channel, or from a user with applied filters.
      parameters:
        - name: user
          in: query
          schema:
            type: string
          description: Filter files created by a single user.
          example: <string>
        - name: channel
          in: query
          schema:
            type: string
          description: Filter files appearing in a specific channel, indicated by its ID.
          example: <string>
        - name: ts_from
          in: query
          schema:
            type: string
          description: Filter files created after this timestamp (inclusive).
          example: <number>
        - name: ts_to
          in: query
          schema:
            type: string
          description: Filter files created before this timestamp (inclusive).
          example: <number>
        - name: types
          in: query
          schema:
            type: string
          description: >-
            Filter files by type ([see below](#file_types)). You can pass
            multiple values in the types argument, like
            `types=spaces,snippets`.The default value is `all`, which does not
            filter the list.
          example: <string>
        - name: count
          in: query
          schema:
            type: string
          example: <string>
        - name: page
          in: query
          schema:
            type: string
          example: <string>
        - name: show_files_hidden_by_limit
          in: query
          schema:
            type: string
          description: >-
            Show truncated file info for files hidden due to being too old, and
            the team who owns the file being over the file limit.
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                files:
                  - channels:
                      - <string>
                    comments_count: <integer>
                    created: <integer>
                    date_delete: <integer>
                    display_as_bot: <boolean>
                    editable: <boolean>
                    editor: <string>
                    external_id: <string>
                    external_type: <string>
                    external_url: <uri>
                    filetype: <string>
                    groups:
                      - <string>
                    has_rich_preview: <boolean>
                    id: <string>
                    image_exif_rotation: <integer>
                    ims:
                      - <string>
                    is_external: <boolean>
                    is_public: <boolean>
                    is_starred: <boolean>
                    is_tombstoned: <boolean>
                    last_editor: <string>
                    mimetype: <string>
                    mode: <string>
                    name: <string>
                    non_owner_editable: <boolean>
                    num_stars: <integer>
                    original_h: <integer>
                    original_w: <integer>
                    permalink: <uri>
                    permalink_public: <uri>
                    pinned_info: <object>
                    pinned_to:
                      - <string>
                      - <string>
                    pretty_type: <string>
                    preview: <string>
                    public_url_shared: <boolean>
                    reactions:
                      - name: <string>
                        users:
                          - <string>
                          - <string>
                        count: <integer>
                      - name: <string>
                        users:
                          - <string>
                          - <string>
                        count: <integer>
                    shares:
                      private: {}
                      public: {}
                    size: <integer>
                    source_team: <string>
                    state: <string>
                    thumb_1024: <uri>
                    thumb_1024_h: <integer>
                    thumb_1024_w: <integer>
                    thumb_160: <uri>
                    thumb_360: <uri>
                    thumb_360_h: <integer>
                    thumb_360_w: <integer>
                    thumb_480: <uri>
                    thumb_480_h: <integer>
                    thumb_480_w: <integer>
                    thumb_64: <uri>
                    thumb_720: <uri>
                    thumb_720_h: <integer>
                    thumb_720_w: <integer>
                    thumb_80: <uri>
                    thumb_800: <uri>
                    thumb_800_h: <integer>
                    thumb_800_w: <integer>
                    thumb_960: <uri>
                    thumb_960_h: <integer>
                    thumb_960_w: <integer>
                    thumb_tiny: <string>
                    timestamp: <integer>
                    title: <string>
                    updated: <integer>
                    url_private: <uri>
                    url_private_download: <uri>
                    user: <string>
                    user_team: <string>
                    username: <string>
                paging:
                  page: <integer>
                  total: <integer>
                  count: <integer>
                  pages: <integer>
                  per_page: <integer>
                  spill: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /files.remote.update:
    post:
      tags:
        - Web API
      summary: files remote update
      description: Updates an existing remote file.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `remote_files:write`'
                  example: <string>
                file:
                  type: string
                  description: Specify a file by providing its ID.
                  example: <string>
                external_id:
                  type: string
                  description: Creator defined GUID for the file.
                  example: <string>
                title:
                  type: string
                  description: Title of the file being shared.
                  example: <string>
                filetype:
                  type: string
                  description: type of file
                  example: <string>
                external_url:
                  type: string
                  description: URL of the remote file.
                  example: <string>
                preview_image:
                  type: string
                  description: Preview of the document via `multipart/form-data`.
                  example: <string>
                indexable_file_contents:
                  type: string
                  description: >-
                    File containing contents that can be used to improve
                    searchability for the remote file.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /files.info:
    get:
      tags:
        - Web API
      summary: files info
      description: Gets information about a file.
      parameters:
        - name: file
          in: query
          schema:
            type: string
          description: Specify a file by providing its ID.
          example: <string>
        - name: count
          in: query
          schema:
            type: string
          example: <string>
        - name: page
          in: query
          schema:
            type: string
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Parameter for pagination. File comments are paginated for a single
            file. Set `cursor` equal to the `next_cursor` attribute returned by
            the previous request's `response_metadata`. This parameter is
            optional, but pagination is mandatory: the default value simply
            fetches the first "page" of the collection of comments. See
            [pagination](/docs/pagination) for more details.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                file:
                  channels:
                    - <string>
                  comments_count: <integer>
                  created: <integer>
                  date_delete: <integer>
                  display_as_bot: <boolean>
                  editable: <boolean>
                  editor: <string>
                  external_id: <string>
                  external_type: <string>
                  external_url: <uri>
                  filetype: <string>
                  groups:
                    - <string>
                  has_rich_preview: <boolean>
                  id: <string>
                  image_exif_rotation: <integer>
                  ims:
                    - <string>
                  is_external: <boolean>
                  is_public: <boolean>
                  is_starred: <boolean>
                  is_tombstoned: <boolean>
                  last_editor: <string>
                  mimetype: <string>
                  mode: <string>
                  name: <string>
                  non_owner_editable: <boolean>
                  num_stars: <integer>
                  original_h: <integer>
                  original_w: <integer>
                  permalink: <uri>
                  permalink_public: <uri>
                  pinned_info: <object>
                  pinned_to:
                    - <string>
                    - <string>
                  pretty_type: <string>
                  preview: <string>
                  public_url_shared: <boolean>
                  reactions:
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                  shares:
                    private: {}
                    public: {}
                  size: <integer>
                  source_team: <string>
                  state: <string>
                  thumb_1024: <uri>
                  thumb_1024_h: <integer>
                  thumb_1024_w: <integer>
                  thumb_160: <uri>
                  thumb_360: <uri>
                  thumb_360_h: <integer>
                  thumb_360_w: <integer>
                  thumb_480: <uri>
                  thumb_480_h: <integer>
                  thumb_480_w: <integer>
                  thumb_64: <uri>
                  thumb_720: <uri>
                  thumb_720_h: <integer>
                  thumb_720_w: <integer>
                  thumb_80: <uri>
                  thumb_800: <uri>
                  thumb_800_h: <integer>
                  thumb_800_w: <integer>
                  thumb_960: <uri>
                  thumb_960_h: <integer>
                  thumb_960_w: <integer>
                  thumb_tiny: <string>
                  timestamp: <integer>
                  title: <string>
                  updated: <integer>
                  url_private: <uri>
                  url_private_download: <uri>
                  user: <string>
                  user_team: <string>
                  username: <string>
                comments: []
                content_html: {}
                editor: <string>
                paging:
                  page: <integer>
                  total: <integer>
                  count: <integer>
                  pages: <integer>
                  per_page: <integer>
                  spill: <integer>
                response_metadata: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /files.upload:
    post:
      tags:
        - Web API
      summary: files upload
      description: Uploads or creates a file.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `files:write:user`'
                  example: <string>
                file:
                  type: string
                  description: >-
                    File contents via `multipart/form-data`. If omitting this
                    parameter, you must submit `content`.
                  example: <string>
                content:
                  type: string
                  description: >-
                    File contents via a POST variable. If omitting this
                    parameter, you must provide a `file`.
                  example: <string>
                filetype:
                  type: string
                  description: A [file type](/types/file#file_types) identifier.
                  example: <string>
                filename:
                  type: string
                  description: Filename of file.
                  example: <string>
                title:
                  type: string
                  description: Title of file.
                  example: <string>
                initial_comment:
                  type: string
                  description: >-
                    The message text introducing the file in specified
                    `channels`.
                  example: <string>
                channels:
                  type: string
                  description: >-
                    Comma-separated list of channel names or IDs where the file
                    will be shared.
                  example: <string>
                thread_ts:
                  type: string
                  description: >-
                    Provide another message's `ts` value to upload this file as
                    a reply. Never use a reply's `ts` value; use its parent
                    instead.
                  example: <number>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                file:
                  channels:
                    - <string>
                  comments_count: <integer>
                  created: <integer>
                  date_delete: <integer>
                  display_as_bot: <boolean>
                  editable: <boolean>
                  editor: <string>
                  external_id: <string>
                  external_type: <string>
                  external_url: <uri>
                  filetype: <string>
                  groups:
                    - <string>
                  has_rich_preview: <boolean>
                  id: <string>
                  image_exif_rotation: <integer>
                  ims:
                    - <string>
                  is_external: <boolean>
                  is_public: <boolean>
                  is_starred: <boolean>
                  is_tombstoned: <boolean>
                  last_editor: <string>
                  mimetype: <string>
                  mode: <string>
                  name: <string>
                  non_owner_editable: <boolean>
                  num_stars: <integer>
                  original_h: <integer>
                  original_w: <integer>
                  permalink: <uri>
                  permalink_public: <uri>
                  pinned_info: <object>
                  pinned_to:
                    - <string>
                    - <string>
                  pretty_type: <string>
                  preview: <string>
                  public_url_shared: <boolean>
                  reactions:
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                  shares:
                    private: {}
                    public: {}
                  size: <integer>
                  source_team: <string>
                  state: <string>
                  thumb_1024: <uri>
                  thumb_1024_h: <integer>
                  thumb_1024_w: <integer>
                  thumb_160: <uri>
                  thumb_360: <uri>
                  thumb_360_h: <integer>
                  thumb_360_w: <integer>
                  thumb_480: <uri>
                  thumb_480_h: <integer>
                  thumb_480_w: <integer>
                  thumb_64: <uri>
                  thumb_720: <uri>
                  thumb_720_h: <integer>
                  thumb_720_w: <integer>
                  thumb_80: <uri>
                  thumb_800: <uri>
                  thumb_800_h: <integer>
                  thumb_800_w: <integer>
                  thumb_960: <uri>
                  thumb_960_h: <integer>
                  thumb_960_w: <integer>
                  thumb_tiny: <string>
                  timestamp: <integer>
                  title: <string>
                  updated: <integer>
                  url_private: <uri>
                  url_private_download: <uri>
                  user: <string>
                  user_team: <string>
                  username: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /files.remote.add:
    post:
      tags:
        - Web API
      summary: files remote add
      description: Adds a file from a remote service
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `remote_files:write`'
                  example: <string>
                external_id:
                  type: string
                  description: Creator defined GUID for the file.
                  example: <string>
                title:
                  type: string
                  description: Title of the file being shared.
                  example: <string>
                filetype:
                  type: string
                  description: type of file
                  example: <string>
                external_url:
                  type: string
                  description: URL of the remote file.
                  example: <string>
                preview_image:
                  type: string
                  description: Preview of the document via `multipart/form-data`.
                  example: <string>
                indexable_file_contents:
                  type: string
                  description: >-
                    A text file (txt, pdf, doc, etc.) containing textual search
                    terms that are used to improve discovery of the remote file.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /files.remote.info:
    get:
      tags:
        - Web API
      summary: files remote info
      description: Retrieve information about a remote file added to Slack
      parameters:
        - name: file
          in: query
          schema:
            type: string
          description: Specify a file by providing its ID.
          example: <string>
        - name: external_id
          in: query
          schema:
            type: string
          description: Creator defined GUID for the file.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /migration.exchange:
    get:
      tags:
        - Web API
      summary: migration exchange
      description: For Enterprise Grid workspaces, map local user IDs to global user IDs
      parameters:
        - name: users
          in: query
          schema:
            type: string
          description: (Required) A comma-separated list of user ids, up to 400 per request
          example: <string>
        - name: team_id
          in: query
          schema:
            type: string
          description: Specify team_id starts with `T` in case of Org Token
          example: <string>
        - name: to_old
          in: query
          schema:
            type: string
          description: >-
            Specify `true` to convert `W` global user IDs to workspace-specific
            `U` IDs. Defaults to `false`.
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                team_id: <string>
                enterprise_id: <string>
                invalid_user_ids:
                  - <string>
                  - <string>
                user_id_map: <object>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /files.remote.list:
    get:
      tags:
        - Web API
      summary: files remote list
      description: Retrieve information about a remote file added to Slack
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          description: Filter files appearing in a specific channel, indicated by its ID.
          example: <string>
        - name: ts_from
          in: query
          schema:
            type: string
          description: Filter files created after this timestamp (inclusive).
          example: <number>
        - name: ts_to
          in: query
          schema:
            type: string
          description: Filter files created before this timestamp (inclusive).
          example: <number>
        - name: limit
          in: query
          schema:
            type: string
          description: The maximum number of items to return.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /files.remote.remove:
    post:
      tags:
        - Web API
      summary: files remote remove
      description: Remove a remote file.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `remote_files:write`'
                  example: <string>
                file:
                  type: string
                  description: Specify a file by providing its ID.
                  example: <string>
                external_id:
                  type: string
                  description: Creator defined GUID for the file.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /files.remote.share:
    get:
      tags:
        - Web API
      summary: files remote share
      description: Share a remote file into a channel.
      parameters:
        - name: file
          in: query
          schema:
            type: string
          description: >-
            Specify a file registered with Slack by providing its ID. Either
            this field or `external_id` or both are required.
          example: <string>
        - name: external_id
          in: query
          schema:
            type: string
          description: >-
            The globally unique identifier (GUID) for the file, as set by the
            app registering the file with Slack.  Either this field or `file` or
            both are required.
          example: <string>
        - name: channels
          in: query
          schema:
            type: string
          description: Comma-separated list of channel IDs where the file will be shared.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /files.revokePublicURL:
    post:
      tags:
        - Web API
      summary: files revoke Public URL
      description: Revokes public/external sharing access for a file
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: File to revoke
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `files:write:user`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                file:
                  channels:
                    - <string>
                  comments_count: <integer>
                  created: <integer>
                  date_delete: <integer>
                  display_as_bot: <boolean>
                  editable: <boolean>
                  editor: <string>
                  external_id: <string>
                  external_type: <string>
                  external_url: <uri>
                  filetype: <string>
                  groups:
                    - <string>
                  has_rich_preview: <boolean>
                  id: <string>
                  image_exif_rotation: <integer>
                  ims:
                    - <string>
                  is_external: <boolean>
                  is_public: <boolean>
                  is_starred: <boolean>
                  is_tombstoned: <boolean>
                  last_editor: <string>
                  mimetype: <string>
                  mode: <string>
                  name: <string>
                  non_owner_editable: <boolean>
                  num_stars: <integer>
                  original_h: <integer>
                  original_w: <integer>
                  permalink: <uri>
                  permalink_public: <uri>
                  pinned_info: <object>
                  pinned_to:
                    - <string>
                    - <string>
                  pretty_type: <string>
                  preview: <string>
                  public_url_shared: <boolean>
                  reactions:
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                  shares:
                    private: {}
                    public: {}
                  size: <integer>
                  source_team: <string>
                  state: <string>
                  thumb_1024: <uri>
                  thumb_1024_h: <integer>
                  thumb_1024_w: <integer>
                  thumb_160: <uri>
                  thumb_360: <uri>
                  thumb_360_h: <integer>
                  thumb_360_w: <integer>
                  thumb_480: <uri>
                  thumb_480_h: <integer>
                  thumb_480_w: <integer>
                  thumb_64: <uri>
                  thumb_720: <uri>
                  thumb_720_h: <integer>
                  thumb_720_w: <integer>
                  thumb_80: <uri>
                  thumb_800: <uri>
                  thumb_800_h: <integer>
                  thumb_800_w: <integer>
                  thumb_960: <uri>
                  thumb_960_h: <integer>
                  thumb_960_w: <integer>
                  thumb_tiny: <string>
                  timestamp: <integer>
                  title: <string>
                  updated: <integer>
                  url_private: <uri>
                  url_private_download: <uri>
                  user: <string>
                  user_team: <string>
                  username: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /files.sharedPublicURL:
    post:
      tags:
        - Web API
      summary: files shared Public URL
      description: Enables a file for public/external sharing.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: File to share
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `files:write:user`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                file:
                  channels:
                    - <string>
                  comments_count: <integer>
                  created: <integer>
                  date_delete: <integer>
                  display_as_bot: <boolean>
                  editable: <boolean>
                  editor: <string>
                  external_id: <string>
                  external_type: <string>
                  external_url: <uri>
                  filetype: <string>
                  groups:
                    - <string>
                  has_rich_preview: <boolean>
                  id: <string>
                  image_exif_rotation: <integer>
                  ims:
                    - <string>
                  is_external: <boolean>
                  is_public: <boolean>
                  is_starred: <boolean>
                  is_tombstoned: <boolean>
                  last_editor: <string>
                  mimetype: <string>
                  mode: <string>
                  name: <string>
                  non_owner_editable: <boolean>
                  num_stars: <integer>
                  original_h: <integer>
                  original_w: <integer>
                  permalink: <uri>
                  permalink_public: <uri>
                  pinned_info: <object>
                  pinned_to:
                    - <string>
                    - <string>
                  pretty_type: <string>
                  preview: <string>
                  public_url_shared: <boolean>
                  reactions:
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                    - name: <string>
                      users:
                        - <string>
                        - <string>
                      count: <integer>
                  shares:
                    private: {}
                    public: {}
                  size: <integer>
                  source_team: <string>
                  state: <string>
                  thumb_1024: <uri>
                  thumb_1024_h: <integer>
                  thumb_1024_w: <integer>
                  thumb_160: <uri>
                  thumb_360: <uri>
                  thumb_360_h: <integer>
                  thumb_360_w: <integer>
                  thumb_480: <uri>
                  thumb_480_h: <integer>
                  thumb_480_w: <integer>
                  thumb_64: <uri>
                  thumb_720: <uri>
                  thumb_720_h: <integer>
                  thumb_720_w: <integer>
                  thumb_80: <uri>
                  thumb_800: <uri>
                  thumb_800_h: <integer>
                  thumb_800_w: <integer>
                  thumb_960: <uri>
                  thumb_960_h: <integer>
                  thumb_960_w: <integer>
                  thumb_tiny: <string>
                  timestamp: <integer>
                  title: <string>
                  updated: <integer>
                  url_private: <uri>
                  url_private_download: <uri>
                  user: <string>
                  user_team: <string>
                  username: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /pins.list:
    get:
      tags:
        - Web API
      summary: pins list
      description: Lists items pinned to a channel.
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          description: (Required) Channel to get pinned items for.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /reactions.list:
    get:
      tags:
        - Web API
      summary: reactions list
      description: Lists reactions made by a user.
      parameters:
        - name: user
          in: query
          schema:
            type: string
          description: Show reactions made by this user. Defaults to the authed user.
          example: <string>
        - name: full
          in: query
          schema:
            type: string
          description: If true always return the complete reaction list.
          example: <boolean>
        - name: count
          in: query
          schema:
            type: string
          example: <integer>
        - name: page
          in: query
          schema:
            type: string
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Parameter for pagination. Set `cursor` equal to the `next_cursor`
            attribute returned by the previous request's `response_metadata`.
            This parameter is optional, but pagination is mandatory: the default
            value simply fetches the first "page" of the collection. See
            [pagination](/docs/pagination) for more details.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                items: []
                paging:
                  page: <integer>
                  total: <integer>
                  count: <integer>
                  pages: <integer>
                  per_page: <integer>
                  spill: <integer>
                response_metadata: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /oauth.token:
    get:
      tags:
        - Web API
      summary: oauth token
      description: Exchanges a temporary OAuth verifier code for a workspace token.
      parameters:
        - name: client_id
          in: query
          schema:
            type: string
          description: Issued when you created your application.
          example: <string>
        - name: client_secret
          in: query
          schema:
            type: string
          description: Issued when you created your application.
          example: <string>
        - name: code
          in: query
          schema:
            type: string
          description: The `code` param returned via the OAuth callback.
          example: <string>
        - name: redirect_uri
          in: query
          schema:
            type: string
          description: This must match the originally submitted URI (if one was sent).
          example: <string>
        - name: single_channel
          in: query
          schema:
            type: string
          description: Request the user to add your app only to a single channel.
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /reactions.add:
    post:
      tags:
        - Web API
      summary: reactions add
      description: Adds a reaction to an item.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Channel where the message to add reaction to was posted.
                  example: <string>
                name:
                  type: string
                  description: Reaction (emoji) name.
                  example: <string>
                timestamp:
                  type: string
                  description: Timestamp of the message to add reaction to.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `reactions:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /reactions.remove:
    post:
      tags:
        - Web API
      summary: reactions remove
      description: Removes a reaction from an item.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Reaction (emoji) name.
                  example: <string>
                file:
                  type: string
                  description: File to remove reaction from.
                  example: <string>
                file_comment:
                  type: string
                  description: File comment to remove reaction from.
                  example: <string>
                channel:
                  type: string
                  description: >-
                    Channel where the message to remove reaction from was
                    posted.
                  example: <string>
                timestamp:
                  type: string
                  description: Timestamp of the message to remove reaction from.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `reactions:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /oauth.v2.access:
    get:
      tags:
        - Web API
      summary: oauth v2 access
      description: Exchanges a temporary OAuth verifier code for an access token.
      parameters:
        - name: client_id
          in: query
          schema:
            type: string
          description: Issued when you created your application.
          example: <string>
        - name: client_secret
          in: query
          schema:
            type: string
          description: Issued when you created your application.
          example: <string>
        - name: code
          in: query
          schema:
            type: string
          description: (Required) The `code` param returned via the OAuth callback.
          example: <string>
        - name: redirect_uri
          in: query
          schema:
            type: string
          description: This must match the originally submitted URI (if one was sent).
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /pins.add:
    post:
      tags:
        - Web API
      summary: pins add
      description: Pins an item to a channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Channel to pin the item in.
                  example: <string>
                timestamp:
                  type: string
                  description: Timestamp of the message to pin.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `pins:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /oauth.access:
    get:
      tags:
        - Web API
      summary: oauth access
      description: Exchanges a temporary OAuth verifier code for an access token.
      parameters:
        - name: client_id
          in: query
          schema:
            type: string
          description: Issued when you created your application.
          example: <string>
        - name: client_secret
          in: query
          schema:
            type: string
          description: Issued when you created your application.
          example: <string>
        - name: code
          in: query
          schema:
            type: string
          description: The `code` param returned via the OAuth callback.
          example: <string>
        - name: redirect_uri
          in: query
          schema:
            type: string
          description: This must match the originally submitted URI (if one was sent).
          example: <string>
        - name: single_channel
          in: query
          schema:
            type: string
          description: >-
            Request the user to add your app only to a single channel. Only
            valid with a [legacy workspace
            app](https://api.slack.com/legacy-workspace-apps).
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /reactions.get:
    get:
      tags:
        - Web API
      summary: reactions get
      description: Gets reactions for an item.
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          description: Channel where the message to get reactions for was posted.
          example: <string>
        - name: file
          in: query
          schema:
            type: string
          description: File to get reactions for.
          example: <string>
        - name: file_comment
          in: query
          schema:
            type: string
          description: File comment to get reactions for.
          example: <string>
        - name: full
          in: query
          schema:
            type: string
          description: If true always return the complete reaction list.
          example: <boolean>
        - name: timestamp
          in: query
          schema:
            type: string
          description: Timestamp of the message to get reactions for.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: <object>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /pins.remove:
    post:
      tags:
        - Web API
      summary: pins remove
      description: Un-pins an item from a channel.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: Channel where the item is pinned to.
                  example: <string>
                timestamp:
                  type: string
                  description: Timestamp of the message to un-pin.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `pins:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /reminders.complete:
    post:
      tags:
        - Web API
      summary: reminders complete
      description: Marks a reminder as complete.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                reminder:
                  type: string
                  description: The ID of the reminder to be marked as complete
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `reminders:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /reminders.add:
    post:
      tags:
        - Web API
      summary: reminders add
      description: Creates a reminder.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The content of the reminder
                  example: <string>
                time:
                  type: string
                  description: >-
                    When this reminder should happen: the Unix timestamp (up to
                    five years from now), the number of seconds until the
                    reminder (if within 24 hours), or a natural language
                    description (Ex. "in 15 minutes," or "every Thursday")
                  example: <string>
                user:
                  type: string
                  description: >-
                    The user who will receive the reminder. If no user is
                    specified, the reminder will go to user who created it.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `reminders:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                reminder:
                  id: <string>
                  creator: <string>
                  user: <string>
                  text: <string>
                  recurring: <boolean>
                  complete_ts: <integer>
                  time: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /reminders.delete:
    post:
      tags:
        - Web API
      summary: reminders delete
      description: Deletes a reminder.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                reminder:
                  type: string
                  description: The ID of the reminder
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: 'Authentication token. Requires scope: `reminders:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /reminders.info:
    get:
      tags:
        - Web API
      summary: reminders info
      description: Gets information about a reminder.
      parameters:
        - name: reminder
          in: query
          schema:
            type: string
          description: The ID of the reminder
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                reminder:
                  id: <string>
                  creator: <string>
                  user: <string>
                  text: <string>
                  recurring: <boolean>
                  complete_ts: <integer>
                  time: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /reminders.list:
    get:
      tags:
        - Web API
      summary: reminders list
      description: Lists all reminders created by or for a given user.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                reminders:
                  - id: <string>
                    creator: <string>
                    user: <string>
                    text: <string>
                    recurring: <boolean>
                    complete_ts: <integer>
                    time: <integer>
                  - id: <string>
                    creator: <string>
                    user: <string>
                    text: <string>
                    recurring: <boolean>
                    complete_ts: <integer>
                    time: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /rtm.connect:
    get:
      tags:
        - Web API
      summary: rtm connect
      description: Starts a Real Time Messaging session.
      parameters:
        - name: batch_presence_aware
          in: query
          schema:
            type: string
          description: >-
            Batch presence deliveries via subscription. Enabling changes the
            shape of `presence_change` events. See [batch
            presence](/docs/presence-and-status#batching).
          example: <boolean>
        - name: presence_sub
          in: query
          schema:
            type: string
          description: >-
            Only deliver presence events when requested by subscription. See
            [presence subscriptions](/docs/presence-and-status#subscriptions).
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                url: <uri>
                team:
                  id: <string>
                  name: <string>
                  domain: <string>
                self:
                  id: <string>
                  name: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /search.messages:
    get:
      tags:
        - Web API
      summary: search messages
      description: Searches for messages matching a query.
      parameters:
        - name: count
          in: query
          schema:
            type: string
          description: Pass the number of results you want per "page". Maximum of `100`.
          example: <integer>
        - name: highlight
          in: query
          schema:
            type: string
          description: >-
            Pass a value of `true` to enable query highlight markers (see
            below).
          example: <boolean>
        - name: page
          in: query
          schema:
            type: string
          example: <integer>
        - name: query
          in: query
          schema:
            type: string
          description: (Required) Search query.
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: Return matches sorted by either `score` or `timestamp`.
          example: <string>
        - name: sort_dir
          in: query
          schema:
            type: string
          description: Change sort direction to ascending (`asc`) or descending (`desc`).
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /stars.add:
    post:
      tags:
        - Web API
      summary: stars add
      description: Adds a star to an item.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: >-
                    Channel to add star to, or channel where the message to add
                    star to was posted (used with `timestamp`).
                  example: <string>
                file:
                  type: string
                  description: File to add star to.
                  example: <string>
                file_comment:
                  type: string
                  description: File comment to add star to.
                  example: <string>
                timestamp:
                  type: string
                  description: Timestamp of the message to add star to.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `stars:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /stars.list:
    get:
      tags:
        - Web API
      summary: stars list
      description: Lists stars for a user.
      parameters:
        - name: count
          in: query
          schema:
            type: string
          example: <string>
        - name: page
          in: query
          schema:
            type: string
          example: <string>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Parameter for pagination. Set `cursor` equal to the `next_cursor`
            attribute returned by the previous request's `response_metadata`.
            This parameter is optional, but pagination is mandatory: the default
            value simply fetches the first "page" of the collection. See
            [pagination](/docs/pagination) for more details.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                items: []
                paging:
                  page: <integer>
                  total: <integer>
                  count: <integer>
                  pages: <integer>
                  per_page: <integer>
                  spill: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /stars.remove:
    post:
      tags:
        - Web API
      summary: stars remove
      description: Removes a star from an item.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: >-
                    Channel to remove star from, or channel where the message to
                    remove star from was posted (used with `timestamp`).
                  example: <string>
                file:
                  type: string
                  description: File to remove star from.
                  example: <string>
                file_comment:
                  type: string
                  description: File comment to remove star from.
                  example: <string>
                timestamp:
                  type: string
                  description: Timestamp of the message to remove star from.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `stars:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /team.accessLogs:
    get:
      tags:
        - Web API
      summary: team access Logs
      description: Gets the access logs for the current team.
      parameters:
        - name: before
          in: query
          schema:
            type: string
          description: End of time range of logs to include in results (inclusive).
          example: <string>
        - name: count
          in: query
          schema:
            type: string
          example: <string>
        - name: page
          in: query
          schema:
            type: string
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                logins:
                  - user_id: <string>
                    username: <string>
                    date_first: <integer>
                    date_last: <integer>
                    count: <integer>
                    ip: <string>
                    user_agent: <string>
                    isp: <string>
                    country: <string>
                    region: <string>
                paging:
                  page: <integer>
                  total: <integer>
                  count: <integer>
                  pages: <integer>
                  per_page: <integer>
                  spill: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /team.billableInfo:
    get:
      tags:
        - Web API
      summary: team billable Info
      description: Gets billable users information for the current team.
      parameters:
        - name: user
          in: query
          schema:
            type: string
          description: >-
            A user to retrieve the billable information for. Defaults to all
            users.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /team.info:
    get:
      tags:
        - Web API
      summary: team info
      description: Gets information about the current team.
      parameters:
        - name: team
          in: query
          schema:
            type: string
          description: >-
            Team to get info on, if omitted, will return information about the
            current team. Will only return team that the authenticated token is
            allowed to see through external shared channels
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                team:
                  id: <string>
                  name: <string>
                  domain: <string>
                  email_domain: <string>
                  icon:
                    image_102: <string>
                    image_132: <string>
                    image_230: <string>
                    image_34: <string>
                    image_44: <string>
                    image_68: <string>
                    image_88: <string>
                    image_default: <boolean>
                  archived: <boolean>
                  avatar_base_url: <uri>
                  created: <integer>
                  date_create: <integer>
                  deleted: <boolean>
                  description: <string>
                  discoverable: {}
                  enterprise_id: <string>
                  enterprise_name: <string>
                  external_org_migrations:
                    date_updated: <integer>
                    current:
                      - team_id: <string>
                        date_started: <integer>
                      - team_id: <string>
                        date_started: <integer>
                  has_compliance_export: <boolean>
                  is_assigned: <boolean>
                  is_enterprise: <integer>
                  is_over_storage_limit: <boolean>
                  limit_ts: <integer>
                  locale: <string>
                  messages_count: <integer>
                  msg_edit_window_mins: <integer>
                  over_integrations_limit: <boolean>
                  over_storage_limit: <boolean>
                  pay_prod_cur: <string>
                  plan: <string>
                  primary_owner:
                    id: <string>
                    email: <string>
                  sso_provider:
                    label: <string>
                    name: <string>
                    type: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /usergroups.enable:
    post:
      tags:
        - Web API
      summary: usergroups enable
      description: Enable a User Group
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to enable.
                  example: <string>
                include_count:
                  type: string
                  description: Include the number of users in the User Group.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `usergroups:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                usergroup:
                  id: <string>
                  team_id: <string>
                  is_usergroup: <boolean>
                  is_subteam: <boolean>
                  name: <string>
                  description: <string>
                  handle: <string>
                  is_external: <boolean>
                  date_create: <integer>
                  date_update: <integer>
                  date_delete: <integer>
                  auto_type: {}
                  auto_provision: <boolean>
                  enterprise_subteam_id: <string>
                  created_by: <string>
                  updated_by: <string>
                  deleted_by: {}
                  prefs:
                    channels:
                      - <string>
                      - <string>
                    groups:
                      - <string>
                      - <string>
                  channel_count: <integer>
                  user_count: <integer>
                  users:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /team.integrationLogs:
    get:
      tags:
        - Web API
      summary: team integration Logs
      description: Gets the integration logs for the current team.
      parameters:
        - name: app_id
          in: query
          schema:
            type: string
          description: Filter logs to this Slack app. Defaults to all logs.
          example: <string>
        - name: change_type
          in: query
          schema:
            type: string
          description: Filter logs with this change type. Defaults to all logs.
          example: <string>
        - name: count
          in: query
          schema:
            type: string
          example: <string>
        - name: page
          in: query
          schema:
            type: string
          example: <string>
        - name: service_id
          in: query
          schema:
            type: string
          description: Filter logs to this service. Defaults to all logs.
          example: <string>
        - name: user
          in: query
          schema:
            type: string
          description: Filter logs generated by this user’s actions. Defaults to all logs.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                logs:
                  - user_id: <string>
                    user_name: <string>
                    date: <string>
                    change_type: <string>
                    app_type: <string>
                    app_id: <string>
                    scope: <string>
                    admin_app_id: <string>
                    channel: <string>
                    service_id: <string>
                    service_type: <string>
                paging:
                  page: <integer>
                  total: <integer>
                  count: <integer>
                  pages: <integer>
                  per_page: <integer>
                  spill: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /team.profile.get:
    get:
      tags:
        - Web API
      summary: team profile get
      description: Retrieve a team's profile.
      parameters:
        - name: visibility
          in: query
          schema:
            type: string
          description: Filter by visibility.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                profile:
                  fields:
                    - id: <string>
                      ordering: <number>
                      label: <string>
                      hint: <string>
                      type: <string>
                      field_name: <string>
                      is_hidden: <boolean>
                      options: {}
                      possible_values:
                        - <string>
                        - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /usergroups.create:
    post:
      tags:
        - Web API
      summary: usergroups create
      description: Create a User Group
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: A name for the User Group. Must be unique among User Groups.
                  example: <string>
                channels:
                  type: string
                  description: >-
                    A comma separated string of encoded channel IDs for which
                    the User Group uses as a default.
                  example: <string>
                description:
                  type: string
                  description: A short description of the User Group.
                  example: <string>
                handle:
                  type: string
                  description: >-
                    A mention handle. Must be unique among channels, users and
                    User Groups.
                  example: <string>
                include_count:
                  type: string
                  description: Include the number of users in each User Group.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `usergroups:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                usergroup:
                  id: <string>
                  team_id: <string>
                  is_usergroup: <boolean>
                  is_subteam: <boolean>
                  name: <string>
                  description: <string>
                  handle: <string>
                  is_external: <boolean>
                  date_create: <integer>
                  date_update: <integer>
                  date_delete: <integer>
                  auto_type: {}
                  auto_provision: <boolean>
                  enterprise_subteam_id: <string>
                  created_by: <string>
                  updated_by: <string>
                  deleted_by: {}
                  prefs:
                    channels:
                      - <string>
                      - <string>
                    groups:
                      - <string>
                      - <string>
                  channel_count: <integer>
                  user_count: <integer>
                  users:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /usergroups.disable:
    post:
      tags:
        - Web API
      summary: usergroups disable
      description: Disable an existing User Group
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to disable.
                  example: <string>
                include_count:
                  type: string
                  description: Include the number of users in the User Group.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `usergroups:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                usergroup:
                  id: <string>
                  team_id: <string>
                  is_usergroup: <boolean>
                  is_subteam: <boolean>
                  name: <string>
                  description: <string>
                  handle: <string>
                  is_external: <boolean>
                  date_create: <integer>
                  date_update: <integer>
                  date_delete: <integer>
                  auto_type: {}
                  auto_provision: <boolean>
                  enterprise_subteam_id: <string>
                  created_by: <string>
                  updated_by: <string>
                  deleted_by: {}
                  prefs:
                    channels:
                      - <string>
                      - <string>
                    groups:
                      - <string>
                      - <string>
                  channel_count: <integer>
                  user_count: <integer>
                  users:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /usergroups.list:
    get:
      tags:
        - Web API
      summary: usergroups list
      description: List all User Groups for a team
      parameters:
        - name: include_users
          in: query
          schema:
            type: string
          description: Include the list of users for each User Group.
          example: <boolean>
        - name: include_count
          in: query
          schema:
            type: string
          description: Include the number of users in each User Group.
          example: <boolean>
        - name: include_disabled
          in: query
          schema:
            type: string
          description: Include disabled User Groups.
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                usergroups:
                  - id: <string>
                    team_id: <string>
                    is_usergroup: <boolean>
                    is_subteam: <boolean>
                    name: <string>
                    description: <string>
                    handle: <string>
                    is_external: <boolean>
                    date_create: <integer>
                    date_update: <integer>
                    date_delete: <integer>
                    auto_type: {}
                    auto_provision: <boolean>
                    enterprise_subteam_id: <string>
                    created_by: <string>
                    updated_by: <string>
                    deleted_by: {}
                    prefs:
                      channels:
                        - <string>
                        - <string>
                      groups:
                        - <string>
                        - <string>
                    channel_count: <integer>
                    user_count: <integer>
                    users:
                      - <string>
                      - <string>
                  - id: <string>
                    team_id: <string>
                    is_usergroup: <boolean>
                    is_subteam: <boolean>
                    name: <string>
                    description: <string>
                    handle: <string>
                    is_external: <boolean>
                    date_create: <integer>
                    date_update: <integer>
                    date_delete: <integer>
                    auto_type: {}
                    auto_provision: <boolean>
                    enterprise_subteam_id: <string>
                    created_by: <string>
                    updated_by: <string>
                    deleted_by: {}
                    prefs:
                      channels:
                        - <string>
                        - <string>
                      groups:
                        - <string>
                        - <string>
                    channel_count: <integer>
                    user_count: <integer>
                    users:
                      - <string>
                      - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /usergroups.users.list:
    get:
      tags:
        - Web API
      summary: usergroups users list
      description: List all users in a User Group
      parameters:
        - name: include_disabled
          in: query
          schema:
            type: string
          description: Allow results that involve disabled User Groups.
          example: <boolean>
        - name: usergroup
          in: query
          schema:
            type: string
          description: (Required) The encoded ID of the User Group to update.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                users:
                  - <string>
                  - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /usergroups.update:
    post:
      tags:
        - Web API
      summary: usergroups update
      description: Update an existing User Group
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to update.
                  example: <string>
                handle:
                  type: string
                  description: >-
                    A mention handle. Must be unique among channels, users and
                    User Groups.
                  example: <string>
                description:
                  type: string
                  description: A short description of the User Group.
                  example: <string>
                channels:
                  type: string
                  description: >-
                    A comma separated string of encoded channel IDs for which
                    the User Group uses as a default.
                  example: <string>
                include_count:
                  type: string
                  description: Include the number of users in the User Group.
                  example: <boolean>
                name:
                  type: string
                  description: A name for the User Group. Must be unique among User Groups.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `usergroups:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                usergroup:
                  id: <string>
                  team_id: <string>
                  is_usergroup: <boolean>
                  is_subteam: <boolean>
                  name: <string>
                  description: <string>
                  handle: <string>
                  is_external: <boolean>
                  date_create: <integer>
                  date_update: <integer>
                  date_delete: <integer>
                  auto_type: {}
                  auto_provision: <boolean>
                  enterprise_subteam_id: <string>
                  created_by: <string>
                  updated_by: <string>
                  deleted_by: {}
                  prefs:
                    channels:
                      - <string>
                      - <string>
                    groups:
                      - <string>
                      - <string>
                  channel_count: <integer>
                  user_count: <integer>
                  users:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /usergroups.users.update:
    post:
      tags:
        - Web API
      summary: usergroups users update
      description: Update the list of users for a User Group
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to update.
                  example: <string>
                users:
                  type: string
                  description: >-
                    A comma separated string of encoded user IDs that represent
                    the entire list of users for the User Group.
                  example: <string>
                include_count:
                  type: string
                  description: Include the number of users in the User Group.
                  example: <boolean>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `usergroups:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                usergroup:
                  id: <string>
                  team_id: <string>
                  is_usergroup: <boolean>
                  is_subteam: <boolean>
                  name: <string>
                  description: <string>
                  handle: <string>
                  is_external: <boolean>
                  date_create: <integer>
                  date_update: <integer>
                  date_delete: <integer>
                  auto_type: {}
                  auto_provision: <boolean>
                  enterprise_subteam_id: <string>
                  created_by: <string>
                  updated_by: <string>
                  deleted_by: {}
                  prefs:
                    channels:
                      - <string>
                      - <string>
                    groups:
                      - <string>
                      - <string>
                  channel_count: <integer>
                  user_count: <integer>
                  users:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.deletePhoto:
    post:
      tags:
        - Web API
      summary: users delete Photo
      description: Delete the user profile photo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `users.profile:write`'
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.getPresence:
    get:
      tags:
        - Web API
      summary: users get Presence
      description: Gets user presence information.
      parameters:
        - name: user
          in: query
          schema:
            type: string
          description: User to get presence info on. Defaults to the authed user.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                presence: <string>
                auto_away: <boolean>
                connection_count: <integer>
                last_activity: <integer>
                manual_away: <boolean>
                online: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
  /users.conversations:
    get:
      tags:
        - Web API
      summary: users conversations
      description: List conversations the calling user may access.
      parameters:
        - name: user
          in: query
          schema:
            type: string
          description: >-
            Browse conversations by a specific user ID's membership. Non-public
            channels are restricted to those where the calling user shares
            membership.
          example: <string>
        - name: types
          in: query
          schema:
            type: string
          description: >-
            Mix and match channel types by providing a comma-separated list of
            any combination of `public_channel`, `private_channel`, `mpim`, `im`
          example: <string>
        - name: exclude_archived
          in: query
          schema:
            type: string
          description: Set to `true` to exclude archived channels from the list
          example: <boolean>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached. Must be an integer no larger than 1000.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                channels: []
                response_metadata:
                  next_cursor: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.info:
    get:
      tags:
        - Web API
      summary: users info
      description: Gets information about a user.
      parameters:
        - name: include_locale
          in: query
          schema:
            type: string
          description: >-
            Set this to `true` to receive the locale for this user. Defaults to
            `false`
          example: <boolean>
        - name: user
          in: query
          schema:
            type: string
          description: User to get info on
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                user: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /views.open:
    get:
      tags:
        - Web API
      summary: views open
      description: Open a view for a user.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `none`'
          example: <string>
        - name: trigger_id
          in: query
          schema:
            type: string
          description: (Required) Exchange a trigger to post to the user.
          example: <string>
        - name: view
          in: query
          schema:
            type: string
          description: >-
            (Required) A [view payload](/reference/surfaces/views). This must be
            a JSON-encoded string.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /users.identity:
    get:
      tags:
        - Web API
      summary: users identity
      description: Get a user's identity.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.list:
    get:
      tags:
        - Web API
      summary: users list
      description: Lists all users in a Slack team.
      parameters:
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list
            hasn't been reached. Providing no `limit` value will result in Slack
            attempting to deliver you the entire result set. If the collection
            is too large you may experience `limit_required` or HTTP 500 errors.
          example: <integer>
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](/docs/pagination) for
            more detail.
          example: <string>
        - name: include_locale
          in: query
          schema:
            type: string
          description: >-
            Set this to `true` to receive the locale for users. Defaults to
            `false`
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                members: []
                cache_ts: <integer>
                response_metadata: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.lookupByEmail:
    get:
      tags:
        - Web API
      summary: users lookup By Email
      description: Find a user with an email address.
      parameters:
        - name: email
          in: query
          schema:
            type: string
          description: (Required) An email address belonging to a user in the workspace
          example: jroche@slack-corp.com
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                user: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.profile.set:
    post:
      tags:
        - Web API
      summary: users profile set
      description: Set the profile information for a user.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    Name of a single key to set. Usable only if `profile` is not
                    passed.
                  example: <string>
                profile:
                  type: string
                  description: >-
                    Collection of key:value pairs presented as a URL-encoded
                    JSON hash. At most 50 fields may be set. Each field name is
                    limited to 255 characters.
                  example: <string>
                user:
                  type: string
                  description: >-
                    ID of user to change. This argument may only be specified by
                    team admins on paid teams.
                  example: <string>
                value:
                  type: string
                  description: >-
                    Value to set a single key to. Usable only if `profile` is
                    not passed.
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `users.profile:write`
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                username: <string>
                profile:
                  real_name: <string>
                  display_name: <string>
                  avatar_hash: <string>
                  real_name_normalized: <string>
                  display_name_normalized: <string>
                  title: <string>
                  phone: <string>
                  skype: <string>
                  status_text: <string>
                  status_emoji: <string>
                  fields: <object>
                  always_active: <boolean>
                  api_app_id: <string>
                  bot_id: <string>
                  email: <email>
                  first_name: <string>
                  guest_expiration_ts: <integer>
                  guest_invited_by: <string>
                  image_1024: <uri>
                  image_192: <uri>
                  image_24: <uri>
                  image_32: <uri>
                  image_48: <uri>
                  image_512: <uri>
                  image_72: <uri>
                  image_original: <uri>
                  is_app_user: <boolean>
                  is_custom_image: <boolean>
                  is_restricted: <boolean>
                  is_ultra_restricted: <boolean>
                  last_avatar_image_hash: <string>
                  last_name: <string>
                  memberships_count: <integer>
                  name: <string>
                  pronouns: <string>
                  status_default_emoji: <string>
                  status_default_text: <string>
                  status_default_text_canonical: <string>
                  status_expiration: <integer>
                  status_text_canonical: <string>
                  team: <string>
                  updated: <integer>
                  user_id: <string>
                  username: <string>
                email_pending: <email>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.profile.get:
    get:
      tags:
        - Web API
      summary: users profile get
      description: Retrieves a user's profile information.
      parameters:
        - name: include_labels
          in: query
          schema:
            type: string
          description: Include labels for each ID in custom profile fields
          example: <boolean>
        - name: user
          in: query
          schema:
            type: string
          description: User to retrieve profile info for
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                profile:
                  real_name: <string>
                  display_name: <string>
                  avatar_hash: <string>
                  real_name_normalized: <string>
                  display_name_normalized: <string>
                  title: <string>
                  phone: <string>
                  skype: <string>
                  status_text: <string>
                  status_emoji: <string>
                  fields: <object>
                  always_active: <boolean>
                  api_app_id: <string>
                  bot_id: <string>
                  email: <email>
                  first_name: <string>
                  guest_expiration_ts: <integer>
                  guest_invited_by: <string>
                  image_1024: <uri>
                  image_192: <uri>
                  image_24: <uri>
                  image_32: <uri>
                  image_48: <uri>
                  image_512: <uri>
                  image_72: <uri>
                  image_original: <uri>
                  is_app_user: <boolean>
                  is_custom_image: <boolean>
                  is_restricted: <boolean>
                  is_ultra_restricted: <boolean>
                  last_avatar_image_hash: <string>
                  last_name: <string>
                  memberships_count: <integer>
                  name: <string>
                  pronouns: <string>
                  status_default_emoji: <string>
                  status_default_text: <string>
                  status_default_text_canonical: <string>
                  status_expiration: <integer>
                  status_text_canonical: <string>
                  team: <string>
                  updated: <integer>
                  user_id: <string>
                  username: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.setActive:
    post:
      tags:
        - Web API
      summary: users set Active
      description: Marked a user as active. Deprecated and non-functional.
      requestBody:
        content: {}
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `users:write`'
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /users.setPhoto:
    post:
      tags:
        - Web API
      summary: users set Photo
      description: Set the user profile photo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `users.profile:write`'
                  example: <string>
                crop_w:
                  type: string
                  description: Width/height of crop box (always square)
                  example: <string>
                crop_x:
                  type: string
                  description: X coordinate of top-left corner of crop box
                  example: <string>
                crop_y:
                  type: string
                  description: Y coordinate of top-left corner of crop box
                  example: <string>
                image:
                  type: string
                  description: File contents via `multipart/form-data`.
                  example: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                profile:
                  image_24: <uri>
                  image_32: <uri>
                  image_48: <uri>
                  image_72: <uri>
                  image_192: <uri>
                  image_512: <uri>
                  image_1024: <uri>
                  image_original: <uri>
                  avatar_hash: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
                debug_step: <string>
                dims: <string>
                time_ident: <integer>
  /users.setPresence:
    post:
      tags:
        - Web API
      summary: users set Presence
      description: Manually sets user presence.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                presence:
                  type: string
                  description: Either `auto` or `away`
                  example: <string>
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `users:write`'
          example: <string>
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
                error: <string>
                callstack: <string>
  /views.publish:
    get:
      tags:
        - Web API
      summary: views publish
      description: Publish a static view for a User.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `none`'
          example: <string>
        - name: user_id
          in: query
          schema:
            type: string
          description: (Required) `id` of the user you want publish a view to.
          example: <string>
        - name: view
          in: query
          schema:
            type: string
          description: >-
            (Required) A [view payload](/reference/surfaces/views). This must be
            a JSON-encoded string.
          example: <string>
        - name: hash
          in: query
          schema:
            type: string
          description: >-
            A string that represents view state to protect against possible race
            conditions.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /views.push:
    get:
      tags:
        - Web API
      summary: views push
      description: Push a view onto the stack of a root view.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `none`'
          example: <string>
        - name: trigger_id
          in: query
          schema:
            type: string
          description: (Required) Exchange a trigger to post to the user.
          example: <string>
        - name: view
          in: query
          schema:
            type: string
          description: >-
            (Required) A [view payload](/reference/surfaces/views). This must be
            a JSON-encoded string.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /views.update:
    get:
      tags:
        - Web API
      summary: views update
      description: Update an existing view.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: '(Required) Authentication token. Requires scope: `none`'
          example: <string>
        - name: view_id
          in: query
          schema:
            type: string
          description: >-
            A unique identifier of the view to be updated. Either `view_id` or
            `external_id` is required.
          example: <string>
        - name: external_id
          in: query
          schema:
            type: string
          description: >-
            A unique identifier of the view set by the developer. Must be unique
            for all views on a team. Max length of 255 characters. Either
            `view_id` or `external_id` is required.
          example: <string>
        - name: view
          in: query
          schema:
            type: string
          description: >-
            A [view object](/reference/surfaces/views). This must be a
            JSON-encoded string.
          example: <string>
        - name: hash
          in: query
          schema:
            type: string
          description: >-
            A string that represents view state to protect against possible race
            conditions.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /workflows.stepCompleted:
    get:
      tags:
        - Web API
      summary: workflows step Completed
      description: Indicate that an app's step in a workflow completed execution.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `workflow.steps:execute`
          example: <string>
        - name: workflow_step_execute_id
          in: query
          schema:
            type: string
          description: >-
            (Required) Context identifier that maps to the correct workflow step
            execution.
          example: <string>
        - name: outputs
          in: query
          schema:
            type: string
          description: >-
            Key-value object of outputs from your step. Keys of this object
            reflect the configured `key` properties of your
            [`outputs`](/reference/workflows/workflow_step#output) array from
            your `workflow_step` object.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /workflows.stepFailed:
    get:
      tags:
        - Web API
      summary: workflows step Failed
      description: Indicate that an app's step in a workflow failed to execute.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `workflow.steps:execute`
          example: <string>
        - name: workflow_step_execute_id
          in: query
          schema:
            type: string
          description: >-
            (Required) Context identifier that maps to the correct workflow step
            execution.
          example: <string>
        - name: error
          in: query
          schema:
            type: string
          description: >-
            (Required) A JSON-based object with a `message` property that should
            contain a human readable error message.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
  /workflows.updateStep:
    get:
      tags:
        - Web API
      summary: workflows update Step
      description: Update the configuration for a workflow extension step.
      parameters:
        - name: token
          in: header
          schema:
            type: string
          description: >-
            (Required) Authentication token. Requires scope:
            `workflow.steps:execute`
          example: <string>
        - name: workflow_step_edit_id
          in: query
          schema:
            type: string
          description: >-
            (Required) A context identifier provided with `view_submission`
            payloads used to call back to `workflows.updateStep`.
          example: <string>
        - name: inputs
          in: query
          schema:
            type: string
          description: >-
            A JSON key-value map of inputs required from a user during
            configuration. This is the data your app expects to receive when the
            workflow step starts. **Please note**: the embedded variable format
            is set and replaced by the workflow system. You cannot create custom
            variables that will be replaced at runtime. [Read more about
            variables in workflow steps here](/workflows/steps#variables).
          example: <string>
        - name: outputs
          in: query
          schema:
            type: string
          description: >-
            An JSON array of output objects used during step execution. This is
            the data your app agrees to provide when your workflow step was
            executed.
          example: <string>
        - name: step_name
          in: query
          schema:
            type: string
          description: >-
            An optional field that can be used to override the step name that is
            shown in the Workflow Builder.
          example: <string>
        - name: step_image_url
          in: query
          schema:
            type: string
          description: >-
            An optional field that can be used to override app image that is
            shown in the Workflow Builder.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ok: <boolean>
